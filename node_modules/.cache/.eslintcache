[{"/Users/markgire/Desktop/loveyourbirth/src/index.js":"1","/Users/markgire/Desktop/loveyourbirth/src/App.js":"2","/Users/markgire/Desktop/loveyourbirth/src/reportWebVitals.js":"3","/Users/markgire/Desktop/loveyourbirth/src/components/About.js":"4","/Users/markgire/Desktop/loveyourbirth/src/components/Contact.js":"5","/Users/markgire/Desktop/loveyourbirth/src/components/ContactForm.js":"6","/Users/markgire/Desktop/loveyourbirth/src/components/MessageForm.js":"7","/Users/markgire/Desktop/loveyourbirth/src/components/Home.js":"8","/Users/markgire/Desktop/loveyourbirth/src/components/Newborn.js":"9","/Users/markgire/Desktop/loveyourbirth/src/components/Prenatal.js":"10","/Users/markgire/Desktop/loveyourbirth/src/components/Birth.js":"11","/Users/markgire/Desktop/loveyourbirth/src/components/Resources.js":"12","/Users/markgire/Desktop/loveyourbirth/src/components/Assistant.js":"13","/Users/markgire/Desktop/loveyourbirth/src/components/NavMenu.js":"14","/Users/markgire/Desktop/loveyourbirth/src/components/ToolbarItem.js":"15","/Users/markgire/Desktop/loveyourbirth/src/components/MessageModal.js":"16"},{"size":500,"mtime":1630639502117,"results":"17","hashOfConfig":"18"},{"size":9111,"mtime":1673101770311,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1630639502119,"results":"20","hashOfConfig":"18"},{"size":4454,"mtime":1673101792377,"results":"21","hashOfConfig":"18"},{"size":4739,"mtime":1657596408939,"results":"22","hashOfConfig":"18"},{"size":31049,"mtime":1657595650286,"results":"23","hashOfConfig":"18"},{"size":4661,"mtime":1657595650286,"results":"24","hashOfConfig":"18"},{"size":1997,"mtime":1673101324252,"results":"25","hashOfConfig":"18"},{"size":1496,"mtime":1638328000962,"results":"26","hashOfConfig":"18"},{"size":1702,"mtime":1638328000963,"results":"27","hashOfConfig":"18"},{"size":1565,"mtime":1638328000960,"results":"28","hashOfConfig":"18"},{"size":2309,"mtime":1632280816559,"results":"29","hashOfConfig":"18"},{"size":3580,"mtime":1643515031665,"results":"30","hashOfConfig":"18"},{"size":2915,"mtime":1673066616019,"results":"31","hashOfConfig":"18"},{"size":3691,"mtime":1673069039449,"results":"32","hashOfConfig":"18"},{"size":3579,"mtime":1673073266995,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1e9dvp1",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":4,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":4,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"71","usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/markgire/Desktop/loveyourbirth/src/index.js",[],["74","75"],"/Users/markgire/Desktop/loveyourbirth/src/App.js",["76","77","78"],"/Users/markgire/Desktop/loveyourbirth/src/reportWebVitals.js",[],"/Users/markgire/Desktop/loveyourbirth/src/components/About.js",["79"],"/Users/markgire/Desktop/loveyourbirth/src/components/Contact.js",["80","81","82","83","84","85","86","87","88"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, Paper, Typography, CardHeader, IconButton, Button } from \"@material-ui/core\";\nimport '@fontsource/roboto';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport EmailIcon from '@material-ui/icons/Email';\nimport LocalPhoneIcon from '@material-ui/icons/LocalPhone';\n\nconst Contact = (props) => {\n\n    const [phoneState, setPhoneState] = useState(false)\n\n    //Nav Rendering for Smartphone vs Laptop\n  const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n  const updateMedia = () => {\n    setDesktop(window.innerWidth > 1000);\n  };\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateMedia);\n    return () => window.removeEventListener(\"resize\", updateMedia);\n  });\n\n    //Style\n    const style = {\n        card: {\n            marginTop: 0,\n            marginBottom: 0,\n            paddingTop: (!isDesktop) ? 0 : 20,\n            paddingBottom: 40,\n            backgroundColor: \"#A9D1EA\",\n            color: \"white\",\n            borderRadius: 5\n        },\n        emailSection: {\n            marginTop: (!isDesktop) ? 50 : 20,\n        },\n        emailIcon: {\n            color: \"white\",\n            position: \"flex\",\n            alignItems: \"right\",\n        },\n        facebookIcon: {\n            color: \"white\",\n            position: \"flex\",\n            alignItems: \"left\",\n        },\n        phoneIcon: {\n            color: \"white\",\n            position: \"flex\",\n            alignItems: \"left\",\n        },\n        subheader: {\n            fontSize: 20,\n            color: \"white\",\n            fontWeight: \"bold\",\n            fontStyle: \"italic\",\n            marginBottom: 20\n        },\n        patientPortal: {\n            color: \"white\",\n            fontSize: (!isDesktop) ? 14 : 20,\n            textDecoration: 'none',\n            padding: (!isDesktop) ? 20 : 50,\n            fontWeight: \"bold\"\n        },\n        patientConsult: {\n            color: \"white\", \n            fontSize: (!isDesktop) ? 14 : 20, \n            background: \"none\", \n            border: \"none\", \n            paddingBottom: !(isDesktop) ? 50 : 15,\n            fontWeight: \"bold\"\n        }\n    }\n    return (\n    <Paper style={style.card} elevation=\"5\">\n        <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n            {(!isDesktop)\n            ?\n            <>\n            <Grid item md=\"4\" xs=\"12\" style={style.emailSection}>\n                <button style={style.patientConsult}>Not Accepting New Patients</button>\n            </Grid>\n            <Grid item md=\"4\" xs=\"12\">\n                <a href=\"https://clientcareeast.net/Account/LogOn?ReturnUrl=%2f\" target=\"_blank\" style={style.patientPortal}> Patient Portal Login </a>\n            </Grid>\n            <Grid item md=\"12\" xs=\"12\" style={style.emailSection}>\n                <Typography style={{ fontSize: (!isDesktop) ? 14 : 20, marginBottom: \"5%\" }}>loveyourbirthmidwifery@gmail.com</Typography>\n            </Grid>\n            <Grid item md=\"1\" xs=\"4\">\n                <IconButton onClick={props.openMessage}>\n                    <EmailIcon style={style.emailIcon}/>\n                </IconButton>\n            </Grid>\n            <Grid item md=\"1\" xs=\"4\">\n            <a href=\"https://www.facebook.com/Loveyourbirthmidwifery/\" target=\"_blank\" style={{ textDecoration: \"none\" }}>\n                <IconButton>\n                    <FacebookIcon style={style.facebookIcon}/>\n                </IconButton>\n            </a>\n            </Grid>\n            </>\n            :\n            <>\n            <Grid item md=\"4\" xs=\"12\" style={style.emailSection}>\n                <button style={style.patientConsult}>Not Accepting New Patients</button>\n            </Grid>\n            <Grid item md=\"1\" xs=\"4\">\n                <IconButton onClick={props.openMessage}>\n                    <EmailIcon style={style.emailIcon}/>\n                </IconButton>\n            </Grid>\n            <Grid item md=\"1\" xs=\"4\">\n            <a href=\"https://www.facebook.com/Loveyourbirthmidwifery/\" target=\"_blank\" style={{ textDecoration: \"none\" }}>\n                <IconButton>\n                    <FacebookIcon style={style.facebookIcon}/>\n                </IconButton>\n            </a>\n            </Grid>\n            <Grid item md=\"4\" xs=\"12\">\n                <a href=\"https://clientcareeast.net/Account/LogOn?ReturnUrl=%2f\" target=\"_blank\" style={style.patientPortal}> Patient Portal Login </a>\n            </Grid>\n            <Grid item md=\"12\" xs=\"12\" style={style.emailSection}>\n                <Typography style={{ fontWeight: \"bold\" }}>loveyourbirthmidwifery@gmail.com</Typography>\n            </Grid>\n            </>}\n            \n        </Grid>\n    </Paper>\n    )\n}\n\nexport default Contact;","/Users/markgire/Desktop/loveyourbirth/src/components/ContactForm.js",["89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, Typography, IconButton, LinearProgress, Checkbox } from \"@material-ui/core\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport Favorite from '@material-ui/icons/Favorite';\nimport QuestionData from \"../utilities/questions.json\";\nimport emailjs from 'emailjs-com';\nimport '@fontsource/roboto';\nimport { Email, QuestionAnswerSharp } from \"@material-ui/icons\";\n\nconst ContactForm = (props) => {\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n    //Month Selector\n    const [selectMonth, setSelectMonth] = useState(\"empty\");\n\n    const selectDueDateMonth = (e, value) => {\n        e.preventDefault();\n        setSelectMonth(value);\n        handleDueDate(e, value);\n    }\n    //Checkbox\n    const label = { inputProps: { 'aria-label': 'Checkbox demo' } };\n    const day = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n    const time = [\"Morning\", \"Afternoon\", \"Evening\"]\n    const [selectDays, setSelectDays] = useState({\n            sunday: false,\n            monday: false,\n            tuesday: false,\n            wednesday: false,\n            thursday: false,\n            friday: false,\n            saturday: false\n        })\n\n    const checkSunday = () => {\n        if(!selectDays.sunday) {\n            setSelectDays({ ...selectDays, sunday: true })\n        } else {\n            setSelectDays({ ...selectDays, sunday: false })\n        }\n    } \n    const checkMonday = () => {\n        if(!selectDays.monday) {\n            setSelectDays({ ...selectDays, monday: true })\n        } else {\n            setSelectDays({ ...selectDays, monday: false })\n        }\n    }\n    const checkTuesday = () => {\n        if(!selectDays.tuesday) {\n            setSelectDays({ ...selectDays, tuesday: true })\n        } else {\n            setSelectDays({ ...selectDays, tuesday: false })\n        }\n    }\n    const checkWednesday = () => {\n        if(!selectDays.wednesday) {\n            setSelectDays({ ...selectDays, wednesday: true })\n        } else {\n            setSelectDays({ ...selectDays, wednesday: false })\n        }\n    }\n    const checkThursday = () => {\n        if(!selectDays.thursday) {\n            setSelectDays({ ...selectDays, thursday: true })\n        } else {\n            setSelectDays({ ...selectDays, thursday: false })\n        }\n    }\n    const checkFriday = () => {\n        if(!selectDays.friday) {\n            setSelectDays({ ...selectDays, friday: true })\n        } else {\n            setSelectDays({ ...selectDays, friday: false })\n        }\n    }\n    const checkSaturday = () => {\n        if(!selectDays.saturday) {\n            setSelectDays({ ...selectDays, saturday: true })\n        } else {\n            setSelectDays({ ...selectDays, saturday: false })\n        }\n    }\n\n    const [selectTime, setSelectTime] = useState({\n        morning: false,\n        afternoon: false,\n        evening: false\n    })\n\n    const checkMorning = () => {\n        if(!selectTime.morning) {\n            setSelectTime({ ...selectTime, morning: true})\n        } else {\n            setSelectTime({ ...selectTime, morning: false})\n        }\n    }\n    const checkAfternoon = () => {\n        if(!selectTime.afternoon) {\n            setSelectTime({ ...selectTime, afternoon: true})\n        } else {\n            setSelectTime({ ...selectTime, afternoon: false})\n        }\n    }\n    const checkEvening = () => {\n        if(!selectTime.evening) {\n            setSelectTime({ ...selectTime, evening: true})\n        } else {\n            setSelectTime({ ...selectTime, evening: false})\n        }\n    }\n    \n    //question # state\n    const [questionNum, setQuestionNum] = useState(0)\n\n    const [errValidation, setErrValidation] = useState({\n        name: false,\n        city: false,\n        email: false,\n        phone: false\n    })\n\n    //progress bar\n    const point = 100/QuestionData.data.length\n    const [progress, setProgress] = useState(point)\n\n    const nextQuestion = (e) => {\n        e.preventDefault();\n        if (questionNum === 0 && answer.name == \"\")\n        {\n            setErrValidation({ ...errValidation, name: true})\n        } else if (questionNum == 0 && answer.city == \"\") {\n            setErrValidation({ ...errValidation, city: true})\n        } else if (questionNum === 1 && answer.email == \"\") {\n            setErrValidation({ ...errValidation, email: true})\n        } else if (questionNum === 1 && answer.phone == \"\") {\n            setErrValidation({ ...errValidation, phone: true})\n        } else {\n            setQuestionNum(questionNum + 1)\n            setProgress(progress + point)\n        }\n    }\n\n    const prevQuestion = (e) => {\n        e.preventDefault();\n        setQuestionNum(questionNum - 1)\n        setProgress(progress - point)\n    }\n\n    const [answer, setAnswer] = useState({\n        name: \"\",\n        city: \"\",\n        phone: \"\",\n        email: \"\",\n        contact: \"\",\n        firstBirth: \"\",\n        dueDate: \"\",\n        envision: \"\",\n        why: \"\",\n        midwifery: \"\",\n        concerns: \"\",\n        refer: \"\",\n        consultPreference: \"\"\n    })\n\n    \n\n    const handleAnswerName = (e) => {\n        setAnswer({ ...answer, name: e.target.value })\n    }\n    const handleAnswerPhone = (e) => {\n        setAnswer({ ...answer, phone: e.target.value })\n    }\n    const handleAnswerEmail = (e) => {\n        setAnswer({ ...answer, email: e.target.value })\n    }\n    const handleAnswerCity = (e) => {\n        setAnswer({ ...answer, city: e.target.value })\n    }\n    const handleAnswerContactPref = (e, selection) => {\n        e.preventDefault();\n        setAnswer({ ...answer, contact: selection})\n    }\n    const handleAnswerFirstBirth = (e, selection) => {\n        e.preventDefault();\n        setAnswer({ ...answer, firstBirth: selection})\n    }\n    const handleDueDate = (e, value) => {\n        e.preventDefault();\n        setAnswer({ ...answer, dueDate: value })\n    }\n    const handleAnswerEnvision = (e) => {\n        e.preventDefault();\n        setAnswer({ ...answer, envision: e.target.value })\n    }\n    const handleAnswerWhy = (e) => {\n        e.preventDefault();\n        setAnswer({ ...answer, why: e.target.value })\n    }\n    const handleAnswerMidwifery = (e) => {\n        e.preventDefault();\n        setAnswer({ ...answer, midwifery: e.target.value })\n    }\n    const handleAnswerConcerns = (e) => {\n        e.preventDefault();\n        setAnswer({ ...answer, concerns: e.target.value })\n    }\n    const handleAnswerRefer = (e) => {\n        e.preventDefault();\n        setAnswer({ ...answer, refer: e.target.value })\n    }\n\n    const handleConsultPreference = (e, selection) => {\n        e.preventDefault();\n        setAnswer({ ...answer, consultPreference: selection})\n    }\n    const sendEmail = (e) => {\n        e.preventDefault();\n        emailjs.send('service_sa2sv31', 'template_aldpnbc', \n        { \n            name: answer.name, \n            city: answer.city, \n            phone: answer.phone,\n            email: answer.email, \n            contact: answer.contact,\n            firstBirth: answer.firstBirth,\n            dueDate: answer.dueDate,\n            envision: answer.envision,\n            why: answer.why,\n            midwifery: answer.midwifery,\n            concerns: answer.concerns,\n            refer: answer.refer,\n            days: Object.keys(selectDays).filter(key => selectDays[key]),\n            time: Object.keys(selectTime).filter(key => selectTime[key]),\n            preference: answer.consultPreference\n        }, 'user_VCNwVyQVStaLfnvdfDv4t')\n        .then((result) => {\n            console.log(result.text);\n            props.successConsult();\n        }, (error) => {\n            console.log(error.text);\n        });\n        props.closeForm();\n    };\n    \n    //Style\n    const style = {\n        card: {\n            display: 'fixed',  \n            justifyContent:'center', \n            alignItems:'center',\n            height: (!isDesktop) ? \"60%\" : \"80%\",\n            width: (!isDesktop) ? \"97%\" : \"auto\",\n            margin: (!isDesktop) ? 0 : 100,\n            marginTop: (!isDesktop) ? 0 : 100,\n            textAlign: \"center\",\n            border: \"5px solid purple\",\n            backgroundColor: \"white\"\n        },\n        title: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        question: {\n            height: (!isDesktop) ? 60 : 80,\n            marginTop: 20,\n            marginBottom: (!isDesktop) ? 15 : 10,\n            color: \"purple\",\n            fontSize: (!isDesktop) ? 15 : 30,\n            fontWeight: \"bold\"\n        },\n        answerText: {\n            marginTop: (!isDesktop) ? 10 : 20,\n            marginBottom: (!isDesktop) ? 10 : 10,\n            color: \"purple\",\n            fontSize: (!isDesktop) ? 10 : 20,\n            fontWeight: \"bold\"\n        },\n        answerTextErr: {\n            marginTop: (!isDesktop) ? 10 : 20,\n            marginBottom: (!isDesktop) ? 10 : 10,\n            color: \"red\",\n            fontSize: (!isDesktop) ? 10 : 20,\n            fontWeight: \"bold\"\n        },\n        answerTextBold: {\n            marginTop: (!isDesktop) ? 10 : 20,\n            marginBottom: (!isDesktop) ? 10 : 10,\n            color: \"purple\",\n            fontSize: (!isDesktop) ? 10 : 20,\n        },\n        input: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        button: {\n            margin: \"5%\",\n            marginBottom: 20,\n            border: \"1px solid purple\"\n        },\n        activeButton: {\n            margin: \"5%\",\n            marginBottom: 20,\n            backgroundColor: \"purple\",\n            color: \"white\"\n\n        },\n        submit: { \n            // position: \"absolute\", \n            // bottom: (!isDesktop) ? \"40%\" : \"10%\",\n            color: \"white\",\n            backgroundColor: \"purple\",\n            marginTop: 20\n        },\n        next: { \n            // position: \"absolute\", \n            // bottom: (!isDesktop) ? \"40%\" : \"10%\",\n            color: \"white\",\n            backgroundColor: \"#d9b3ff\",\n            marginTop: 20\n        },\n        questionSection: {\n            height: (!isDesktop) ? 200 : 400,\n            marginBottom: 100\n        },\n        questionSection2: {\n            height: (!isDesktop) ? 400 : 400,\n            marginBottom: \"3%\",\n            paddingLeft: (!isDesktop) ? 10: 0\n        },\n        questionSection3: {\n            height: (!isDesktop) ? 200: 300\n        },\n        smallInput: {\n            width: (!isDesktop) ? 200: 350, \n        },\n        smallInputErr: {\n            width: (!isDesktop) ? 200: 350,\n            border: \"1px solid red\"\n        },\n        largeInput: {\n            width: (!isDesktop) ? \"90%\": 500,\n            height: (!isDesktop) ? \"60%\": 200,\n            margin: (!isDesktop) ? \"5%\": \"5%\"\n        },\n        progress: {\n            marginLeft: \"3%\",\n            marginRight: \"3%\",\n            width: \"100%\"\n        },\n        nextButtonActive: {\n            color: \"blue\"\n        },\n        nextButtonDisabled: {\n            color: \"white\"\n        },\n        checkbox: {\n            fontSize: (!isDesktop) ? 15 : 20,\n            alignText: \"right\"\n        },\n        checkitem: {\n            fontSize: (!isDesktop) ? 15 : 20,\n            alignText: \"left\"\n        },\n        monthButton: {\n            border: \"1px solid purple\",\n            margin: (!isDesktop) ? 5 : \"1%\",\n            width: (!isDesktop) ? 30 : 150,\n            height: (!isDesktop) ? 10 : 40,\n            fontSize: (!isDesktop) ? 8 : 20,\n        },\n        activeMonthButton: {\n            backgroundColor: \"purple\",\n            border: \"1px solid purple\",\n            margin: (!isDesktop) ? 5 : \"1%\",\n            color: \"white\",\n            width: (!isDesktop) ? 30 : 150,\n            height: (!isDesktop) ? 10 : 40,\n            fontSize: (!isDesktop) ? 8 : 20\n        },\n        idkButton: {\n            border: \"1px solid purple\",\n            margin: (!isDesktop) ? 5 : \"1%\",\n            width: (!isDesktop) ? 100 : 250,\n            height: (!isDesktop) ? 10 : 40,\n            fontSize: (!isDesktop) ? 8 : 20,\n        },\n        activeIdkButton: {\n            backgroundColor: \"purple\",\n            border: \"1px solid purple\",\n            margin: (!isDesktop) ? 5 : \"1%\",\n            color: \"white\",\n            width: (!isDesktop) ? 100 : 250,\n            height: (!isDesktop) ? 10 : 40,\n            fontSize: (!isDesktop) ? 8 : 20\n        }\n    }\n\n    const handleAnswer = () => {\n        switch(questionNum) {\n            case 1:\n                return (\n                <>\n                    <Typography style={(!errValidation.email) ? style.answerText : style.answerTextErr}>{(!errValidation.email) ? \"Email\" : \"*Email\"}</Typography> <input style={(!errValidation.email) ? style.smallInput : style.smallInputErr} value={answer.email} onChange={handleAnswerEmail} />\n                    <Typography style={(!errValidation.phone) ? style.answerText : style.answerTextErr}>{(!errValidation.phone) ? \"Phone\" : \"*Phone\"}</Typography> <input style={(!errValidation.phone) ? style.smallInput : style.smallInputErr} value={answer.email} value={answer.phone} onChange={handleAnswerPhone} />  \n                    <Typography style={style.answerText}>Preferred Method of Contact</Typography> <Button onClick={(e, value) => handleAnswerContactPref(e, \"Email\")} style={(answer.contact === \"Email\") ? style.activeButton : style.button}>Email</Button><Button onClick={(e, value) => handleAnswerContactPref(e, \"Phone\")} style={(answer.contact === \"Phone\") ? style.activeButton : style.button}>Phone</Button>\n                </>\n                )\n            case 2:\n                return (\n                <div style={{ paddingTop: (!isDesktop) ? 40 : 40}}>\n                    <Button onClick={(e, value) => handleAnswerFirstBirth(e, \"Yes\")} style={(answer.firstBirth === \"Yes\") ? style.activeButton : style.button}>Yes</Button>\n                    <Button onClick={(e, value) => handleAnswerFirstBirth(e, \"No\")} style={(answer.firstBirth === \"No\") ? style.activeButton : style.button}>No</Button>\n                </div>)\n            case 3:\n                return (\n                    <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    >\n                        <Grid item md=\"12\">\n                            <Button \n                            onClick={(e, value) => selectDueDateMonth(e, \"January\")} \n                            style={(selectMonth != \"January\") ? style.monthButton : style.activeMonthButton}>January</Button>\n                            <Button \n                            onClick={(e, value) => selectDueDateMonth(e, \"February\")} \n                            style={(selectMonth != \"February\") ? style.monthButton : style.activeMonthButton}>February</Button>\n                            <Button \n                            onClick={(e, value) => selectDueDateMonth(e, \"March\")} \n                            style={(selectMonth != \"March\") ? style.monthButton : style.activeMonthButton}>March</Button>\n                            \n                        </Grid>\n                        <Grid item md=\"12\">\n                            <Button \n                            onClick={(e, value) => selectDueDateMonth(e, \"April\")} \n                            style={(selectMonth != \"April\") ? style.monthButton : style.activeMonthButton}>April</Button>\n                            <Button \n                            onClick={(e, value) => selectDueDateMonth(e, \"May\")} \n                            style={(selectMonth != \"May\") ? style.monthButton : style.activeMonthButton}>May</Button>\n                            <Button \n                            onClick={(e, value) => selectDueDateMonth(e, \"June\")} \n                            style={(selectMonth != \"June\") ? style.monthButton : style.activeMonthButton}>June</Button>\n\n                            \n                        </Grid>\n                        <Grid item md=\"12\">\n                            <Button \n                            onClick={(e, value) => selectDueDateMonth(e, \"July\")} \n                            style={(selectMonth != \"July\") ? style.monthButton : style.activeMonthButton}>July</Button>\n                            <Button \n                            onClick={(e, value) => selectDueDateMonth(e, \"August\")} \n                            style={(selectMonth != \"August\") ? style.monthButton : style.activeMonthButton}>August</Button>\n                            <Button \n                            onClick={(e, value) => selectDueDateMonth(e, \"September\")} \n                            style={(selectMonth != \"September\") ? style.monthButton : style.activeMonthButton}>September</Button>\n                            \n                        </Grid>\n                        <Grid item md=\"12\">\n                            <Button \n                            onClick={(e, value) => selectDueDateMonth(e, \"October\")} \n                            style={(selectMonth != \"October\") ? style.monthButton : style.activeMonthButton}>October</Button>\n                            <Button \n                            onClick={(e, value) => selectDueDateMonth(e, \"November\")} \n                            style={(selectMonth != \"November\") ? style.monthButton : style.activeMonthButton}>November</Button>\n                            <Button \n                            onClick={(e, value) => selectDueDateMonth(e, \"December\")} \n                            style={(selectMonth != \"December\") ? style.monthButton : style.activeMonthButton}>December</Button>\n                        </Grid>\n                        <Grid item md=\"12\">\n                            <Button \n                            onClick={(e, value) => selectDueDateMonth(e, \"I Don't Know\")} \n                            style={(selectMonth != \"I Don't Know\") ? style.idkButton : style.activeIdkButton}>I Don't Know</Button>\n                        </Grid>\n                        \n                    </Grid>\n                )\n            case 4:\n                return (<>\n                    <textarea style={style.largeInput} value={answer.why} onChange={handleAnswerWhy}></textarea>\n                </>)\n            case 5:\n                return (<>\n                    <textarea style={style.largeInput} value={answer.envision} onChange={handleAnswerEnvision}></textarea>\n                </>)\n            \n            case 6:\n                return (<>\n                    <textarea style={style.largeInput} value={answer.midwifery} onChange={handleAnswerMidwifery}></textarea>\n                </>)\n            case 7:\n                return (<>\n                    <textarea style={style.largeInput} value={answer.concerns} onChange={handleAnswerConcerns}></textarea>\n                </>)\n            case 8:\n                return (<>\n                    <input style={style.smallInput} value={answer.refer} onChange={handleAnswerRefer} />\n                </>)\n            case 9: \n                return (<>\n                    <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                        <Grid item md=\"6\" xs=\"5\">\n                            <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            onClick={checkSunday}\n                            >\n                                <Checkbox {...label} \n                                checked={selectDays.sunday} icon={<FavoriteBorder  style={style.checkbox}/>} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                                <Typography style={style.checkitem}>Sunday</Typography>\n                            </Grid>\n                            <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            onClick={checkMonday} \n                            >\n                                <Checkbox {...label}\n                                checked={selectDays.monday} icon={<FavoriteBorder  style={style.checkbox}/>} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                                <Typography style={style.checkitem}>Monday</Typography>\n                            </Grid>\n                            <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            onClick={checkTuesday} \n                            >\n                                <Checkbox {...label}\n                                checked={selectDays.tuesday} icon={<FavoriteBorder  style={style.checkbox}/>} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                                <Typography style={style.checkitem}>Tuesday</Typography>\n                            </Grid>\n                            <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            onClick={checkWednesday} \n                            >\n                                <Checkbox {...label}\n                                checked={selectDays.wednesday} icon={<FavoriteBorder  style={style.checkbox}/>} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                                <Typography style={style.checkitem}>Wednesday</Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid item md=\"6\" xs=\"5\">\n                            <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            onClick={checkThursday} \n                            >\n                                <Checkbox {...label}\n                                checked={selectDays.thursday} icon={<FavoriteBorder  style={style.checkbox}/>} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                                <Typography style={style.checkitem}>Thursday</Typography>\n                            </Grid>\n                            <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            onClick={checkFriday} \n                            >\n                                <Checkbox {...label} \n                                checked={selectDays.friday} icon={<FavoriteBorder  style={style.checkbox}/>} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                                <Typography style={style.checkitem}>Friday</Typography>\n                            </Grid>\n                            <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            onClick={checkSaturday} \n                            >\n                                <Checkbox {...label}\n                                checked={selectDays.saturday} icon={<FavoriteBorder  style={style.checkbox}/>} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                                <Typography style={style.checkitem}>Saturday</Typography>\n                            </Grid>\n\n                        </Grid>\n                    </Grid>\n            </>)\n        case 10:\n            return (<>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    onClick={checkMorning}\n                    >\n                        <Checkbox {...label} \n                         checked={selectTime.morning} icon={<FavoriteBorder  style={style.checkbox} />} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                        <Typography style={style.checkitem}>Morning</Typography>\n                </Grid>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    onClick={checkAfternoon}\n                    >\n                        <Checkbox {...label}\n                         checked={selectTime.afternoon} icon={<FavoriteBorder  style={style.checkbox} />} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                        <Typography style={style.checkitem}>Afternoon</Typography>\n                </Grid>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    onClick={checkEvening} \n                    >\n                        <Checkbox {...label} \n                        checked={selectTime.evening} icon={<FavoriteBorder  style={style.checkbox} />} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                        <Typography style={style.checkitem}>Evening</Typography>\n                </Grid>\n\n            </>)\n            case 11:\n                return (<>\n                    <div style={{ paddingTop: (!isDesktop) ? 40 : 40}}>\n                        <Button onClick={(e, value) => handleConsultPreference(e, \"In Person\")} style={(answer.consultPreference === \"In Person\") ? style.activeButton : style.button}>In Person</Button>\n                        <Button onClick={(e, value) => handleConsultPreference(e, \"Phone\")} style={(answer.consultPreference === \"Phone\") ? style.activeButton : style.button}>Phone</Button>\n                    </div>\n                </>)\n            case 12:\n                return (<>\n                <>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        >\n                            <Typography style={style.answerTextBold}> Name: </Typography>\n                            <Typography style={style.answerText}>{answer.name}</Typography>\n                    </Grid>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        >\n                            <Typography style={style.answerTextBold}> Email: </Typography>\n                            <Typography style={style.answerText}>{answer.email}</Typography>\n                    </Grid>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        >\n                            <Typography style={style.answerTextBold}> Phone: </Typography>\n                            <Typography style={style.answerText}>{answer.phone}</Typography>\n                    </Grid>\n                    \n                </>\n                </>)\n            default:\n                return (\n                <>\n                    <Typography style={(!errValidation.name) ? style.answerText : style.answerTextErr}>{(!errValidation.name) ? \"Name\" : \"*Name\"}</Typography> <input style={(!errValidation.name) ? style.smallInput : style.smallInputErr} value={answer.name} onChange={handleAnswerName}/>\n                    <Typography style={(!errValidation.city) ? style.answerText : style.answerTextErr}>{(!errValidation.city) ? \"City, State\" : \"*City, State\"}</Typography> <input style={(!errValidation.city) ? style.smallInput : style.smallInputErr} value={answer.name} value={answer.city} onChange={handleAnswerCity} />\n                </>)\n            \n        }\n    }\n    \n    return (\n        <div>\n            <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\"  style={{ paddingLeft: 0, paddingRight: (!isDesktop) ? \"4%\" : 0 }}>\n                <Grid container direction=\"row\" justifyContent=\"left\">\n                    <IconButton>\n                        <CloseIcon onClick={props.closeForm} />\n                    </IconButton>\n                        <LinearProgress variant=\"determinate\" value={progress} style={style.progress} />\n                </Grid>\n                <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                    <Grid item md=\"1\" xs=\"1\">\n                        {(questionNum === 0) \n                        ? <IconButton> \n                            <ArrowBackIcon style={style.nextButtonDisabled}/>\n                        </IconButton>\n                        : <IconButton onClick={prevQuestion}> \n                            <ArrowBackIcon style={style.nextButtonActive} />\n                         </IconButton>}\n                    </Grid>\n                    <Grid item md=\"10\" xs=\"10\" style={style.questionSection2}>\n                        <Typography style={style.question}>{QuestionData.data[questionNum].question}</Typography>\n                        <div style={style.questionSection3}>\n                            {handleAnswer()}\n                        </div>\n                        <Grid item md=\"12\" xs=\"12\">\n                            {(questionNum === QuestionData.data.length - 1) \n                            ? <Button onClick={sendEmail} style={style.submit}>Submit</Button> \n                            : <Button onClick={nextQuestion} style={style.next}>Next</Button>}\n                        </Grid> \n                    </Grid>\n                    <Grid item md=\"1\" xs=\"1\">\n                        {(questionNum === QuestionData.data.length - 1) \n                        ? <IconButton>\n                            <ArrowForwardIcon style={style.nextButtonDisabled}/>\n                        </IconButton>\n                        : <IconButton onClick={nextQuestion}>\n                            <ArrowForwardIcon style={style.nextButtonActive}/>\n                          </IconButton>}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default ContactForm;","/Users/markgire/Desktop/loveyourbirth/src/components/MessageForm.js",["113"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, Typography, Card, IconButton } from \"@material-ui/core\";\nimport '@fontsource/roboto';\nimport emailjs from 'emailjs-com';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst MessageForm = (props) => {\n\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n\n    //Send Email\n    const [message, setMessage] = useState({\n            name: \"\",\n            email: \"\",\n            phone: \"\",\n            text: \"\"\n        })\n    const handleMessageName = (e) => {\n        setMessage({ ...message, name: e.target.value })\n    }\n    const handleMessageEmail = (e) => {\n        setMessage({ ...message, email: e.target.value })\n    }\n    const handleMessagePhone = (e) => {\n        setMessage({ ...message, phone: e.target.value })\n    }\n    const handleMessageText = (e) => {\n        setMessage({ ...message, text: e.target.value })\n    }\n\n    const sendEmail = (e) => {\n        e.preventDefault();\n        emailjs.send('service_sa2sv31', 'template_66y7sf6', { name: message.name, email: message.email, phone: message.phone, text: message.text}, 'user_VCNwVyQVStaLfnvdfDv4t')\n        .then((result) => {\n            console.log(result.text);\n            props.successMessage();\n        }, (error) => {\n            console.log(error.text);\n        });\n        props.closeMessage();\n    };\n    //Style\n    const style = {\n        card: {\n            display: 'fixed',  \n            justifyContent:'center', \n            alignItems:'center',\n            height: (!isDesktop) ? \"60%\" : \"80%\",\n            width: (!isDesktop) ? \"97%\" : \"auto\",\n            margin: (!isDesktop) ? 0 : 100,\n            marginTop: (!isDesktop) ? 0 : 100,\n            textAlign: \"center\",\n            border: \"5px solid pink\",\n            backgroundColor: \"white\"\n        },\n        title: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        input: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        button: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        submit: { \n            // position: \"absolute\", \n            // bottom: (!isDesktop) ? \"40%\" : \"10%\",\n            color: \"white\",\n            backgroundColor: \"#FDB7C2\"\n        },\n        questionSection: {\n            height: (!isDesktop) ? 200 : 400,\n            marginBottom: 100\n        },\n        questionSection2: {\n            height: (!isDesktop) ? 100 : 100,\n            marginBottom: \"3%\"\n        },\n        questionSection3: {\n            height: (!isDesktop) ? 200: 500\n        },\n        smallInput: {\n            width: (!isDesktop) ? 200: 350,\n            \n        },\n        largeInput: {\n            width: (!isDesktop) ? \"100%\": 500,\n            height: (!isDesktop) ? 100 : 200\n        },\n        label: {\n            height: (!isDesktop) ? \"50%\" : \"80%\",\n            marginTop: 5,\n            marginBottom: (!isDesktop) ? 5 : 10,\n            color: \"#ff3399\",\n            fontSize: (!isDesktop) ? 12 : 20,\n            fontWeight: \"bold\"\n        },\n        container: {\n            height: (!isDesktop) ? \"15%\" : \"80%\"\n        }\n    }\n    \n    return (\n        <Grid container alignItems=\"center\" justifyContent=\"left\">\n            <IconButton>\n                <CloseIcon onClick={props.closeMessage} />\n            </IconButton>\n            <Grid container alignItems=\"center\" justifyContent=\"center\">\n                <Grid item md=\"12\" xs=\"12\" style={style.container}>\n                    <Typography style={style.label}>Name</Typography>\n                    <input style={style.smallInput} onChange={handleMessageName}/>\n                    <Typography style={style.label}>Email</Typography>\n                    <input style={style.smallInput} onChange={handleMessageEmail}/>\n                    <Typography style={style.label}>Phone</Typography>\n                    <input style={style.smallInput} onChange={handleMessagePhone}/>\n                    <Typography style={style.label}>Message</Typography>\n                    <textarea style={style.largeInput} onChange={handleMessageText}></textarea>\n                </Grid>\n                <Grid item md=\"12\" xs=\"12\">\n                    <Button onClick={sendEmail} style={style.submit}>Send</Button>\n                </Grid>     \n            </Grid>\n        </Grid>\n    )\n}\n\nexport default MessageForm;","/Users/markgire/Desktop/loveyourbirth/src/components/Home.js",["114"],"/Users/markgire/Desktop/loveyourbirth/src/components/Newborn.js",[],"/Users/markgire/Desktop/loveyourbirth/src/components/Prenatal.js",[],"/Users/markgire/Desktop/loveyourbirth/src/components/Birth.js",[],"/Users/markgire/Desktop/loveyourbirth/src/components/Resources.js",["115","116","117","118","119","120"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport '@fontsource/roboto';\n\nconst Resources = () => {\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n\n    //Colors\n    const colorScheme = {\n        serviceCard: \"white\",\n        title: \"#E68FAE\",\n        font: \"black\",\n    }\n    //Style\n    const style = {\n        serviceCard: {\n            backgroundColor: colorScheme.serviceCard,\n            color: \"black\",\n            margin: \"3%\",\n            height: (!isDesktop) ? 30 : 20,\n            padding: (!isDesktop) ? 5 : 0\n        },\n        title: {\n            borderBottom: \"1px dashed black\"\n        },\n        heart: {\n            color: \"#ff3399\",\n            fontSize: 30\n        },\n        subtitle: {\n            color: colorScheme.title,\n            fontWeight: \"bold\",\n            fontSize: 25\n        },\n        link: {\n            color: \"#ff3399\",\n            textDecoration: 'none',\n            fontWeight: \"bold\",\n            marginTop: \"4%\"\n        }\n    }\n\n    return (\n        <>\n            <Grid item md=\"12\" xs=\"12\" style={style.serviceCard}>\n                <a href=\"https://www.spinningbabies.com\" target=\"_blank\" style={style.link}>Spinning Babies</a>\n            </Grid>\n            <Grid item md=\"12\" xs=\"12\" style={style.serviceCard}>\n                <a href=\"http://www.milescircuit.com\" target=\"_blank\" style={style.link}>Miles Circuit</a>\n            </Grid>\n            <Grid item md=\"12\" xs=\"12\" style={style.serviceCard}>\n                <a href=\"https://evidencebasedbirth.com\" target=\"_blank\" style={style.link}>Evidence Based Birth</a>\n            </Grid>\n            <Grid item md=\"12\" xs=\"12\" style={style.serviceCard}>\n                <a href=\"https://onlinelibrary.wiley.com/page/journal/15422011/homepage/share-with-women\" target=\"_blank\" style={style.link}>For Women</a>\n            </Grid>\n        </>\n    )\n}\n\nexport default Resources;","/Users/markgire/Desktop/loveyourbirth/src/components/Assistant.js",["121"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport '@fontsource/roboto';\nimport ProfilePic from \"../Kaily1.png\";\n\nconst Assistant = () => {\n\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n    \n    //Style\n    const style = {\n        aboutFont: {\n            color: \"#730099\",\n            padding: (!isDesktop) ? \"10px 10px 20px 10px\" : \"10px 40px 20px 40px\",\n            fontSize: 18,\n            marginTop: 10\n        },\n        experienceFont: {\n            color: \"#730099\",\n            padding: (!isDesktop) ? \"10px 10px 20px 10px\" : \"10px 0px 20px 0px\",\n            fontSize: 18\n        },\n        subTitle: {\n            color: \"white\",\n            fontSize: 20,\n            borderBottom: \"3px solid #730099\",\n            borderRight: \"3px solid #730099\",\n            backgroundColor: \"#FDB7C2\",\n            margin: \"auto\",\n            marginBottom: 5,\n            marginTop: 10,\n            borderRadius: 5,\n            width: 300\n        },\n        picture: {\n            width: (!isDesktop) ? 200 : 250,\n            height: \"auto\",\n            marginTop: 30,\n            marginBottom: (!isDesktop) ? 0 : 0,\n            borderRadius: 40,\n            border: \"2px solid #730099\"\n        },\n        title: {\n            fontSize: (!isDesktop) ? 20 : 20,\n            color: \"#730099\",\n            margin: \"10px 0px 10px 0px\",\n            fontWeight: \"bold\"\n        },\n        section: {\n            padding: \"20px 0px 50px 0px\",\n            height: \"auto\"\n        }\n    }\n    return (\n        <Grid container direction=\"row\" alignItems=\"flex-start\" justifyContent=\"center\" style={{ height: \"auto\"}}>\n            <Grid item md=\"4\" xs=\"12\">\n                <img src={ProfilePic} style={style.picture}/>\n                <Typography variant=\"h4\" style={style.title}>Kaily Jones</Typography>\n            </Grid>\n            <Grid item md=\"8\" xs=\"12\">\n                <Typography style={style.aboutFont}>I’ve been drawn to birth and pregnancy ever since I can remember, but I discovered my true love for the process\n                when I experienced it firsthand. Bringing my sons into the world was a pivotal moment for me as a woman. Both of\n                my experiences allowed me to grow as a person but my unmedicated birth with my youngest child really allowed\n                me to see so much potential and strength within. Labor is sacred and has so much potential to be very healing and\n                empowering. It is an honor to stand by other women as they get to go through their own journey of motherhood\n                and to support them in the comfort of their own space. I live in Northern Kentucky with my husband and two boys.\n                I love spending quality time with family and friends, reading, cooking, and being in nature.</Typography>\n                <div style={style.section}>\n                    <Typography variant=\"h6\" style={style.subTitle}>Experience</Typography>\n                    <Typography style={style.experienceFont}>Neonatal Resuscitation Certified</Typography>\n                    <Typography style={style.experienceFont}>BLS CPR Certified</Typography>\n                </div>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Assistant;","/Users/markgire/Desktop/loveyourbirth/src/components/NavMenu.js",["122","123","124","125","126","127","128","129","130","131","132","133","134","135"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, Menu, MenuItem, Typography, IconButton, AppBar, Toolbar, Modal, Card, Snackbar, SnackbarContent, colors, ListItemSecondaryAction, Divider } from \"@material-ui/core\";\nimport '@fontsource/roboto';\nimport ProfilePic from \"../Kaily1.png\";\n\nconst NavMenu = ({ openPage, menuClose, anchorEl, }) => {\n\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n    \n    //Style\n    const style = {\n        aboutFont: {\n            color: \"#730099\",\n            padding: (!isDesktop) ? \"10px 10px 20px 10px\" : \"10px 40px 20px 40px\",\n            fontSize: 18,\n            marginTop: 10\n        },\n        experienceFont: {\n            color: \"#730099\",\n            padding: (!isDesktop) ? \"10px 10px 20px 10px\" : \"10px 0px 20px 0px\",\n            fontSize: 18\n        },\n        subTitle: {\n            color: \"white\",\n            fontSize: 20,\n            borderBottom: \"3px solid #730099\",\n            borderRight: \"3px solid #730099\",\n            backgroundColor: \"#FDB7C2\",\n            margin: \"auto\",\n            marginBottom: 5,\n            marginTop: 10,\n            borderRadius: 5,\n            width: 300\n        },\n        picture: {\n            width: (!isDesktop) ? 200 : 250,\n            height: \"auto\",\n            marginTop: 30,\n            marginBottom: (!isDesktop) ? 0 : 0,\n            borderRadius: 40,\n            border: \"2px solid #730099\"\n        },\n        title: {\n            fontSize: (!isDesktop) ? 20 : 20,\n            color: \"#730099\",\n            margin: \"10px 0px 10px 0px\",\n            fontWeight: \"bold\"\n        },\n        section: {\n            padding: \"20px 0px 50px 0px\",\n            height: \"auto\"\n        }\n    }\n\n    const page = [\"About\", \"Services\", \"Resources\", \"Contact\"]\n    const mobilePage = [\"About\", \"Pregnancy\", \"Labor & Birth\", \"Postpartum & Newborn\", \"Resources\", \"Contact\"]\n\n    return (\n        <Menu\n              id=\"simple-menu\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={menuClose}\n              background=\"transparent\"\n              style={{ opacity: 0.7 }}\n            >\n              {(!isDesktop) \n              ? mobilePage.map((data, index) => (\n                <MenuItem style={style.mobilemenuItem} onClick={e => openPage(e, index + 1, false)}>{data}</MenuItem>\n              ))\n              : page.map((data, index) => (\n                  <MenuItem style={style.menuItem} onClick={e => openPage(e, index + 1, true)}>{data}</MenuItem>\n              ))}\n        </Menu>\n    )\n}\n\nexport default NavMenu;","/Users/markgire/Desktop/loveyourbirth/src/components/ToolbarItem.js",["136","137","138","139","140"],"import React, { useState, useEffect } from \"react\";\nimport \"../App.css\"\nimport { Grid, Typography, AppBar, Toolbar, IconButton } from \"@material-ui/core\";\nimport '@fontsource/roboto';\nimport ProfilePic from \"../Kaily1.png\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport EmailIcon from '@material-ui/icons/Email';\nimport HomeIcon from '@material-ui/icons/Home';\n\nconst ToolbarItem = ({ name, md, xs, openPage, menuOpen, messageOpen }) => {\n\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n    \n    //Style\n    const style = {\n        aboutFont: {\n            color: \"#730099\",\n            padding: (!isDesktop) ? \"10px 10px 20px 10px\" : \"10px 40px 20px 40px\",\n            fontSize: 18,\n            marginTop: 10\n        },\n        experienceFont: {\n            color: \"#730099\",\n            padding: (!isDesktop) ? \"10px 10px 20px 10px\" : \"10px 0px 20px 0px\",\n            fontSize: 18\n        },\n        subTitle: {\n            color: \"white\",\n            fontSize: 20,\n            borderBottom: \"3px solid #730099\",\n            borderRight: \"3px solid #730099\",\n            backgroundColor: \"#FDB7C2\",\n            margin: \"auto\",\n            marginBottom: 5,\n            marginTop: 10,\n            borderRadius: 5,\n            width: 300\n        },\n        picture: {\n            width: (!isDesktop) ? 200 : 250,\n            height: \"auto\",\n            marginTop: 30,\n            marginBottom: (!isDesktop) ? 0 : 0,\n            borderRadius: 40,\n            border: \"2px solid #730099\"\n        },\n        title: {\n            fontSize: (!isDesktop) ? 20 : 20,\n            color: \"#730099\",\n            margin: \"10px 0px 10px 0px\",\n            fontWeight: \"bold\"\n        },\n        section: {\n            padding: \"20px 0px 50px 0px\",\n            height: \"auto\"\n        }\n    }\n\n    const IconComponent = () => {\n        switch(name) {\n            case \"menu\":\n                return (\n                    <IconButton onClick={menuOpen}>\n                        <MenuIcon className={\"menuIcon\"}/>\n                    </IconButton>\n                )\n            case \"alert\":\n                return (\n                    <Typography component=\"div\" style={{ color: \"#ff3399\", fontWeight: \"bold\", fontSize: (!isDesktop) ? 10 : 15 }}>Not Accepting New Patients</Typography>\n                )\n            case \"home\":\n                return (\n                    <IconButton onClick={e => openPage(e, 0, isDesktop)}>\n                        <HomeIcon className={\"iconFont\"}/>\n                    </IconButton>\n                )\n            case \"facebook\":\n                return (\n                    <a href=\"https://www.facebook.com/Loveyourbirthmidwifery/\" target=\"_blank\" style={{ textDecoration: \"none\" }}>\n                        <IconButton className={\"topIcon\"}>\n                            <FacebookIcon className={\"iconFont\"}/>\n                        </IconButton>\n                    </a>\n                )\n            default:\n                return (\n                    <IconButton onClick={messageOpen} className={\"topIcon\"}>\n                        <EmailIcon className={\"iconFont\"}/>\n                    </IconButton>\n                )\n        }\n        \n    }\n    return (\n        <Grid item md={md} xs={xs}>\n            <IconComponent />\n        </Grid>\n       \n    )\n}\n\nexport default ToolbarItem;","/Users/markgire/Desktop/loveyourbirth/src/components/MessageModal.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":3,"column":16,"nodeType":"147","messageId":"148","endLine":3,"endColumn":22},{"ruleId":"149","severity":1,"message":"150","line":166,"column":13,"nodeType":"151","endLine":166,"endColumn":54},{"ruleId":"152","severity":1,"message":"153","line":249,"column":74,"nodeType":"154","messageId":"155","endLine":249,"endColumn":156},{"ruleId":"149","severity":1,"message":"150","line":65,"column":17,"nodeType":"151","endLine":65,"endColumn":62},{"ruleId":"145","severity":1,"message":"156","line":2,"column":35,"nodeType":"147","messageId":"148","endLine":2,"endColumn":45},{"ruleId":"145","severity":1,"message":"146","line":2,"column":59,"nodeType":"147","messageId":"148","endLine":2,"endColumn":65},{"ruleId":"145","severity":1,"message":"157","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":22},{"ruleId":"145","severity":1,"message":"158","line":10,"column":12,"nodeType":"147","messageId":"148","endLine":10,"endColumn":22},{"ruleId":"145","severity":1,"message":"159","line":10,"column":24,"nodeType":"147","messageId":"148","endLine":10,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":84,"column":17,"nodeType":"151","messageId":"162","endLine":84,"endColumn":126,"fix":"163"},{"ruleId":"160","severity":1,"message":"161","line":95,"column":13,"nodeType":"151","messageId":"162","endLine":95,"endColumn":123,"fix":"164"},{"ruleId":"160","severity":1,"message":"161","line":113,"column":13,"nodeType":"151","messageId":"162","endLine":113,"endColumn":123,"fix":"165"},{"ruleId":"160","severity":1,"message":"161","line":120,"column":17,"nodeType":"151","messageId":"162","endLine":120,"endColumn":126,"fix":"166"},{"ruleId":"145","severity":1,"message":"167","line":11,"column":10,"nodeType":"147","messageId":"148","endLine":11,"endColumn":15},{"ruleId":"145","severity":1,"message":"168","line":11,"column":17,"nodeType":"147","messageId":"148","endLine":11,"endColumn":36},{"ruleId":"145","severity":1,"message":"169","line":33,"column":11,"nodeType":"147","messageId":"148","endLine":33,"endColumn":14},{"ruleId":"145","severity":1,"message":"170","line":34,"column":11,"nodeType":"147","messageId":"148","endLine":34,"endColumn":15},{"ruleId":"171","severity":1,"message":"172","line":139,"column":46,"nodeType":"173","messageId":"174","endLine":139,"endColumn":48},{"ruleId":"171","severity":1,"message":"172","line":142,"column":32,"nodeType":"173","messageId":"174","endLine":142,"endColumn":34},{"ruleId":"171","severity":1,"message":"172","line":142,"column":52,"nodeType":"173","messageId":"174","endLine":142,"endColumn":54},{"ruleId":"171","severity":1,"message":"172","line":144,"column":54,"nodeType":"173","messageId":"174","endLine":144,"endColumn":56},{"ruleId":"171","severity":1,"message":"172","line":146,"column":54,"nodeType":"173","messageId":"174","endLine":146,"endColumn":56},{"ruleId":"152","severity":1,"message":"153","line":415,"column":264,"nodeType":"154","messageId":"155","endLine":415,"endColumn":284},{"ruleId":"171","severity":1,"message":"175","line":436,"column":49,"nodeType":"173","messageId":"174","endLine":436,"endColumn":51},{"ruleId":"171","severity":1,"message":"175","line":439,"column":49,"nodeType":"173","messageId":"174","endLine":439,"endColumn":51},{"ruleId":"171","severity":1,"message":"175","line":442,"column":49,"nodeType":"173","messageId":"174","endLine":442,"endColumn":51},{"ruleId":"171","severity":1,"message":"175","line":448,"column":49,"nodeType":"173","messageId":"174","endLine":448,"endColumn":51},{"ruleId":"171","severity":1,"message":"175","line":451,"column":49,"nodeType":"173","messageId":"174","endLine":451,"endColumn":51},{"ruleId":"171","severity":1,"message":"175","line":454,"column":49,"nodeType":"173","messageId":"174","endLine":454,"endColumn":51},{"ruleId":"171","severity":1,"message":"175","line":461,"column":49,"nodeType":"173","messageId":"174","endLine":461,"endColumn":51},{"ruleId":"171","severity":1,"message":"175","line":464,"column":49,"nodeType":"173","messageId":"174","endLine":464,"endColumn":51},{"ruleId":"171","severity":1,"message":"175","line":467,"column":49,"nodeType":"173","messageId":"174","endLine":467,"endColumn":51},{"ruleId":"171","severity":1,"message":"175","line":473,"column":49,"nodeType":"173","messageId":"174","endLine":473,"endColumn":51},{"ruleId":"171","severity":1,"message":"175","line":476,"column":49,"nodeType":"173","messageId":"174","endLine":476,"endColumn":51},{"ruleId":"171","severity":1,"message":"175","line":479,"column":49,"nodeType":"173","messageId":"174","endLine":479,"endColumn":51},{"ruleId":"171","severity":1,"message":"175","line":484,"column":49,"nodeType":"173","messageId":"174","endLine":484,"endColumn":51},{"ruleId":"152","severity":1,"message":"153","line":678,"column":272,"nodeType":"154","messageId":"155","endLine":678,"endColumn":291},{"ruleId":"145","severity":1,"message":"176","line":2,"column":36,"nodeType":"147","messageId":"148","endLine":2,"endColumn":40},{"ruleId":"149","severity":1,"message":"150","line":39,"column":21,"nodeType":"151","endLine":39,"endColumn":66},{"ruleId":"145","severity":1,"message":"177","line":2,"column":16,"nodeType":"147","messageId":"148","endLine":2,"endColumn":26},{"ruleId":"145","severity":1,"message":"178","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":20},{"ruleId":"160","severity":1,"message":"161","line":55,"column":17,"nodeType":"151","messageId":"162","endLine":55,"endColumn":93,"fix":"179"},{"ruleId":"160","severity":1,"message":"161","line":58,"column":17,"nodeType":"151","messageId":"162","endLine":58,"endColumn":90,"fix":"180"},{"ruleId":"160","severity":1,"message":"161","line":61,"column":17,"nodeType":"151","messageId":"162","endLine":61,"endColumn":93,"fix":"181"},{"ruleId":"160","severity":1,"message":"161","line":64,"column":17,"nodeType":"151","messageId":"162","endLine":64,"endColumn":142,"fix":"182"},{"ruleId":"149","severity":1,"message":"150","line":65,"column":17,"nodeType":"151","endLine":65,"endColumn":62},{"ruleId":"145","severity":1,"message":"183","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":14},{"ruleId":"145","severity":1,"message":"146","line":2,"column":16,"nodeType":"147","messageId":"148","endLine":2,"endColumn":22},{"ruleId":"145","severity":1,"message":"177","line":2,"column":40,"nodeType":"147","messageId":"148","endLine":2,"endColumn":50},{"ruleId":"145","severity":1,"message":"184","line":2,"column":52,"nodeType":"147","messageId":"148","endLine":2,"endColumn":62},{"ruleId":"145","severity":1,"message":"185","line":2,"column":64,"nodeType":"147","messageId":"148","endLine":2,"endColumn":70},{"ruleId":"145","severity":1,"message":"186","line":2,"column":72,"nodeType":"147","messageId":"148","endLine":2,"endColumn":79},{"ruleId":"145","severity":1,"message":"187","line":2,"column":81,"nodeType":"147","messageId":"148","endLine":2,"endColumn":86},{"ruleId":"145","severity":1,"message":"176","line":2,"column":88,"nodeType":"147","messageId":"148","endLine":2,"endColumn":92},{"ruleId":"145","severity":1,"message":"188","line":2,"column":94,"nodeType":"147","messageId":"148","endLine":2,"endColumn":102},{"ruleId":"145","severity":1,"message":"189","line":2,"column":104,"nodeType":"147","messageId":"148","endLine":2,"endColumn":119},{"ruleId":"145","severity":1,"message":"190","line":2,"column":121,"nodeType":"147","messageId":"148","endLine":2,"endColumn":127},{"ruleId":"145","severity":1,"message":"191","line":2,"column":129,"nodeType":"147","messageId":"148","endLine":2,"endColumn":152},{"ruleId":"145","severity":1,"message":"192","line":2,"column":154,"nodeType":"147","messageId":"148","endLine":2,"endColumn":161},{"ruleId":"145","severity":1,"message":"193","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":18},{"ruleId":"145","severity":1,"message":"185","line":3,"column":28,"nodeType":"147","messageId":"148","endLine":3,"endColumn":34},{"ruleId":"145","severity":1,"message":"186","line":3,"column":36,"nodeType":"147","messageId":"148","endLine":3,"endColumn":43},{"ruleId":"145","severity":1,"message":"193","line":5,"column":8,"nodeType":"147","messageId":"148","endLine":5,"endColumn":18},{"ruleId":"145","severity":1,"message":"194","line":24,"column":11,"nodeType":"147","messageId":"148","endLine":24,"endColumn":16},{"ruleId":"160","severity":1,"message":"161","line":88,"column":21,"nodeType":"151","messageId":"162","endLine":88,"endColumn":131,"fix":"195"},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'CardHeader' is defined but never used.","'LocalPhoneIcon' is defined but never used.","'phoneState' is assigned a value but never used.","'setPhoneState' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"198","text":"199"},{"range":"200","text":"199"},{"range":"201","text":"199"},{"range":"202","text":"199"},"'Email' is defined but never used.","'QuestionAnswerSharp' is defined but never used.","'day' is assigned a value but never used.","'time' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'Card' is defined but never used.","'Typography' is defined but never used.","'FavoriteIcon' is defined but never used.",{"range":"203","text":"199"},{"range":"204","text":"199"},{"range":"205","text":"199"},{"range":"206","text":"199"},"'Grid' is defined but never used.","'IconButton' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Modal' is defined but never used.","'Snackbar' is defined but never used.","'SnackbarContent' is defined but never used.","'colors' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'Divider' is defined but never used.","'ProfilePic' is defined but never used.","'style' is assigned a value but never used.",{"range":"207","text":"199"},"no-global-assign","no-unsafe-negation",[2707,2707]," rel=\"noreferrer\"",[3342,3342],[4084,4084],[4408,4408],[1585,1585],[1780,1780],[1976,1976],[2228,2228],[3083,3083]]