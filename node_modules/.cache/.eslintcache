[{"/Users/markgire/Desktop/loveyourbirth/src/index.js":"1","/Users/markgire/Desktop/loveyourbirth/src/App.js":"2","/Users/markgire/Desktop/loveyourbirth/src/reportWebVitals.js":"3","/Users/markgire/Desktop/loveyourbirth/src/components/About.js":"4","/Users/markgire/Desktop/loveyourbirth/src/components/Contact.js":"5","/Users/markgire/Desktop/loveyourbirth/src/components/ContactForm.js":"6","/Users/markgire/Desktop/loveyourbirth/src/components/MessageForm.js":"7","/Users/markgire/Desktop/loveyourbirth/src/components/Home.js":"8","/Users/markgire/Desktop/loveyourbirth/src/components/Newborn.js":"9","/Users/markgire/Desktop/loveyourbirth/src/components/Prenatal.js":"10","/Users/markgire/Desktop/loveyourbirth/src/components/Birth.js":"11","/Users/markgire/Desktop/loveyourbirth/src/components/Resources.js":"12"},{"size":500,"mtime":1630639502117,"results":"13","hashOfConfig":"14"},{"size":12745,"mtime":1632534838493,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1630639502119,"results":"16","hashOfConfig":"14"},{"size":4771,"mtime":1632532383240,"results":"17","hashOfConfig":"14"},{"size":5509,"mtime":1632280415496,"results":"18","hashOfConfig":"14"},{"size":25516,"mtime":1632199219469,"results":"19","hashOfConfig":"14"},{"size":4661,"mtime":1632195449643,"results":"20","hashOfConfig":"14"},{"size":2920,"mtime":1632532899729,"results":"21","hashOfConfig":"14"},{"size":2068,"mtime":1632517614355,"results":"22","hashOfConfig":"14"},{"size":2094,"mtime":1632517593539,"results":"23","hashOfConfig":"14"},{"size":2137,"mtime":1632518042940,"results":"24","hashOfConfig":"14"},{"size":2309,"mtime":1632280816559,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1vi8wz9",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":4,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":4,"source":"57","usedDeprecatedRules":"28"},"/Users/markgire/Desktop/loveyourbirth/src/index.js",[],["58","59"],"/Users/markgire/Desktop/loveyourbirth/src/App.js",["60","61","62","63","64","65","66"],"/Users/markgire/Desktop/loveyourbirth/src/reportWebVitals.js",[],"/Users/markgire/Desktop/loveyourbirth/src/components/About.js",["67","68","69","70"],"/Users/markgire/Desktop/loveyourbirth/src/components/Contact.js",["71","72","73","74","75","76"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, Paper, Typography, CardHeader, IconButton, Button } from \"@material-ui/core\";\nimport '@fontsource/roboto';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport EmailIcon from '@material-ui/icons/Email';\nimport LocalPhoneIcon from '@material-ui/icons/LocalPhone';\n\nconst Contact = (props) => {\n\n    const [phoneState, setPhoneState] = useState(false)\n\n    //Nav Rendering for Smartphone vs Laptop\n  const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n  const updateMedia = () => {\n    setDesktop(window.innerWidth > 1000);\n  };\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateMedia);\n    return () => window.removeEventListener(\"resize\", updateMedia);\n  });\n\n    //Style\n    const style = {\n        card: {\n            marginTop: 0,\n            marginBottom: 0,\n            paddingTop: (!isDesktop) ? 0 : 20,\n            paddingBottom: 40,\n            backgroundColor: \"#A9D1EA\",\n            color: \"white\",\n            borderRadius: 5\n        },\n        emailSection: {\n            marginTop: (!isDesktop) ? 50 : 20,\n        },\n        emailIcon: {\n            color: \"white\",\n            position: \"flex\",\n            alignItems: \"right\",\n        },\n        facebookIcon: {\n            color: \"white\",\n            position: \"flex\",\n            alignItems: \"left\",\n        },\n        phoneIcon: {\n            color: \"white\",\n            position: \"flex\",\n            alignItems: \"left\",\n        },\n        subheader: {\n            fontSize: 20,\n            color: \"white\",\n            fontWeight: \"bold\",\n            fontStyle: \"italic\",\n            marginBottom: 20\n            // borderBottom: \"1px solid #ff3399\",\n          },\n          patientPortal: {\n            color: \"white\",\n            fontSize: (!isDesktop) ? 14 : 20,\n            textDecoration: 'none',\n            padding: (!isDesktop) ? 20 : 50,\n            fontWeight: \"bold\"\n          },\n          patientConsult: {\n            color: \"white\", \n            fontSize: (!isDesktop) ? 14 : 20, \n            background: \"none\", \n            border: \"none\", \n            paddingBottom: !(isDesktop) ? 50 : 15,\n            fontWeight: \"bold\"\n            \n          }\n    }\n    return (\n    <Paper style={style.card} elevation=\"5\">\n        <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n            {(!isDesktop)\n            ?\n            <>\n            <Grid item md=\"4\" xs=\"12\" style={style.emailSection}>\n                <button style={style.patientConsult} onClick={props.openConsult}>Schedule a Free Consultation</button>\n            </Grid>\n            <Grid item md=\"4\" xs=\"12\">\n                <a href=\"https://clientcareeast.net/Account/LogOn?ReturnUrl=%2f\" target=\"_blank\" style={style.patientPortal}> Patient Portal Login </a>\n            </Grid>\n            <Grid item md=\"12\" xs=\"12\" style={style.emailSection}>\n                <Typography style={{ fontSize: (!isDesktop) ? 14 : 20, marginBottom: \"5%\" }}>loveyourbirthmidwifery@gmail.com</Typography>\n            </Grid>\n            <Grid item md=\"1\" xs=\"4\">\n                <IconButton onClick={props.openMessage}>\n                    <EmailIcon style={style.emailIcon}/>\n                </IconButton>\n            </Grid>\n            <Grid item md=\"1\" xs=\"4\">\n            <a href=\"https://www.facebook.com/Loveyourbirthmidwifery/\" target=\"_blank\" style={{ textDecoration: \"none\" }}>\n                <IconButton>\n                    <FacebookIcon style={style.facebookIcon}/>\n                </IconButton>\n            </a>\n            </Grid>\n            <Grid item md=\"1\" xs=\"4\">\n                <IconButton onClick={() => setPhoneState(true)}>\n                    <LocalPhoneIcon style={style.phoneIcon} />\n                </IconButton>\n                {(!phoneState) ? <Typography></Typography> : <Typography>(859) 620-2982</Typography>}\n            </Grid>\n\n            </>\n            :\n            <>\n            <Grid item md=\"4\" xs=\"12\" style={style.emailSection}>\n                <button style={style.patientConsult} onClick={props.openConsult}>Schedule a Free Consultation</button>\n            </Grid>\n            <Grid item md=\"1\" xs=\"4\">\n                <IconButton onClick={props.openMessage}>\n                    <EmailIcon style={style.emailIcon}/>\n                </IconButton>\n            </Grid>\n            <Grid item md=\"1\" xs=\"4\">\n            <a href=\"https://www.facebook.com/Loveyourbirthmidwifery/\" target=\"_blank\" style={{ textDecoration: \"none\" }}>\n                <IconButton>\n                    <FacebookIcon style={style.facebookIcon}/>\n                </IconButton>\n            </a>\n            </Grid>\n            <Grid item md=\"1\" xs=\"4\">\n                <IconButton onClick={() => setPhoneState(true)}>\n                    <LocalPhoneIcon style={style.phoneIcon} />\n                </IconButton>\n                {(!phoneState) ? <Typography></Typography> : <Typography>(859) 620-2982</Typography>}\n            </Grid>\n            <Grid item md=\"4\" xs=\"12\">\n                <a href=\"https://clientcareeast.net/Account/LogOn?ReturnUrl=%2f\" target=\"_blank\" style={style.patientPortal}> Patient Portal Login </a>\n            </Grid>\n            <Grid item md=\"12\" xs=\"12\" style={style.emailSection}>\n                <Typography style={{ fontWeight: \"bold\" }}>loveyourbirthmidwifery@gmail.com</Typography>\n            </Grid>\n            </>}\n            \n        </Grid>\n    </Paper>\n    )\n}\n\nexport default Contact;","/Users/markgire/Desktop/loveyourbirth/src/components/ContactForm.js",["77","78","79","80","81","82","83","84","85","86","87"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, Typography, IconButton, LinearProgress, Checkbox } from \"@material-ui/core\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport Favorite from '@material-ui/icons/Favorite';\nimport QuestionData from \"../utilities/questions.json\";\nimport emailjs from 'emailjs-com';\nimport '@fontsource/roboto';\nimport { Email, QuestionAnswerSharp } from \"@material-ui/icons\";\n\nconst ContactForm = (props) => {\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n    //Checkbox\n    const label = { inputProps: { 'aria-label': 'Checkbox demo' } };\n    const day = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n    const time = [\"Morning\", \"Afternoon\", \"Evening\"]\n    const [selectDays, setSelectDays] = useState({\n            sunday: false,\n            monday: false,\n            tuesday: false,\n            wednesday: false,\n            thursday: false,\n            friday: false,\n            saturday: false\n        })\n    const checkSunday = () => {\n        if(!selectDays.sunday) {\n            setSelectDays({ ...selectDays, sunday: true })\n        } else {\n            setSelectDays({ ...selectDays, sunday: false })\n        }\n    } \n    const checkMonday = () => {\n        if(!selectDays.monday) {\n            setSelectDays({ ...selectDays, monday: true })\n        } else {\n            setSelectDays({ ...selectDays, monday: false })\n        }\n    }\n    const checkTuesday = () => {\n        if(!selectDays.tuesday) {\n            setSelectDays({ ...selectDays, tuesday: true })\n        } else {\n            setSelectDays({ ...selectDays, tuesday: false })\n        }\n    }\n    const checkWednesday = () => {\n        if(!selectDays.wednesday) {\n            setSelectDays({ ...selectDays, wednesday: true })\n        } else {\n            setSelectDays({ ...selectDays, wednesday: false })\n        }\n    }\n    const checkThursday = () => {\n        if(!selectDays.thursday) {\n            setSelectDays({ ...selectDays, thursday: true })\n        } else {\n            setSelectDays({ ...selectDays, thursday: false })\n        }\n    }\n    const checkFriday = () => {\n        if(!selectDays.friday) {\n            setSelectDays({ ...selectDays, friday: true })\n        } else {\n            setSelectDays({ ...selectDays, friday: false })\n        }\n    }\n    const checkSaturday = () => {\n        if(!selectDays.saturday) {\n            setSelectDays({ ...selectDays, saturday: true })\n        } else {\n            setSelectDays({ ...selectDays, saturday: false })\n        }\n    }\n\n    const [selectTime, setSelectTime] = useState({\n        morning: false,\n        afternoon: false,\n        evening: false\n    })\n\n    const checkMorning = () => {\n        if(!selectTime.morning) {\n            setSelectTime({ ...selectTime, morning: true})\n        } else {\n            setSelectTime({ ...selectTime, morning: false})\n        }\n    }\n    const checkAfternoon = () => {\n        if(!selectTime.afternoon) {\n            setSelectTime({ ...selectTime, afternoon: true})\n        } else {\n            setSelectTime({ ...selectTime, afternoon: false})\n        }\n    }\n    const checkEvening = () => {\n        if(!selectTime.evening) {\n            setSelectTime({ ...selectTime, evening: true})\n        } else {\n            setSelectTime({ ...selectTime, evening: false})\n        }\n    }\n    \n    //question # state\n    const [questionNum, setQuestionNum] = useState(0)\n\n    const [errValidation, setErrValidation] = useState({\n        name: false,\n        city: false,\n        email: false,\n        phone: false\n    })\n\n    //progress bar\n    const point = 100/QuestionData.data.length\n    const [progress, setProgress] = useState(point)\n\n    const nextQuestion = (e) => {\n        e.preventDefault();\n        if (questionNum === 0 && answer.name == \"\")\n        {\n            setErrValidation({ ...errValidation, name: true})\n        } else if (questionNum == 0 && answer.city == \"\") {\n            setErrValidation({ ...errValidation, city: true})\n        } else if (questionNum === 1 && answer.email == \"\") {\n            setErrValidation({ ...errValidation, email: true})\n        } else if (questionNum === 1 && answer.phone == \"\") {\n            setErrValidation({ ...errValidation, phone: true})\n        } else {\n            setQuestionNum(questionNum + 1)\n            setProgress(progress + point)\n        }\n    }\n\n    const prevQuestion = (e) => {\n        e.preventDefault();\n        setQuestionNum(questionNum - 1)\n        setProgress(progress - point)\n    }\n\n    const [answer, setAnswer] = useState({\n        name: \"\",\n        city: \"\",\n        phone: \"\",\n        email: \"\",\n        contact: \"\",\n        firstBirth: \"\",\n        envision: \"\",\n        why: \"\",\n        midwifery: \"\",\n        concerns: \"\",\n        refer: \"\",\n        consultPreference: \"\"\n    })\n\n    \n\n    const handleAnswerName = (e) => {\n        setAnswer({ ...answer, name: e.target.value })\n    }\n\n    const handleAnswerPhone = (e) => {\n        setAnswer({ ...answer, phone: e.target.value })\n    }\n\n    const handleAnswerEmail = (e) => {\n        setAnswer({ ...answer, email: e.target.value })\n    }\n    const handleAnswerCity = (e) => {\n        setAnswer({ ...answer, city: e.target.value })\n    }\n    const handleAnswerContactPref = (e, selection) => {\n        e.preventDefault();\n        setAnswer({ ...answer, contact: selection})\n    }\n    const handleAnswerFirstBirth = (e, selection) => {\n        e.preventDefault();\n        setAnswer({ ...answer, firstBirth: selection})\n    }\n    const handleAnswerEnvision = (e) => {\n        e.preventDefault();\n        setAnswer({ ...answer, envision: e.target.value })\n    }\n    const handleAnswerWhy = (e) => {\n        e.preventDefault();\n        setAnswer({ ...answer, why: e.target.value })\n    }\n    const handleAnswerMidwifery = (e) => {\n        e.preventDefault();\n        setAnswer({ ...answer, midwifery: e.target.value })\n    }\n    const handleAnswerConcerns = (e) => {\n        e.preventDefault();\n        setAnswer({ ...answer, concerns: e.target.value })\n    }\n    const handleAnswerRefer = (e) => {\n        e.preventDefault();\n        setAnswer({ ...answer, refer: e.target.value })\n    }\n\n    const handleConsultPreference = (e, selection) => {\n        e.preventDefault();\n        setAnswer({ ...answer, consultPreference: selection})\n    }\n    const sendEmail = (e) => {\n        e.preventDefault();\n        emailjs.send('service_sa2sv31', 'template_aldpnbc', \n        { \n            name: answer.name, \n            city: answer.city, \n            phone: answer.phone,\n            email: answer.email, \n            contact: answer.contact,\n            firstBirth: answer.firstBirth,\n            envision: answer.envision,\n            why: answer.why,\n            midwifery: answer.midwifery,\n            concerns: answer.concerns,\n            refer: answer.refer,\n            days: Object.keys(selectDays).filter(key => selectDays[key]),\n            time: Object.keys(selectTime).filter(key => selectTime[key]),\n            preference: answer.consultPreference\n        }, 'user_VCNwVyQVStaLfnvdfDv4t')\n        .then((result) => {\n            console.log(result.text);\n            props.successConsult();\n        }, (error) => {\n            console.log(error.text);\n        });\n        props.closeForm();\n    };\n    \n    //Style\n    const style = {\n        card: {\n            display: 'fixed',  \n            justifyContent:'center', \n            alignItems:'center',\n            height: (!isDesktop) ? \"60%\" : \"80%\",\n            width: (!isDesktop) ? \"97%\" : \"auto\",\n            margin: (!isDesktop) ? 0 : 100,\n            marginTop: (!isDesktop) ? 0 : 100,\n            textAlign: \"center\",\n            border: \"5px solid purple\",\n            backgroundColor: \"white\"\n        },\n        title: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        question: {\n            height: (!isDesktop) ? 60 : 80,\n            marginTop: 20,\n            marginBottom: (!isDesktop) ? 15 : 10,\n            color: \"purple\",\n            fontSize: (!isDesktop) ? 15 : 30,\n            fontWeight: \"bold\"\n        },\n        answerText: {\n            marginTop: (!isDesktop) ? 10 : 20,\n            marginBottom: (!isDesktop) ? 10 : 10,\n            color: \"purple\",\n            fontSize: (!isDesktop) ? 10 : 20,\n            fontWeight: \"bold\"\n        },\n        answerTextErr: {\n            marginTop: (!isDesktop) ? 10 : 20,\n            marginBottom: (!isDesktop) ? 10 : 10,\n            color: \"red\",\n            fontSize: (!isDesktop) ? 10 : 20,\n            fontWeight: \"bold\"\n        },\n        answerTextBold: {\n            marginTop: (!isDesktop) ? 10 : 20,\n            marginBottom: (!isDesktop) ? 10 : 10,\n            color: \"purple\",\n            fontSize: (!isDesktop) ? 10 : 20,\n        },\n        input: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        button: {\n            margin: \"5%\",\n            marginBottom: 20,\n            border: \"1px solid purple\"\n        },\n        activeButton: {\n            margin: \"5%\",\n            marginBottom: 20,\n            backgroundColor: \"purple\",\n            color: \"white\"\n\n        },\n        submit: { \n            // position: \"absolute\", \n            // bottom: (!isDesktop) ? \"40%\" : \"10%\",\n            color: \"white\",\n            backgroundColor: \"purple\",\n            marginTop: 20\n        },\n        next: { \n            // position: \"absolute\", \n            // bottom: (!isDesktop) ? \"40%\" : \"10%\",\n            color: \"white\",\n            backgroundColor: \"#d9b3ff\",\n            marginTop: 20\n        },\n        questionSection: {\n            height: (!isDesktop) ? 200 : 400,\n            marginBottom: 100\n        },\n        questionSection2: {\n            height: (!isDesktop) ? 400 : 400,\n            marginBottom: \"3%\",\n            paddingLeft: (!isDesktop) ? 10: 0\n        },\n        questionSection3: {\n            height: (!isDesktop) ? 200: 300\n        },\n        smallInput: {\n            width: (!isDesktop) ? 200: 350, \n        },\n        smallInputErr: {\n            width: (!isDesktop) ? 200: 350,\n            border: \"1px solid red\"\n        },\n        largeInput: {\n            width: (!isDesktop) ? \"90%\": 500,\n            height: (!isDesktop) ? \"60%\": 200,\n            margin: (!isDesktop) ? \"5%\": \"5%\"\n        },\n        progress: {\n            marginLeft: \"3%\",\n            marginRight: \"3%\",\n            width: \"100%\"\n        },\n        nextButtonActive: {\n            color: \"blue\"\n        },\n        nextButtonDisabled: {\n            color: \"white\"\n        },\n        checkbox: {\n            fontSize: (!isDesktop) ? 15 : 20,\n            alignText: \"right\"\n        },\n        checkitem: {\n            fontSize: (!isDesktop) ? 15 : 20,\n            alignText: \"left\"\n        }\n    }\n\n    const handleAnswer = () => {\n        switch(questionNum) {\n            case 1:\n                return (\n                <>\n                    <Typography style={(!errValidation.email) ? style.answerText : style.answerTextErr}>{(!errValidation.email) ? \"Email\" : \"*Email\"}</Typography> <input style={(!errValidation.email) ? style.smallInput : style.smallInputErr} value={answer.email} onChange={handleAnswerEmail} />\n                    <Typography style={(!errValidation.phone) ? style.answerText : style.answerTextErr}>{(!errValidation.phone) ? \"Phone\" : \"*Phone\"}</Typography> <input style={(!errValidation.phone) ? style.smallInput : style.smallInputErr} value={answer.email} value={answer.phone} onChange={handleAnswerPhone} />  \n                    <Typography style={style.answerText}>Preferred Method of Contact</Typography> <Button onClick={(e, value) => handleAnswerContactPref(e, \"Email\")} style={(answer.contact === \"Email\") ? style.activeButton : style.button}>Email</Button><Button onClick={(e, value) => handleAnswerContactPref(e, \"Phone\")} style={(answer.contact === \"Phone\") ? style.activeButton : style.button}>Phone</Button>\n                </>\n                )\n            case 2:\n                return (\n                <div style={{ paddingTop: (!isDesktop) ? 40 : 40}}>\n                    <Button onClick={(e, value) => handleAnswerFirstBirth(e, \"Yes\")} style={(answer.firstBirth === \"Yes\") ? style.activeButton : style.button}>Yes</Button>\n                    <Button onClick={(e, value) => handleAnswerFirstBirth(e, \"No\")} style={(answer.firstBirth === \"No\") ? style.activeButton : style.button}>No</Button>\n                </div>)\n            case 3:\n                return (<>\n                    <textarea style={style.largeInput} value={answer.why} onChange={handleAnswerWhy}></textarea>\n                </>)\n            case 4:\n                return (<>\n                    <textarea style={style.largeInput} value={answer.envision} onChange={handleAnswerEnvision}></textarea>\n                </>)\n            \n            case 5:\n                return (<>\n                    <textarea style={style.largeInput} value={answer.midwifery} onChange={handleAnswerMidwifery}></textarea>\n                </>)\n            case 6:\n                return (<>\n                    <textarea style={style.largeInput} value={answer.concerns} onChange={handleAnswerConcerns}></textarea>\n                </>)\n            case 7:\n                return (<>\n                    <input style={style.smallInput} value={answer.refer} onChange={handleAnswerRefer} />\n                </>)\n            case 8: \n                return (<>\n                    <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                        <Grid item md=\"6\" xs=\"5\">\n                            <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            onClick={checkSunday}\n                            >\n                                <Checkbox {...label} \n                                checked={selectDays.sunday} icon={<FavoriteBorder  style={style.checkbox}/>} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                                <Typography style={style.checkitem}>Sunday</Typography>\n                            </Grid>\n                            <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            onClick={checkMonday} \n                            >\n                                <Checkbox {...label}\n                                checked={selectDays.monday} icon={<FavoriteBorder  style={style.checkbox}/>} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                                <Typography style={style.checkitem}>Monday</Typography>\n                            </Grid>\n                            <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            onClick={checkTuesday} \n                            >\n                                <Checkbox {...label}\n                                checked={selectDays.tuesday} icon={<FavoriteBorder  style={style.checkbox}/>} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                                <Typography style={style.checkitem}>Tuesday</Typography>\n                            </Grid>\n                            <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            onClick={checkWednesday} \n                            >\n                                <Checkbox {...label}\n                                checked={selectDays.wednesday} icon={<FavoriteBorder  style={style.checkbox}/>} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                                <Typography style={style.checkitem}>Wednesday</Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid item md=\"6\" xs=\"5\">\n                            <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            onClick={checkThursday} \n                            >\n                                <Checkbox {...label}\n                                checked={selectDays.thursday} icon={<FavoriteBorder  style={style.checkbox}/>} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                                <Typography style={style.checkitem}>Thursday</Typography>\n                            </Grid>\n                            <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            onClick={checkFriday} \n                            >\n                                <Checkbox {...label} \n                                checked={selectDays.friday} icon={<FavoriteBorder  style={style.checkbox}/>} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                                <Typography style={style.checkitem}>Friday</Typography>\n                            </Grid>\n                            <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            onClick={checkSaturday} \n                            >\n                                <Checkbox {...label}\n                                checked={selectDays.saturday} icon={<FavoriteBorder  style={style.checkbox}/>} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                                <Typography style={style.checkitem}>Saturday</Typography>\n                            </Grid>\n\n                        </Grid>\n                    </Grid>\n            </>)\n        case 9:\n            return (<>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    onClick={checkMorning}\n                    >\n                        <Checkbox {...label} \n                         checked={selectTime.morning} icon={<FavoriteBorder  style={style.checkbox} />} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                        <Typography style={style.checkitem}>Morning</Typography>\n                </Grid>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    onClick={checkAfternoon}\n                    >\n                        <Checkbox {...label}\n                         checked={selectTime.afternoon} icon={<FavoriteBorder  style={style.checkbox} />} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                        <Typography style={style.checkitem}>Afternoon</Typography>\n                </Grid>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    onClick={checkEvening} \n                    >\n                        <Checkbox {...label} \n                        checked={selectTime.evening} icon={<FavoriteBorder  style={style.checkbox} />} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                        <Typography style={style.checkitem}>Evening</Typography>\n                </Grid>\n\n            </>)\n            case 10:\n                return (<>\n                    <div style={{ paddingTop: (!isDesktop) ? 40 : 40}}>\n                        <Button onClick={(e, value) => handleConsultPreference(e, \"In Person\")} style={(answer.consultPreference === \"In Person\") ? style.activeButton : style.button}>In Person</Button>\n                        <Button onClick={(e, value) => handleConsultPreference(e, \"Phone\")} style={(answer.consultPreference === \"Phone\") ? style.activeButton : style.button}>Phone</Button>\n                    </div>\n                </>)\n            case 11:\n                return (<>\n                <>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        >\n                            <Typography style={style.answerTextBold}> Name: </Typography>\n                            <Typography style={style.answerText}>{answer.name}</Typography>\n                    </Grid>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        >\n                            <Typography style={style.answerTextBold}> Email: </Typography>\n                            <Typography style={style.answerText}>{answer.email}</Typography>\n                    </Grid>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        >\n                            <Typography style={style.answerTextBold}> Phone: </Typography>\n                            <Typography style={style.answerText}>{answer.phone}</Typography>\n                    </Grid>\n                    \n                </>\n                </>)\n            default:\n                return (\n                <>\n                    <Typography style={(!errValidation.name) ? style.answerText : style.answerTextErr}>{(!errValidation.name) ? \"Name\" : \"*Name\"}</Typography> <input style={(!errValidation.name) ? style.smallInput : style.smallInputErr} value={answer.name} onChange={handleAnswerName}/>\n                    <Typography style={(!errValidation.city) ? style.answerText : style.answerTextErr}>{(!errValidation.city) ? \"City, State\" : \"*City, State\"}</Typography> <input style={(!errValidation.city) ? style.smallInput : style.smallInputErr} value={answer.name} value={answer.city} onChange={handleAnswerCity} />\n                </>)\n            \n        }\n    }\n    \n    return (\n        <div>\n            <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\"  style={{ paddingLeft: 0, paddingRight: (!isDesktop) ? \"4%\" : 0 }}>\n                <Grid container direction=\"row\" justifyContent=\"left\">\n                    <IconButton>\n                        <CloseIcon onClick={props.closeForm} />\n                    </IconButton>\n                        <LinearProgress variant=\"determinate\" value={progress} style={style.progress} />\n                </Grid>\n                <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                    <Grid item md=\"1\" xs=\"1\">\n                        {(questionNum === 0) \n                        ? <IconButton> \n                            <ArrowBackIcon style={style.nextButtonDisabled}/>\n                        </IconButton>\n                        : <IconButton onClick={prevQuestion}> \n                            <ArrowBackIcon style={style.nextButtonActive} />\n                         </IconButton>}\n                    </Grid>\n                    <Grid item md=\"10\" xs=\"10\" style={style.questionSection2}>\n                        <Typography style={style.question}>{QuestionData.data[questionNum].question}</Typography>\n                        <div style={style.questionSection3}>\n                            {handleAnswer()}\n                        </div>\n                        <Grid item md=\"12\" xs=\"12\">\n                            {(questionNum === QuestionData.data.length - 1) \n                            ? <Button onClick={sendEmail} style={style.submit}>Submit</Button> \n                            : <Button onClick={nextQuestion} style={style.next}>Next</Button>}\n                        </Grid> \n                    </Grid>\n                    <Grid item md=\"1\" xs=\"1\">\n                        {(questionNum === QuestionData.data.length - 1) \n                        ? <IconButton>\n                            <ArrowForwardIcon style={style.nextButtonDisabled}/>\n                        </IconButton>\n                        : <IconButton onClick={nextQuestion}>\n                            <ArrowForwardIcon style={style.nextButtonActive}/>\n                          </IconButton>}\n                    </Grid>\n                           \n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default ContactForm;","/Users/markgire/Desktop/loveyourbirth/src/components/MessageForm.js",["88"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, Typography, Card, IconButton } from \"@material-ui/core\";\nimport '@fontsource/roboto';\nimport emailjs from 'emailjs-com';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst MessageForm = (props) => {\n\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n\n    //Send Email\n    const [message, setMessage] = useState({\n            name: \"\",\n            email: \"\",\n            phone: \"\",\n            text: \"\"\n        })\n    const handleMessageName = (e) => {\n        setMessage({ ...message, name: e.target.value })\n    }\n    const handleMessageEmail = (e) => {\n        setMessage({ ...message, email: e.target.value })\n    }\n    const handleMessagePhone = (e) => {\n        setMessage({ ...message, phone: e.target.value })\n    }\n    const handleMessageText = (e) => {\n        setMessage({ ...message, text: e.target.value })\n    }\n\n    const sendEmail = (e) => {\n        e.preventDefault();\n        emailjs.send('service_sa2sv31', 'template_66y7sf6', { name: message.name, email: message.email, phone: message.phone, text: message.text}, 'user_VCNwVyQVStaLfnvdfDv4t')\n        .then((result) => {\n            console.log(result.text);\n            props.successMessage();\n        }, (error) => {\n            console.log(error.text);\n        });\n        props.closeMessage();\n    };\n    //Style\n    const style = {\n        card: {\n            display: 'fixed',  \n            justifyContent:'center', \n            alignItems:'center',\n            height: (!isDesktop) ? \"60%\" : \"80%\",\n            width: (!isDesktop) ? \"97%\" : \"auto\",\n            margin: (!isDesktop) ? 0 : 100,\n            marginTop: (!isDesktop) ? 0 : 100,\n            textAlign: \"center\",\n            border: \"5px solid pink\",\n            backgroundColor: \"white\"\n        },\n        title: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        input: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        button: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        submit: { \n            // position: \"absolute\", \n            // bottom: (!isDesktop) ? \"40%\" : \"10%\",\n            color: \"white\",\n            backgroundColor: \"#FDB7C2\"\n        },\n        questionSection: {\n            height: (!isDesktop) ? 200 : 400,\n            marginBottom: 100\n        },\n        questionSection2: {\n            height: (!isDesktop) ? 100 : 100,\n            marginBottom: \"3%\"\n        },\n        questionSection3: {\n            height: (!isDesktop) ? 200: 500\n        },\n        smallInput: {\n            width: (!isDesktop) ? 200: 350,\n            \n        },\n        largeInput: {\n            width: (!isDesktop) ? \"100%\": 500,\n            height: (!isDesktop) ? 100 : 200\n        },\n        label: {\n            height: (!isDesktop) ? \"50%\" : \"80%\",\n            marginTop: 5,\n            marginBottom: (!isDesktop) ? 5 : 10,\n            color: \"#ff3399\",\n            fontSize: (!isDesktop) ? 12 : 20,\n            fontWeight: \"bold\"\n        },\n        container: {\n            height: (!isDesktop) ? \"15%\" : \"80%\"\n        }\n    }\n    \n    return (\n        <Grid container alignItems=\"center\" justifyContent=\"left\">\n            <IconButton>\n                <CloseIcon onClick={props.closeMessage} />\n            </IconButton>\n            <Grid container alignItems=\"center\" justifyContent=\"center\">\n                <Grid item md=\"12\" xs=\"12\" style={style.container}>\n                    <Typography style={style.label}>Name</Typography>\n                    <input style={style.smallInput} onChange={handleMessageName}/>\n                    <Typography style={style.label}>Email</Typography>\n                    <input style={style.smallInput} onChange={handleMessageEmail}/>\n                    <Typography style={style.label}>Phone</Typography>\n                    <input style={style.smallInput} onChange={handleMessagePhone}/>\n                    <Typography style={style.label}>Message</Typography>\n                    <textarea style={style.largeInput} onChange={handleMessageText}></textarea>\n                </Grid>\n                <Grid item md=\"12\" xs=\"12\">\n                    <Button onClick={sendEmail} style={style.submit}>Send</Button>\n                </Grid>     \n            </Grid>\n        </Grid>\n    )\n}\n\nexport default MessageForm;","/Users/markgire/Desktop/loveyourbirth/src/components/Home.js",["89","90","91"],"/Users/markgire/Desktop/loveyourbirth/src/components/Newborn.js",["92","93","94","95"],"import React, { useState, useEffect } from \"react\";\nimport \"./Service.css\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport '@fontsource/roboto';\n\nconst Newborn = () => {\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n\n    //Colors\n    const colorScheme = {\n        serviceCard: \"white\",\n        title: \"#E68FAE\",\n        font: \"black\",\n    }\n    //Style\n    const style = {\n        subTitle: {\n            fontWeight: \"bold\", \n            fontSize: 25\n        }\n    }\n\n    return (\n        <div style={style.serviceCard}>\n            <Typography className={\"subTitle\"} style={style.subTitle}>Postpartum & Newborn</Typography>\n            <Typography className={\"text\"}>During the immediate postpartum period, I will be supporting the golden hour. Skin to skin, bonding, and breastfeeding will be vital not only for the well-being of your baby, but to help protect you from postpartum hemorrhage. After determining that you and your baby are well, I will only be a watchful eye during this important hour. I will stay with you for 2-3 hours after birth and I will make sure you feel confident in taking care of yourself and your baby before I leave your home. Just as mentioned before, if there are any concerns I will communicate them with you. I will be able to provide postpartum and newborn visits in your home at 1-2 days, 1 week, 2 weeks, and 4 weeks. I will also provide a final 6 week postpartum visit. Since my scope of practice only allows me to care for newborns up to 28 days, I will help facilitate a transfer of care to your chosen pediatric provider. Breastfeeding assistance will also be available as needed. </Typography>\n        </div>\n    )\n}\n\nexport default Newborn;","/Users/markgire/Desktop/loveyourbirth/src/components/Prenatal.js",["96","97"],"import React, { useState, useEffect } from \"react\";\nimport \"./Service.css\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport '@fontsource/roboto';\n\nconst Prenatal = () => {\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n\n    //Style\n    const style = {\n        subTitle: {\n            fontWeight: \"bold\", \n            fontSize: 25\n        }\n    }\n\n    return (\n        <div style={style.serviceCard}>\n            <Typography className={\"subTitle\"} style={style.subTitle}>Pregnancy</Typography>\n            <Typography className={\"text\"}>The midwifery model of care emphasises supporting normal physiology, encouraging shared decision making, and providing holistic, family-centered care. A trusting relationship with your midwife is vital for safe and effective care in your home. We will build that relationship during reguarly scheduled visits throughout your pregnancy. With the exception of any ultrasounds, I will have the ability to complete any tests you may need right in your home. I encourage your family and friends to be involved in your care as this is a joyous time to bond with the anticipated arrival of your little one. I will continue to assess both you and your baby’s health to determine if continuing care in the home is safe. If I have any concerns, we will discuss them together and decide if a transfer of care is necessary. Midwives are experts in normal, so it is my duty to determine if anything is abnormal. Thankfully, most pregnancies are healthy and don’t require any intervention other than a watchful eye. It will be your responsibility that you aim for utmost health. I will offer you physical and emotional support to help facilitate a healthy and low-risk pregnancy. </Typography>\n        </div>\n    )\n}\n\nexport default Prenatal;","/Users/markgire/Desktop/loveyourbirth/src/components/Birth.js",["98","99","100","101"],"import React, { useState, useEffect } from \"react\";\nimport \"./Service.css\"\nimport { Grid, Typography } from \"@material-ui/core\";\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport '@fontsource/roboto';\n\nconst Birth = () => {\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n\n    //Colors\n    const colorScheme = {\n        serviceCard: \"white\",\n        title: \"#E68FAE\",\n        font: \"black\",\n    }\n    //Style\n    const style = {\n        subTitle: {\n            fontWeight: \"bold\", \n            fontSize: 25\n        }\n    }\n\n    return (\n        <div style={style.serviceCard}>\n            <Typography className={\"subTitle\"} style={style.subTitle}>Labor & Birth</Typography>\n            <Typography className={\"text\"}>As you near the end of your pregnancy, I am confident that you will be knowledgeable about the labor process. Once you are in active labor, I will remain by your side until birth and 2-3 hours postpartum. A birth assistant will accompany me who is also certified in neonatal resuscitation and adult CPR. I will bring all the supplies and skills needed to handle potential complications. Just like during pregnancy, I will continue to assess the health of you and your baby and notify you of any concerns I may have. If I believe it is safer for you to transfer your care to the hospital, my hope is that you will trust my recommendation. In a low-risk pregnancy and labor, evidence shows that birthing at home with a skilled attendant is just as safe as in the hospital. Labor and birth at home is very beneficial because you are in your safe space, able to move freely, eat and drink as you please, and truly follow your maternal instincts. I will be there as a guiding hand, but ultimately you are in charge of your birth experience. </Typography>\n        </div>\n    )\n}\n\nexport default Birth;","/Users/markgire/Desktop/loveyourbirth/src/components/Resources.js",["102","103","104","105","106","107"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport '@fontsource/roboto';\n\nconst Resources = () => {\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n\n    //Colors\n    const colorScheme = {\n        serviceCard: \"white\",\n        title: \"#E68FAE\",\n        font: \"black\",\n    }\n    //Style\n    const style = {\n        serviceCard: {\n            backgroundColor: colorScheme.serviceCard,\n            color: \"black\",\n            margin: \"3%\",\n            height: (!isDesktop) ? 30 : 20,\n            padding: (!isDesktop) ? 5 : 0\n        },\n        title: {\n            borderBottom: \"1px dashed black\"\n        },\n        heart: {\n            color: \"#ff3399\",\n            fontSize: 30\n        },\n        subtitle: {\n            color: colorScheme.title,\n            fontWeight: \"bold\",\n            fontSize: 25\n        },\n        link: {\n            color: \"#ff3399\",\n            textDecoration: 'none',\n            fontWeight: \"bold\",\n            marginTop: \"4%\"\n        }\n    }\n\n    return (\n        <>\n            <Grid item md=\"12\" xs=\"12\" style={style.serviceCard}>\n                <a href=\"https://www.spinningbabies.com\" target=\"_blank\" style={style.link}>Spinning Babies</a>\n            </Grid>\n            <Grid item md=\"12\" xs=\"12\" style={style.serviceCard}>\n                <a href=\"http://www.milescircuit.com\" target=\"_blank\" style={style.link}>Miles Circuit</a>\n            </Grid>\n            <Grid item md=\"12\" xs=\"12\" style={style.serviceCard}>\n                <a href=\"https://evidencebasedbirth.com\" target=\"_blank\" style={style.link}>Evidence Based Birth</a>\n            </Grid>\n            <Grid item md=\"12\" xs=\"12\" style={style.serviceCard}>\n                <a href=\"https://onlinelibrary.wiley.com/page/journal/15422011/homepage/share-with-women\" target=\"_blank\" style={style.link}>For Women</a>\n            </Grid>\n        </>\n    )\n}\n\nexport default Resources;",{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":3,"column":121,"nodeType":"114","messageId":"115","endLine":3,"endColumn":127},{"ruleId":"112","severity":1,"message":"116","line":3,"column":129,"nodeType":"114","messageId":"115","endLine":3,"endColumn":152},{"ruleId":"112","severity":1,"message":"117","line":3,"column":154,"nodeType":"114","messageId":"115","endLine":3,"endColumn":161},{"ruleId":"118","severity":1,"message":"119","line":229,"column":15,"nodeType":"120","messageId":"121","endLine":229,"endColumn":125,"fix":"122"},{"ruleId":"123","severity":1,"message":"124","line":265,"column":13,"nodeType":"120","endLine":265,"endColumn":54},{"ruleId":"125","severity":1,"message":"126","line":313,"column":75,"nodeType":"127","messageId":"128","endLine":313,"endColumn":105},{"ruleId":"125","severity":1,"message":"126","line":353,"column":74,"nodeType":"127","messageId":"128","endLine":353,"endColumn":156},{"ruleId":"112","severity":1,"message":"129","line":2,"column":28,"nodeType":"114","messageId":"115","endLine":2,"endColumn":37},{"ruleId":"112","severity":1,"message":"130","line":2,"column":39,"nodeType":"114","messageId":"115","endLine":2,"endColumn":44},{"ruleId":"112","severity":1,"message":"131","line":6,"column":8,"nodeType":"114","messageId":"115","endLine":6,"endColumn":20},{"ruleId":"123","severity":1,"message":"124","line":102,"column":17,"nodeType":"120","endLine":102,"endColumn":62},{"ruleId":"112","severity":1,"message":"132","line":2,"column":35,"nodeType":"114","messageId":"115","endLine":2,"endColumn":45},{"ruleId":"112","severity":1,"message":"133","line":2,"column":59,"nodeType":"114","messageId":"115","endLine":2,"endColumn":65},{"ruleId":"118","severity":1,"message":"119","line":86,"column":17,"nodeType":"120","messageId":"121","endLine":86,"endColumn":126,"fix":"134"},{"ruleId":"118","severity":1,"message":"119","line":97,"column":13,"nodeType":"120","messageId":"121","endLine":97,"endColumn":123,"fix":"135"},{"ruleId":"118","severity":1,"message":"119","line":122,"column":13,"nodeType":"120","messageId":"121","endLine":122,"endColumn":123,"fix":"136"},{"ruleId":"118","severity":1,"message":"119","line":135,"column":17,"nodeType":"120","messageId":"121","endLine":135,"endColumn":126,"fix":"137"},{"ruleId":"112","severity":1,"message":"138","line":11,"column":10,"nodeType":"114","messageId":"115","endLine":11,"endColumn":15},{"ruleId":"112","severity":1,"message":"139","line":11,"column":17,"nodeType":"114","messageId":"115","endLine":11,"endColumn":36},{"ruleId":"112","severity":1,"message":"140","line":25,"column":11,"nodeType":"114","messageId":"115","endLine":25,"endColumn":14},{"ruleId":"112","severity":1,"message":"141","line":26,"column":11,"nodeType":"114","messageId":"115","endLine":26,"endColumn":15},{"ruleId":"142","severity":1,"message":"143","line":130,"column":46,"nodeType":"144","messageId":"145","endLine":130,"endColumn":48},{"ruleId":"142","severity":1,"message":"143","line":133,"column":32,"nodeType":"144","messageId":"145","endLine":133,"endColumn":34},{"ruleId":"142","severity":1,"message":"143","line":133,"column":52,"nodeType":"144","messageId":"145","endLine":133,"endColumn":54},{"ruleId":"142","severity":1,"message":"143","line":135,"column":54,"nodeType":"144","messageId":"145","endLine":135,"endColumn":56},{"ruleId":"142","severity":1,"message":"143","line":137,"column":54,"nodeType":"144","messageId":"145","endLine":137,"endColumn":56},{"ruleId":"125","severity":1,"message":"126","line":370,"column":264,"nodeType":"127","messageId":"128","endLine":370,"endColumn":284},{"ruleId":"125","severity":1,"message":"126","line":569,"column":272,"nodeType":"127","messageId":"128","endLine":569,"endColumn":291},{"ruleId":"112","severity":1,"message":"146","line":2,"column":36,"nodeType":"114","messageId":"115","endLine":2,"endColumn":40},{"ruleId":"112","severity":1,"message":"147","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":14},{"ruleId":"112","severity":1,"message":"131","line":6,"column":8,"nodeType":"114","messageId":"115","endLine":6,"endColumn":20},{"ruleId":"123","severity":1,"message":"124","line":73,"column":17,"nodeType":"120","endLine":73,"endColumn":63},{"ruleId":"112","severity":1,"message":"147","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":14},{"ruleId":"112","severity":1,"message":"131","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":20},{"ruleId":"112","severity":1,"message":"148","line":9,"column":12,"nodeType":"114","messageId":"115","endLine":9,"endColumn":21},{"ruleId":"112","severity":1,"message":"149","line":19,"column":11,"nodeType":"114","messageId":"115","endLine":19,"endColumn":22},{"ruleId":"112","severity":1,"message":"147","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":14},{"ruleId":"112","severity":1,"message":"148","line":8,"column":12,"nodeType":"114","messageId":"115","endLine":8,"endColumn":21},{"ruleId":"112","severity":1,"message":"147","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":14},{"ruleId":"112","severity":1,"message":"131","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":20},{"ruleId":"112","severity":1,"message":"148","line":9,"column":12,"nodeType":"114","messageId":"115","endLine":9,"endColumn":21},{"ruleId":"112","severity":1,"message":"149","line":19,"column":11,"nodeType":"114","messageId":"115","endLine":19,"endColumn":22},{"ruleId":"112","severity":1,"message":"150","line":2,"column":16,"nodeType":"114","messageId":"115","endLine":2,"endColumn":26},{"ruleId":"112","severity":1,"message":"131","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":55,"column":17,"nodeType":"120","messageId":"121","endLine":55,"endColumn":93,"fix":"151"},{"ruleId":"118","severity":1,"message":"119","line":58,"column":17,"nodeType":"120","messageId":"121","endLine":58,"endColumn":90,"fix":"152"},{"ruleId":"118","severity":1,"message":"119","line":61,"column":17,"nodeType":"120","messageId":"121","endLine":61,"endColumn":93,"fix":"153"},{"ruleId":"118","severity":1,"message":"119","line":64,"column":17,"nodeType":"120","messageId":"121","endLine":64,"endColumn":142,"fix":"154"},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'colors' is defined but never used.","Identifier","unusedVar","'ListItemSecondaryAction' is defined but never used.","'Divider' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"157","text":"158"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'CardMedia' is defined but never used.","'Paper' is defined but never used.","'FavoriteIcon' is defined but never used.","'CardHeader' is defined but never used.","'Button' is defined but never used.",{"range":"159","text":"158"},{"range":"160","text":"158"},{"range":"161","text":"158"},{"range":"162","text":"158"},"'Email' is defined but never used.","'QuestionAnswerSharp' is defined but never used.","'day' is assigned a value but never used.","'time' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Card' is defined but never used.","'Grid' is defined but never used.","'isDesktop' is assigned a value but never used.","'colorScheme' is assigned a value but never used.","'Typography' is defined but never used.",{"range":"163","text":"158"},{"range":"164","text":"158"},{"range":"165","text":"158"},{"range":"166","text":"158"},"no-global-assign","no-unsafe-negation",[7079,7079]," rel=\"noreferrer\"",[2810,2810],[3445,3445],[4536,4536],[5178,5178],[1585,1585],[1780,1780],[1976,1976],[2228,2228]]