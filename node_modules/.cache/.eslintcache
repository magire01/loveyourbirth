[{"/Users/markgire/Desktop/loveyourbirth/src/index.js":"1","/Users/markgire/Desktop/loveyourbirth/src/App.js":"2","/Users/markgire/Desktop/loveyourbirth/src/reportWebVitals.js":"3","/Users/markgire/Desktop/loveyourbirth/src/components/About.js":"4","/Users/markgire/Desktop/loveyourbirth/src/components/Contact.js":"5","/Users/markgire/Desktop/loveyourbirth/src/components/ContactForm.js":"6","/Users/markgire/Desktop/loveyourbirth/src/components/MessageForm.js":"7","/Users/markgire/Desktop/loveyourbirth/src/components/Home.js":"8","/Users/markgire/Desktop/loveyourbirth/src/components/Newborn.js":"9","/Users/markgire/Desktop/loveyourbirth/src/components/Prenatal.js":"10","/Users/markgire/Desktop/loveyourbirth/src/components/Birth.js":"11","/Users/markgire/Desktop/loveyourbirth/src/components/Resources.js":"12"},{"size":500,"mtime":1630639502117,"results":"13","hashOfConfig":"14"},{"size":12587,"mtime":1632589489868,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1630639502119,"results":"16","hashOfConfig":"14"},{"size":3834,"mtime":1632588100528,"results":"17","hashOfConfig":"14"},{"size":5436,"mtime":1632588422274,"results":"18","hashOfConfig":"14"},{"size":25516,"mtime":1632199219469,"results":"19","hashOfConfig":"14"},{"size":4661,"mtime":1632195449643,"results":"20","hashOfConfig":"14"},{"size":1915,"mtime":1632588375980,"results":"21","hashOfConfig":"14"},{"size":1496,"mtime":1632585859385,"results":"22","hashOfConfig":"14"},{"size":1702,"mtime":1632585895884,"results":"23","hashOfConfig":"14"},{"size":1565,"mtime":1632585920647,"results":"24","hashOfConfig":"14"},{"size":2309,"mtime":1632280816559,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1vi8wz9",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":4,"source":"53","usedDeprecatedRules":"28"},"/Users/markgire/Desktop/loveyourbirth/src/index.js",[],["54","55"],"/Users/markgire/Desktop/loveyourbirth/src/App.js",["56","57","58","59","60","61","62"],"/Users/markgire/Desktop/loveyourbirth/src/reportWebVitals.js",[],"/Users/markgire/Desktop/loveyourbirth/src/components/About.js",["63"],"/Users/markgire/Desktop/loveyourbirth/src/components/Contact.js",["64","65","66","67","68","69"],"/Users/markgire/Desktop/loveyourbirth/src/components/ContactForm.js",["70","71","72","73","74","75","76","77","78","79","80"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, Typography, IconButton, LinearProgress, Checkbox } from \"@material-ui/core\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport Favorite from '@material-ui/icons/Favorite';\nimport QuestionData from \"../utilities/questions.json\";\nimport emailjs from 'emailjs-com';\nimport '@fontsource/roboto';\nimport { Email, QuestionAnswerSharp } from \"@material-ui/icons\";\n\nconst ContactForm = (props) => {\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n    //Checkbox\n    const label = { inputProps: { 'aria-label': 'Checkbox demo' } };\n    const day = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n    const time = [\"Morning\", \"Afternoon\", \"Evening\"]\n    const [selectDays, setSelectDays] = useState({\n            sunday: false,\n            monday: false,\n            tuesday: false,\n            wednesday: false,\n            thursday: false,\n            friday: false,\n            saturday: false\n        })\n    const checkSunday = () => {\n        if(!selectDays.sunday) {\n            setSelectDays({ ...selectDays, sunday: true })\n        } else {\n            setSelectDays({ ...selectDays, sunday: false })\n        }\n    } \n    const checkMonday = () => {\n        if(!selectDays.monday) {\n            setSelectDays({ ...selectDays, monday: true })\n        } else {\n            setSelectDays({ ...selectDays, monday: false })\n        }\n    }\n    const checkTuesday = () => {\n        if(!selectDays.tuesday) {\n            setSelectDays({ ...selectDays, tuesday: true })\n        } else {\n            setSelectDays({ ...selectDays, tuesday: false })\n        }\n    }\n    const checkWednesday = () => {\n        if(!selectDays.wednesday) {\n            setSelectDays({ ...selectDays, wednesday: true })\n        } else {\n            setSelectDays({ ...selectDays, wednesday: false })\n        }\n    }\n    const checkThursday = () => {\n        if(!selectDays.thursday) {\n            setSelectDays({ ...selectDays, thursday: true })\n        } else {\n            setSelectDays({ ...selectDays, thursday: false })\n        }\n    }\n    const checkFriday = () => {\n        if(!selectDays.friday) {\n            setSelectDays({ ...selectDays, friday: true })\n        } else {\n            setSelectDays({ ...selectDays, friday: false })\n        }\n    }\n    const checkSaturday = () => {\n        if(!selectDays.saturday) {\n            setSelectDays({ ...selectDays, saturday: true })\n        } else {\n            setSelectDays({ ...selectDays, saturday: false })\n        }\n    }\n\n    const [selectTime, setSelectTime] = useState({\n        morning: false,\n        afternoon: false,\n        evening: false\n    })\n\n    const checkMorning = () => {\n        if(!selectTime.morning) {\n            setSelectTime({ ...selectTime, morning: true})\n        } else {\n            setSelectTime({ ...selectTime, morning: false})\n        }\n    }\n    const checkAfternoon = () => {\n        if(!selectTime.afternoon) {\n            setSelectTime({ ...selectTime, afternoon: true})\n        } else {\n            setSelectTime({ ...selectTime, afternoon: false})\n        }\n    }\n    const checkEvening = () => {\n        if(!selectTime.evening) {\n            setSelectTime({ ...selectTime, evening: true})\n        } else {\n            setSelectTime({ ...selectTime, evening: false})\n        }\n    }\n    \n    //question # state\n    const [questionNum, setQuestionNum] = useState(0)\n\n    const [errValidation, setErrValidation] = useState({\n        name: false,\n        city: false,\n        email: false,\n        phone: false\n    })\n\n    //progress bar\n    const point = 100/QuestionData.data.length\n    const [progress, setProgress] = useState(point)\n\n    const nextQuestion = (e) => {\n        e.preventDefault();\n        if (questionNum === 0 && answer.name == \"\")\n        {\n            setErrValidation({ ...errValidation, name: true})\n        } else if (questionNum == 0 && answer.city == \"\") {\n            setErrValidation({ ...errValidation, city: true})\n        } else if (questionNum === 1 && answer.email == \"\") {\n            setErrValidation({ ...errValidation, email: true})\n        } else if (questionNum === 1 && answer.phone == \"\") {\n            setErrValidation({ ...errValidation, phone: true})\n        } else {\n            setQuestionNum(questionNum + 1)\n            setProgress(progress + point)\n        }\n    }\n\n    const prevQuestion = (e) => {\n        e.preventDefault();\n        setQuestionNum(questionNum - 1)\n        setProgress(progress - point)\n    }\n\n    const [answer, setAnswer] = useState({\n        name: \"\",\n        city: \"\",\n        phone: \"\",\n        email: \"\",\n        contact: \"\",\n        firstBirth: \"\",\n        envision: \"\",\n        why: \"\",\n        midwifery: \"\",\n        concerns: \"\",\n        refer: \"\",\n        consultPreference: \"\"\n    })\n\n    \n\n    const handleAnswerName = (e) => {\n        setAnswer({ ...answer, name: e.target.value })\n    }\n\n    const handleAnswerPhone = (e) => {\n        setAnswer({ ...answer, phone: e.target.value })\n    }\n\n    const handleAnswerEmail = (e) => {\n        setAnswer({ ...answer, email: e.target.value })\n    }\n    const handleAnswerCity = (e) => {\n        setAnswer({ ...answer, city: e.target.value })\n    }\n    const handleAnswerContactPref = (e, selection) => {\n        e.preventDefault();\n        setAnswer({ ...answer, contact: selection})\n    }\n    const handleAnswerFirstBirth = (e, selection) => {\n        e.preventDefault();\n        setAnswer({ ...answer, firstBirth: selection})\n    }\n    const handleAnswerEnvision = (e) => {\n        e.preventDefault();\n        setAnswer({ ...answer, envision: e.target.value })\n    }\n    const handleAnswerWhy = (e) => {\n        e.preventDefault();\n        setAnswer({ ...answer, why: e.target.value })\n    }\n    const handleAnswerMidwifery = (e) => {\n        e.preventDefault();\n        setAnswer({ ...answer, midwifery: e.target.value })\n    }\n    const handleAnswerConcerns = (e) => {\n        e.preventDefault();\n        setAnswer({ ...answer, concerns: e.target.value })\n    }\n    const handleAnswerRefer = (e) => {\n        e.preventDefault();\n        setAnswer({ ...answer, refer: e.target.value })\n    }\n\n    const handleConsultPreference = (e, selection) => {\n        e.preventDefault();\n        setAnswer({ ...answer, consultPreference: selection})\n    }\n    const sendEmail = (e) => {\n        e.preventDefault();\n        emailjs.send('service_sa2sv31', 'template_aldpnbc', \n        { \n            name: answer.name, \n            city: answer.city, \n            phone: answer.phone,\n            email: answer.email, \n            contact: answer.contact,\n            firstBirth: answer.firstBirth,\n            envision: answer.envision,\n            why: answer.why,\n            midwifery: answer.midwifery,\n            concerns: answer.concerns,\n            refer: answer.refer,\n            days: Object.keys(selectDays).filter(key => selectDays[key]),\n            time: Object.keys(selectTime).filter(key => selectTime[key]),\n            preference: answer.consultPreference\n        }, 'user_VCNwVyQVStaLfnvdfDv4t')\n        .then((result) => {\n            console.log(result.text);\n            props.successConsult();\n        }, (error) => {\n            console.log(error.text);\n        });\n        props.closeForm();\n    };\n    \n    //Style\n    const style = {\n        card: {\n            display: 'fixed',  \n            justifyContent:'center', \n            alignItems:'center',\n            height: (!isDesktop) ? \"60%\" : \"80%\",\n            width: (!isDesktop) ? \"97%\" : \"auto\",\n            margin: (!isDesktop) ? 0 : 100,\n            marginTop: (!isDesktop) ? 0 : 100,\n            textAlign: \"center\",\n            border: \"5px solid purple\",\n            backgroundColor: \"white\"\n        },\n        title: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        question: {\n            height: (!isDesktop) ? 60 : 80,\n            marginTop: 20,\n            marginBottom: (!isDesktop) ? 15 : 10,\n            color: \"purple\",\n            fontSize: (!isDesktop) ? 15 : 30,\n            fontWeight: \"bold\"\n        },\n        answerText: {\n            marginTop: (!isDesktop) ? 10 : 20,\n            marginBottom: (!isDesktop) ? 10 : 10,\n            color: \"purple\",\n            fontSize: (!isDesktop) ? 10 : 20,\n            fontWeight: \"bold\"\n        },\n        answerTextErr: {\n            marginTop: (!isDesktop) ? 10 : 20,\n            marginBottom: (!isDesktop) ? 10 : 10,\n            color: \"red\",\n            fontSize: (!isDesktop) ? 10 : 20,\n            fontWeight: \"bold\"\n        },\n        answerTextBold: {\n            marginTop: (!isDesktop) ? 10 : 20,\n            marginBottom: (!isDesktop) ? 10 : 10,\n            color: \"purple\",\n            fontSize: (!isDesktop) ? 10 : 20,\n        },\n        input: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        button: {\n            margin: \"5%\",\n            marginBottom: 20,\n            border: \"1px solid purple\"\n        },\n        activeButton: {\n            margin: \"5%\",\n            marginBottom: 20,\n            backgroundColor: \"purple\",\n            color: \"white\"\n\n        },\n        submit: { \n            // position: \"absolute\", \n            // bottom: (!isDesktop) ? \"40%\" : \"10%\",\n            color: \"white\",\n            backgroundColor: \"purple\",\n            marginTop: 20\n        },\n        next: { \n            // position: \"absolute\", \n            // bottom: (!isDesktop) ? \"40%\" : \"10%\",\n            color: \"white\",\n            backgroundColor: \"#d9b3ff\",\n            marginTop: 20\n        },\n        questionSection: {\n            height: (!isDesktop) ? 200 : 400,\n            marginBottom: 100\n        },\n        questionSection2: {\n            height: (!isDesktop) ? 400 : 400,\n            marginBottom: \"3%\",\n            paddingLeft: (!isDesktop) ? 10: 0\n        },\n        questionSection3: {\n            height: (!isDesktop) ? 200: 300\n        },\n        smallInput: {\n            width: (!isDesktop) ? 200: 350, \n        },\n        smallInputErr: {\n            width: (!isDesktop) ? 200: 350,\n            border: \"1px solid red\"\n        },\n        largeInput: {\n            width: (!isDesktop) ? \"90%\": 500,\n            height: (!isDesktop) ? \"60%\": 200,\n            margin: (!isDesktop) ? \"5%\": \"5%\"\n        },\n        progress: {\n            marginLeft: \"3%\",\n            marginRight: \"3%\",\n            width: \"100%\"\n        },\n        nextButtonActive: {\n            color: \"blue\"\n        },\n        nextButtonDisabled: {\n            color: \"white\"\n        },\n        checkbox: {\n            fontSize: (!isDesktop) ? 15 : 20,\n            alignText: \"right\"\n        },\n        checkitem: {\n            fontSize: (!isDesktop) ? 15 : 20,\n            alignText: \"left\"\n        }\n    }\n\n    const handleAnswer = () => {\n        switch(questionNum) {\n            case 1:\n                return (\n                <>\n                    <Typography style={(!errValidation.email) ? style.answerText : style.answerTextErr}>{(!errValidation.email) ? \"Email\" : \"*Email\"}</Typography> <input style={(!errValidation.email) ? style.smallInput : style.smallInputErr} value={answer.email} onChange={handleAnswerEmail} />\n                    <Typography style={(!errValidation.phone) ? style.answerText : style.answerTextErr}>{(!errValidation.phone) ? \"Phone\" : \"*Phone\"}</Typography> <input style={(!errValidation.phone) ? style.smallInput : style.smallInputErr} value={answer.email} value={answer.phone} onChange={handleAnswerPhone} />  \n                    <Typography style={style.answerText}>Preferred Method of Contact</Typography> <Button onClick={(e, value) => handleAnswerContactPref(e, \"Email\")} style={(answer.contact === \"Email\") ? style.activeButton : style.button}>Email</Button><Button onClick={(e, value) => handleAnswerContactPref(e, \"Phone\")} style={(answer.contact === \"Phone\") ? style.activeButton : style.button}>Phone</Button>\n                </>\n                )\n            case 2:\n                return (\n                <div style={{ paddingTop: (!isDesktop) ? 40 : 40}}>\n                    <Button onClick={(e, value) => handleAnswerFirstBirth(e, \"Yes\")} style={(answer.firstBirth === \"Yes\") ? style.activeButton : style.button}>Yes</Button>\n                    <Button onClick={(e, value) => handleAnswerFirstBirth(e, \"No\")} style={(answer.firstBirth === \"No\") ? style.activeButton : style.button}>No</Button>\n                </div>)\n            case 3:\n                return (<>\n                    <textarea style={style.largeInput} value={answer.why} onChange={handleAnswerWhy}></textarea>\n                </>)\n            case 4:\n                return (<>\n                    <textarea style={style.largeInput} value={answer.envision} onChange={handleAnswerEnvision}></textarea>\n                </>)\n            \n            case 5:\n                return (<>\n                    <textarea style={style.largeInput} value={answer.midwifery} onChange={handleAnswerMidwifery}></textarea>\n                </>)\n            case 6:\n                return (<>\n                    <textarea style={style.largeInput} value={answer.concerns} onChange={handleAnswerConcerns}></textarea>\n                </>)\n            case 7:\n                return (<>\n                    <input style={style.smallInput} value={answer.refer} onChange={handleAnswerRefer} />\n                </>)\n            case 8: \n                return (<>\n                    <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                        <Grid item md=\"6\" xs=\"5\">\n                            <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            onClick={checkSunday}\n                            >\n                                <Checkbox {...label} \n                                checked={selectDays.sunday} icon={<FavoriteBorder  style={style.checkbox}/>} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                                <Typography style={style.checkitem}>Sunday</Typography>\n                            </Grid>\n                            <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            onClick={checkMonday} \n                            >\n                                <Checkbox {...label}\n                                checked={selectDays.monday} icon={<FavoriteBorder  style={style.checkbox}/>} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                                <Typography style={style.checkitem}>Monday</Typography>\n                            </Grid>\n                            <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            onClick={checkTuesday} \n                            >\n                                <Checkbox {...label}\n                                checked={selectDays.tuesday} icon={<FavoriteBorder  style={style.checkbox}/>} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                                <Typography style={style.checkitem}>Tuesday</Typography>\n                            </Grid>\n                            <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            onClick={checkWednesday} \n                            >\n                                <Checkbox {...label}\n                                checked={selectDays.wednesday} icon={<FavoriteBorder  style={style.checkbox}/>} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                                <Typography style={style.checkitem}>Wednesday</Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid item md=\"6\" xs=\"5\">\n                            <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            onClick={checkThursday} \n                            >\n                                <Checkbox {...label}\n                                checked={selectDays.thursday} icon={<FavoriteBorder  style={style.checkbox}/>} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                                <Typography style={style.checkitem}>Thursday</Typography>\n                            </Grid>\n                            <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            onClick={checkFriday} \n                            >\n                                <Checkbox {...label} \n                                checked={selectDays.friday} icon={<FavoriteBorder  style={style.checkbox}/>} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                                <Typography style={style.checkitem}>Friday</Typography>\n                            </Grid>\n                            <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            onClick={checkSaturday} \n                            >\n                                <Checkbox {...label}\n                                checked={selectDays.saturday} icon={<FavoriteBorder  style={style.checkbox}/>} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                                <Typography style={style.checkitem}>Saturday</Typography>\n                            </Grid>\n\n                        </Grid>\n                    </Grid>\n            </>)\n        case 9:\n            return (<>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    onClick={checkMorning}\n                    >\n                        <Checkbox {...label} \n                         checked={selectTime.morning} icon={<FavoriteBorder  style={style.checkbox} />} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                        <Typography style={style.checkitem}>Morning</Typography>\n                </Grid>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    onClick={checkAfternoon}\n                    >\n                        <Checkbox {...label}\n                         checked={selectTime.afternoon} icon={<FavoriteBorder  style={style.checkbox} />} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                        <Typography style={style.checkitem}>Afternoon</Typography>\n                </Grid>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    onClick={checkEvening} \n                    >\n                        <Checkbox {...label} \n                        checked={selectTime.evening} icon={<FavoriteBorder  style={style.checkbox} />} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                        <Typography style={style.checkitem}>Evening</Typography>\n                </Grid>\n\n            </>)\n            case 10:\n                return (<>\n                    <div style={{ paddingTop: (!isDesktop) ? 40 : 40}}>\n                        <Button onClick={(e, value) => handleConsultPreference(e, \"In Person\")} style={(answer.consultPreference === \"In Person\") ? style.activeButton : style.button}>In Person</Button>\n                        <Button onClick={(e, value) => handleConsultPreference(e, \"Phone\")} style={(answer.consultPreference === \"Phone\") ? style.activeButton : style.button}>Phone</Button>\n                    </div>\n                </>)\n            case 11:\n                return (<>\n                <>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        >\n                            <Typography style={style.answerTextBold}> Name: </Typography>\n                            <Typography style={style.answerText}>{answer.name}</Typography>\n                    </Grid>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        >\n                            <Typography style={style.answerTextBold}> Email: </Typography>\n                            <Typography style={style.answerText}>{answer.email}</Typography>\n                    </Grid>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        >\n                            <Typography style={style.answerTextBold}> Phone: </Typography>\n                            <Typography style={style.answerText}>{answer.phone}</Typography>\n                    </Grid>\n                    \n                </>\n                </>)\n            default:\n                return (\n                <>\n                    <Typography style={(!errValidation.name) ? style.answerText : style.answerTextErr}>{(!errValidation.name) ? \"Name\" : \"*Name\"}</Typography> <input style={(!errValidation.name) ? style.smallInput : style.smallInputErr} value={answer.name} onChange={handleAnswerName}/>\n                    <Typography style={(!errValidation.city) ? style.answerText : style.answerTextErr}>{(!errValidation.city) ? \"City, State\" : \"*City, State\"}</Typography> <input style={(!errValidation.city) ? style.smallInput : style.smallInputErr} value={answer.name} value={answer.city} onChange={handleAnswerCity} />\n                </>)\n            \n        }\n    }\n    \n    return (\n        <div>\n            <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\"  style={{ paddingLeft: 0, paddingRight: (!isDesktop) ? \"4%\" : 0 }}>\n                <Grid container direction=\"row\" justifyContent=\"left\">\n                    <IconButton>\n                        <CloseIcon onClick={props.closeForm} />\n                    </IconButton>\n                        <LinearProgress variant=\"determinate\" value={progress} style={style.progress} />\n                </Grid>\n                <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                    <Grid item md=\"1\" xs=\"1\">\n                        {(questionNum === 0) \n                        ? <IconButton> \n                            <ArrowBackIcon style={style.nextButtonDisabled}/>\n                        </IconButton>\n                        : <IconButton onClick={prevQuestion}> \n                            <ArrowBackIcon style={style.nextButtonActive} />\n                         </IconButton>}\n                    </Grid>\n                    <Grid item md=\"10\" xs=\"10\" style={style.questionSection2}>\n                        <Typography style={style.question}>{QuestionData.data[questionNum].question}</Typography>\n                        <div style={style.questionSection3}>\n                            {handleAnswer()}\n                        </div>\n                        <Grid item md=\"12\" xs=\"12\">\n                            {(questionNum === QuestionData.data.length - 1) \n                            ? <Button onClick={sendEmail} style={style.submit}>Submit</Button> \n                            : <Button onClick={nextQuestion} style={style.next}>Next</Button>}\n                        </Grid> \n                    </Grid>\n                    <Grid item md=\"1\" xs=\"1\">\n                        {(questionNum === QuestionData.data.length - 1) \n                        ? <IconButton>\n                            <ArrowForwardIcon style={style.nextButtonDisabled}/>\n                        </IconButton>\n                        : <IconButton onClick={nextQuestion}>\n                            <ArrowForwardIcon style={style.nextButtonActive}/>\n                          </IconButton>}\n                    </Grid>\n                           \n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default ContactForm;","/Users/markgire/Desktop/loveyourbirth/src/components/MessageForm.js",["81"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, Typography, Card, IconButton } from \"@material-ui/core\";\nimport '@fontsource/roboto';\nimport emailjs from 'emailjs-com';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst MessageForm = (props) => {\n\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n\n    //Send Email\n    const [message, setMessage] = useState({\n            name: \"\",\n            email: \"\",\n            phone: \"\",\n            text: \"\"\n        })\n    const handleMessageName = (e) => {\n        setMessage({ ...message, name: e.target.value })\n    }\n    const handleMessageEmail = (e) => {\n        setMessage({ ...message, email: e.target.value })\n    }\n    const handleMessagePhone = (e) => {\n        setMessage({ ...message, phone: e.target.value })\n    }\n    const handleMessageText = (e) => {\n        setMessage({ ...message, text: e.target.value })\n    }\n\n    const sendEmail = (e) => {\n        e.preventDefault();\n        emailjs.send('service_sa2sv31', 'template_66y7sf6', { name: message.name, email: message.email, phone: message.phone, text: message.text}, 'user_VCNwVyQVStaLfnvdfDv4t')\n        .then((result) => {\n            console.log(result.text);\n            props.successMessage();\n        }, (error) => {\n            console.log(error.text);\n        });\n        props.closeMessage();\n    };\n    //Style\n    const style = {\n        card: {\n            display: 'fixed',  \n            justifyContent:'center', \n            alignItems:'center',\n            height: (!isDesktop) ? \"60%\" : \"80%\",\n            width: (!isDesktop) ? \"97%\" : \"auto\",\n            margin: (!isDesktop) ? 0 : 100,\n            marginTop: (!isDesktop) ? 0 : 100,\n            textAlign: \"center\",\n            border: \"5px solid pink\",\n            backgroundColor: \"white\"\n        },\n        title: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        input: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        button: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        submit: { \n            // position: \"absolute\", \n            // bottom: (!isDesktop) ? \"40%\" : \"10%\",\n            color: \"white\",\n            backgroundColor: \"#FDB7C2\"\n        },\n        questionSection: {\n            height: (!isDesktop) ? 200 : 400,\n            marginBottom: 100\n        },\n        questionSection2: {\n            height: (!isDesktop) ? 100 : 100,\n            marginBottom: \"3%\"\n        },\n        questionSection3: {\n            height: (!isDesktop) ? 200: 500\n        },\n        smallInput: {\n            width: (!isDesktop) ? 200: 350,\n            \n        },\n        largeInput: {\n            width: (!isDesktop) ? \"100%\": 500,\n            height: (!isDesktop) ? 100 : 200\n        },\n        label: {\n            height: (!isDesktop) ? \"50%\" : \"80%\",\n            marginTop: 5,\n            marginBottom: (!isDesktop) ? 5 : 10,\n            color: \"#ff3399\",\n            fontSize: (!isDesktop) ? 12 : 20,\n            fontWeight: \"bold\"\n        },\n        container: {\n            height: (!isDesktop) ? \"15%\" : \"80%\"\n        }\n    }\n    \n    return (\n        <Grid container alignItems=\"center\" justifyContent=\"left\">\n            <IconButton>\n                <CloseIcon onClick={props.closeMessage} />\n            </IconButton>\n            <Grid container alignItems=\"center\" justifyContent=\"center\">\n                <Grid item md=\"12\" xs=\"12\" style={style.container}>\n                    <Typography style={style.label}>Name</Typography>\n                    <input style={style.smallInput} onChange={handleMessageName}/>\n                    <Typography style={style.label}>Email</Typography>\n                    <input style={style.smallInput} onChange={handleMessageEmail}/>\n                    <Typography style={style.label}>Phone</Typography>\n                    <input style={style.smallInput} onChange={handleMessagePhone}/>\n                    <Typography style={style.label}>Message</Typography>\n                    <textarea style={style.largeInput} onChange={handleMessageText}></textarea>\n                </Grid>\n                <Grid item md=\"12\" xs=\"12\">\n                    <Button onClick={sendEmail} style={style.submit}>Send</Button>\n                </Grid>     \n            </Grid>\n        </Grid>\n    )\n}\n\nexport default MessageForm;","/Users/markgire/Desktop/loveyourbirth/src/components/Home.js",["82"],"/Users/markgire/Desktop/loveyourbirth/src/components/Newborn.js",[],"/Users/markgire/Desktop/loveyourbirth/src/components/Prenatal.js",[],"/Users/markgire/Desktop/loveyourbirth/src/components/Birth.js",[],"/Users/markgire/Desktop/loveyourbirth/src/components/Resources.js",["83","84","85","86","87","88"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport '@fontsource/roboto';\n\nconst Resources = () => {\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n\n    //Colors\n    const colorScheme = {\n        serviceCard: \"white\",\n        title: \"#E68FAE\",\n        font: \"black\",\n    }\n    //Style\n    const style = {\n        serviceCard: {\n            backgroundColor: colorScheme.serviceCard,\n            color: \"black\",\n            margin: \"3%\",\n            height: (!isDesktop) ? 30 : 20,\n            padding: (!isDesktop) ? 5 : 0\n        },\n        title: {\n            borderBottom: \"1px dashed black\"\n        },\n        heart: {\n            color: \"#ff3399\",\n            fontSize: 30\n        },\n        subtitle: {\n            color: colorScheme.title,\n            fontWeight: \"bold\",\n            fontSize: 25\n        },\n        link: {\n            color: \"#ff3399\",\n            textDecoration: 'none',\n            fontWeight: \"bold\",\n            marginTop: \"4%\"\n        }\n    }\n\n    return (\n        <>\n            <Grid item md=\"12\" xs=\"12\" style={style.serviceCard}>\n                <a href=\"https://www.spinningbabies.com\" target=\"_blank\" style={style.link}>Spinning Babies</a>\n            </Grid>\n            <Grid item md=\"12\" xs=\"12\" style={style.serviceCard}>\n                <a href=\"http://www.milescircuit.com\" target=\"_blank\" style={style.link}>Miles Circuit</a>\n            </Grid>\n            <Grid item md=\"12\" xs=\"12\" style={style.serviceCard}>\n                <a href=\"https://evidencebasedbirth.com\" target=\"_blank\" style={style.link}>Evidence Based Birth</a>\n            </Grid>\n            <Grid item md=\"12\" xs=\"12\" style={style.serviceCard}>\n                <a href=\"https://onlinelibrary.wiley.com/page/journal/15422011/homepage/share-with-women\" target=\"_blank\" style={style.link}>For Women</a>\n            </Grid>\n        </>\n    )\n}\n\nexport default Resources;",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":3,"column":121,"nodeType":"95","messageId":"96","endLine":3,"endColumn":127},{"ruleId":"93","severity":1,"message":"97","line":3,"column":129,"nodeType":"95","messageId":"96","endLine":3,"endColumn":152},{"ruleId":"93","severity":1,"message":"98","line":3,"column":154,"nodeType":"95","messageId":"96","endLine":3,"endColumn":161},{"ruleId":"99","severity":1,"message":"100","line":219,"column":15,"nodeType":"101","messageId":"102","endLine":219,"endColumn":125,"fix":"103"},{"ruleId":"104","severity":1,"message":"105","line":255,"column":13,"nodeType":"101","endLine":255,"endColumn":54},{"ruleId":"106","severity":1,"message":"107","line":303,"column":75,"nodeType":"108","messageId":"109","endLine":303,"endColumn":105},{"ruleId":"106","severity":1,"message":"107","line":343,"column":74,"nodeType":"108","messageId":"109","endLine":343,"endColumn":156},{"ruleId":"104","severity":1,"message":"105","line":65,"column":17,"nodeType":"101","endLine":65,"endColumn":62},{"ruleId":"93","severity":1,"message":"110","line":2,"column":35,"nodeType":"95","messageId":"96","endLine":2,"endColumn":45},{"ruleId":"93","severity":1,"message":"111","line":2,"column":59,"nodeType":"95","messageId":"96","endLine":2,"endColumn":65},{"ruleId":"99","severity":1,"message":"100","line":84,"column":17,"nodeType":"101","messageId":"102","endLine":84,"endColumn":126,"fix":"112"},{"ruleId":"99","severity":1,"message":"100","line":95,"column":13,"nodeType":"101","messageId":"102","endLine":95,"endColumn":123,"fix":"113"},{"ruleId":"99","severity":1,"message":"100","line":120,"column":13,"nodeType":"101","messageId":"102","endLine":120,"endColumn":123,"fix":"114"},{"ruleId":"99","severity":1,"message":"100","line":133,"column":17,"nodeType":"101","messageId":"102","endLine":133,"endColumn":126,"fix":"115"},{"ruleId":"93","severity":1,"message":"116","line":11,"column":10,"nodeType":"95","messageId":"96","endLine":11,"endColumn":15},{"ruleId":"93","severity":1,"message":"117","line":11,"column":17,"nodeType":"95","messageId":"96","endLine":11,"endColumn":36},{"ruleId":"93","severity":1,"message":"118","line":25,"column":11,"nodeType":"95","messageId":"96","endLine":25,"endColumn":14},{"ruleId":"93","severity":1,"message":"119","line":26,"column":11,"nodeType":"95","messageId":"96","endLine":26,"endColumn":15},{"ruleId":"120","severity":1,"message":"121","line":130,"column":46,"nodeType":"122","messageId":"123","endLine":130,"endColumn":48},{"ruleId":"120","severity":1,"message":"121","line":133,"column":32,"nodeType":"122","messageId":"123","endLine":133,"endColumn":34},{"ruleId":"120","severity":1,"message":"121","line":133,"column":52,"nodeType":"122","messageId":"123","endLine":133,"endColumn":54},{"ruleId":"120","severity":1,"message":"121","line":135,"column":54,"nodeType":"122","messageId":"123","endLine":135,"endColumn":56},{"ruleId":"120","severity":1,"message":"121","line":137,"column":54,"nodeType":"122","messageId":"123","endLine":137,"endColumn":56},{"ruleId":"106","severity":1,"message":"107","line":370,"column":264,"nodeType":"108","messageId":"109","endLine":370,"endColumn":284},{"ruleId":"106","severity":1,"message":"107","line":569,"column":272,"nodeType":"108","messageId":"109","endLine":569,"endColumn":291},{"ruleId":"93","severity":1,"message":"124","line":2,"column":36,"nodeType":"95","messageId":"96","endLine":2,"endColumn":40},{"ruleId":"104","severity":1,"message":"105","line":38,"column":17,"nodeType":"101","endLine":38,"endColumn":62},{"ruleId":"93","severity":1,"message":"125","line":2,"column":16,"nodeType":"95","messageId":"96","endLine":2,"endColumn":26},{"ruleId":"93","severity":1,"message":"126","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":55,"column":17,"nodeType":"101","messageId":"102","endLine":55,"endColumn":93,"fix":"127"},{"ruleId":"99","severity":1,"message":"100","line":58,"column":17,"nodeType":"101","messageId":"102","endLine":58,"endColumn":90,"fix":"128"},{"ruleId":"99","severity":1,"message":"100","line":61,"column":17,"nodeType":"101","messageId":"102","endLine":61,"endColumn":93,"fix":"129"},{"ruleId":"99","severity":1,"message":"100","line":64,"column":17,"nodeType":"101","messageId":"102","endLine":64,"endColumn":142,"fix":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'colors' is defined but never used.","Identifier","unusedVar","'ListItemSecondaryAction' is defined but never used.","'Divider' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"133","text":"134"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'CardHeader' is defined but never used.","'Button' is defined but never used.",{"range":"135","text":"134"},{"range":"136","text":"134"},{"range":"137","text":"134"},{"range":"138","text":"134"},"'Email' is defined but never used.","'QuestionAnswerSharp' is defined but never used.","'day' is assigned a value but never used.","'time' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Card' is defined but never used.","'Typography' is defined but never used.","'FavoriteIcon' is defined but never used.",{"range":"139","text":"134"},{"range":"140","text":"134"},{"range":"141","text":"134"},{"range":"142","text":"134"},"no-global-assign","no-unsafe-negation",[6873,6873]," rel=\"noreferrer\"",[2737,2737],[3372,3372],[4463,4463],[5105,5105],[1585,1585],[1780,1780],[1976,1976],[2228,2228]]