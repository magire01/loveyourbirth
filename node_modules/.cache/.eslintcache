[{"/Users/markgire/Desktop/loveyourbirth/src/index.js":"1","/Users/markgire/Desktop/loveyourbirth/src/App.js":"2","/Users/markgire/Desktop/loveyourbirth/src/reportWebVitals.js":"3","/Users/markgire/Desktop/loveyourbirth/src/components/About.js":"4","/Users/markgire/Desktop/loveyourbirth/src/components/Prenatal.js":"5","/Users/markgire/Desktop/loveyourbirth/src/components/Labor.js":"6","/Users/markgire/Desktop/loveyourbirth/src/components/Contact.js":"7","/Users/markgire/Desktop/loveyourbirth/src/components/Newborn.js":"8","/Users/markgire/Desktop/loveyourbirth/src/components/ContactForm.js":"9","/Users/markgire/Desktop/loveyourbirth/src/components/MessageForm.js":"10"},{"size":500,"mtime":1630639502117,"results":"11","hashOfConfig":"12"},{"size":4317,"mtime":1631591923887,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1630639502119,"results":"14","hashOfConfig":"12"},{"size":4797,"mtime":1631594731059,"results":"15","hashOfConfig":"12"},{"size":6107,"mtime":1630908052636,"results":"16","hashOfConfig":"12"},{"size":4048,"mtime":1630908068182,"results":"17","hashOfConfig":"12"},{"size":2391,"mtime":1631594217020,"results":"18","hashOfConfig":"12"},{"size":2602,"mtime":1630908066932,"results":"19","hashOfConfig":"12"},{"size":8451,"mtime":1631594012018,"results":"20","hashOfConfig":"12"},{"size":2704,"mtime":1631594273248,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1vi8wz9",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"24"},"/Users/markgire/Desktop/loveyourbirth/src/index.js",[],["50","51"],"/Users/markgire/Desktop/loveyourbirth/src/App.js",["52","53","54","55","56","57"],"import './App.css';\nimport React, { useState, useRef } from \"react\";\nimport { Paper, Grid, Button, Drawer, List, ListItem, Typography, IconButton } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport '@fontsource/roboto';\nimport lybLogo from \"./lybLogo3.png\";\n\nimport About from \"./components/About\";\nimport Prenatal from './components/Prenatal';\nimport Labor from './components/Labor';\nimport Newborn from './components/Newborn';\nimport Contact from './components/Contact';\n \n\nfunction App() {\n  const scrollToRef = (ref) => window.scrollTo({\n    behavior: \"smooth\",\n    top: ref.current.offsetTop\n  })\n  const HomeRef = useRef()\n  const ContactRef = useRef()\n  const AboutRef = useRef()\n  const PrenatalRef = useRef()\n  const LaborRef = useRef()\n  const NewbornRef = useRef()\n  const scroll = [HomeRef, AboutRef, PrenatalRef, LaborRef, NewbornRef, ContactRef]\n  const page = [\"Home\", \"About\", \"Prenatal\", \"Labor\", \"Newborn\", \"Contact\"]\n\n  const [openNav, setOpenNav] = useState(false);\n  \n  const openDrawer = (e) => {\n    e.preventDefault();\n    setOpenNav(!openNav);\n  }\n\n  const openPage = (e, page) => {\n    e.preventDefault();\n    setOpenNav(!openNav)\n    scrollToRef(page);\n  }\n\n  const pageColor = [\"#E4FBFF\", \"#E4FBFF\", \"#E4FBFF\", \"#E4FBFF\", \"#E4FBFF\", \"#E4FBFF\"]\n\n  const style = {\n    banner: {\n      width: \"60%\",\n      height: \"auto\"\n    },\n    page: {\n      marginTop: \"5%\",\n      marginBottom: \"5%\",\n      marginLeft: \"3%\",\n      marginRight: \"3%\"\n    },\n    page1: {\n      paddingTop: \"5%\", \n      paddingBottom: \"5%\",\n      paddingRight: \"5%\",\n      paddingLeft: \"5%\",\n      backgroundColor: pageColor[0]\n    },\n    page2: {\n      paddingTop: \"5%\", \n      paddingBottom: \"5%\", \n      paddingRight: \"5%\",\n      paddingLeft: \"5%\",\n      backgroundColor: pageColor[1]\n    },\n    page3: {\n      paddingTop: \"5%\", \n      paddingBottom: \"5%\", \n      paddingRight: \"5%\",\n      paddingLeft: \"5%\",\n      backgroundColor: pageColor[2]\n    },\n    page4: {\n      paddingTop: \"5%\", \n      paddingBottom: \"5%\", \n      paddingRight: \"5%\",\n      paddingLeft: \"5%\",\n      backgroundColor: pageColor[3]\n    },\n    page5: {\n      paddingTop: \"5%\", \n      paddingBottom: \"5%\", \n      paddingRight: \"5%\",\n      paddingLeft: \"5%\",\n      backgroundColor: pageColor[4]\n    }\n  }\n  return (\n    <div className=\"App\">\n      <Grid container style={{ paddingTop: \"3%\" }}>\n        <Grid md=\"1\" xs=\"1\">\n          <IconButton onClick={openDrawer}>\n              <MenuIcon style={{ position: \"fixed\", backgroundColor: \"pink\" }}/>\n          </IconButton>\n        </Grid>\n\n        <Grid md=\"10\" xs=\"10\">\n          <Grid item md=\"12\" xs=\"12\" ref={HomeRef}>\n            <div>\n              <img src={lybLogo} style={style.banner}/>\n            </div>\n          </Grid>\n          <Grid item md=\"12\" xs=\"12\" style={style.page}ref={AboutRef}>\n            {/* <Paper style={style.page1}> */}\n              <About />\n            {/* </Paper> */}\n          </Grid>\n          {/* <Grid item md=\"12\" xs=\"12\" style={style.page} ref={PrenatalRef}>\n            <Paper style={style.page2}>\n              <Prenatal />\n            </Paper>\n          </Grid>\n          <Grid item md=\"12\" xs=\"12\" style={style.page} ref={LaborRef}>\n            <Paper style={style.page3}>\n              <Labor />\n            </Paper>\n          </Grid>\n          <Grid item md=\"12\" xs=\"12\" style={style.page} ref={NewbornRef}>\n            <Paper style={style.page4}>\n              <Newborn />\n            </Paper>\n          </Grid> */}\n          <Grid item md=\"12\" xs=\"12\" style={style.page} ref={ContactRef}>\n              <Contact />\n          </Grid>\n        </Grid>\n\n        <Grid md=\"1\" xs=\"1\">\n        </Grid>\n      </Grid>\n      \n      \n      <Drawer anchor=\"left\" open={openNav}>\n        <Grid container style={{ paddingTop: \"20%\", backgroundColor: \"lightPink\" }}>\n          <List>\n            <IconButton onClick={openDrawer}>\n                <ChevronLeftIcon />\n            </IconButton>\n            {page.map((item, index) => (\n              <ListItem> \n                <Button onClick={e => openPage(e, scroll[index])}>{item}</Button>\n              </ListItem>\n            ))}\n          </List>\n        </Grid>\n      </Drawer>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/markgire/Desktop/loveyourbirth/src/reportWebVitals.js",[],"/Users/markgire/Desktop/loveyourbirth/src/components/About.js",["58","59","60","61","62","63","64","65","66"],"/Users/markgire/Desktop/loveyourbirth/src/components/Prenatal.js",["67","68","69","70","71","72","73","74"],"import React, { useState } from \"react\";\nimport { Grid, Paper, Button, Drawer, List, ListItem, Typography, IconButton } from \"@material-ui/core\";\n\nimport '@fontsource/roboto';\n\nconst Prenatal = () => {\n    return (\n        <>\n            <Typography variant=\"h5\">Prenatal</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n        \n        </>\n    )\n}\n\nexport default Prenatal;","/Users/markgire/Desktop/loveyourbirth/src/components/Labor.js",["75","76","77","78","79","80","81","82"],"import React, { useState } from \"react\";\nimport { Grid, Paper, Button, Drawer, List, ListItem, Typography, IconButton } from \"@material-ui/core\";\n\nimport '@fontsource/roboto';\n\nconst Labor = () => {\n    return (\n        <>\n            <Typography variant=\"h5\">Labor and Birth</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n        \n        </>\n    )\n}\n\nexport default Labor;","/Users/markgire/Desktop/loveyourbirth/src/components/Contact.js",["83","84","85","86","87"],"import React, { useState } from \"react\";\nimport { Grid, Paper, Button, Drawer, List, ListItem, Typography, IconButton, Modal, Card, CardHeader } from \"@material-ui/core\";\n\nimport ContactForm from \"./ContactForm\";\nimport MessageForm from \"./MessageForm\";\n\nimport '@fontsource/roboto';\n\nconst Contact = () => {\n    const [openForm, setOpenForm] = useState(false);\n    const [openMessage, setOpenMessage] = useState(false);\n\n    const handleOpen = () => {\n        setOpenForm(true);\n      }\n    \n    const handleClose = () => {\n    setOpenForm(false);\n    }\n\n    const messageOpen = () => {\n        setOpenMessage(true)\n    }\n\n    const messageClose = () => {\n        setOpenMessage(false)\n    }\n\n    return (\n        <Grid container direction=\"row\">\n            <Grid item md=\"6\" xs=\"12\">\n                <Button onClick={handleOpen}>New Patient Form</Button>\n                <Modal\n                    open={openForm}\n                    onClose={handleClose}\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    >\n                    <ContactForm />\n                </Modal>\n            </Grid>\n            <Grid item md=\"6\" xs=\"12\">\n                <Button onClick={messageOpen}>Send Message</Button>\n                <Modal\n                    open={openMessage}\n                    onClose={messageClose}\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    >\n                    <MessageForm />\n                </Modal>\n            </Grid>\n            <Grid item md=\"12\" xs=\"12\">\n                <Card>\n                    <CardHeader title=\"Contact\" />\n                    <Grid container direction=\"row\" alignItems=\"center\">\n                        <Grid item md=\"4\" xs=\"12\">\n                            <Typography>Phone: 555-555-5555</Typography>\n                        </Grid>\n                        <Grid item md=\"4\" xs=\"12\">\n                            <Typography>Email: mag@gmail.yeet</Typography>\n                        </Grid>\n                        <Grid item md=\"4\" xs=\"12\">\n                            <Typography>PO Box: 123252</Typography>\n                        </Grid>\n                    </Grid>\n                </Card>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Contact;","/Users/markgire/Desktop/loveyourbirth/src/components/Newborn.js",["88","89","90","91","92","93","94","95"],"import React, { useState } from \"react\";\nimport { Grid, Paper, Button, Drawer, List, ListItem, Typography, IconButton } from \"@material-ui/core\";\n\nimport '@fontsource/roboto';\n\nconst Newborn = () => {\n    return (\n        <>\n            <Typography variant=\"h5\">Newborn</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n            <Typography>test blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah testtest blah blah blah test</Typography>\n        \n        </>\n    )\n}\n\nexport default Newborn;","/Users/markgire/Desktop/loveyourbirth/src/components/ContactForm.js",["96","97","98","99","100"],"import React, { useState } from \"react\";\nimport { Grid, Paper, Button, Drawer, List, ListItem, Typography, IconButton, Card } from \"@material-ui/core\";\n\nimport QuestionData from \"../utilities/questions.json\";\n\nimport '@fontsource/roboto';\n\nconst ContactForm = () => {\n\n    const style = {\n        card: {\n            display: 'absolute',  \n            justifyContent:'center', \n            alignItems:'center',\n            height: 600,\n            width: \"auto\",\n            margin: 100,\n            textAlign: \"center\"\n        },\n        title: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        question: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        input: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        button: {\n            marginTop: 20,\n            marginBottom: 20\n        }\n    }\n\n    const [questionNum, setQuestionNum] = useState(0)\n\n    const nextQuestion = (e) => {\n        e.preventDefault();\n        setQuestionNum(questionNum + 1)\n    }\n\n    const prevQuestion = (e) => {\n        e.preventDefault();\n        setQuestionNum(questionNum - 1)\n    }\n\n    const [answer, setAnswer] = useState({\n        name: \"\"\n    })\n\n    const handleAnswerName = (e) => {\n        setAnswer({ ...answer, name: e.target.value })\n    }\n\n    const handleAnswerPhone = (e) => {\n        setAnswer({ ...answer, phone: e.target.value })\n    }\n\n    const handleAnswerEmail = (e) => {\n        setAnswer({ ...answer, email: e.target.value })\n    }\n\n    const handleAnswerCity = (e) => {\n        setAnswer({ ...answer, city: e.target.value })\n    }\n    const handleAnswerContactPref = (e, selection) => {\n        e.preventDefault();\n        setAnswer({ ...answer, contact: selection})\n    }\n    const handleAnswerFirstBirth = (e, selection) => {\n        e.preventDefault();\n        setAnswer({ ...answer, firstBirth: selection})\n        if(selection === \"No\") {\n            setQuestionNum(questionNum + 1)\n        } else {\n            setQuestionNum(questionNum + 2)\n        }\n    }\n    const handleAnswerBirthComplications = (e, selection) => {\n        e.preventDefault();\n        setAnswer({ ...answer, birthComplications: selection })\n    }\n    const handleAnswerNewbornComplications = (e, selection) => {\n        e.preventDefault();\n        setAnswer({ ...answer, newbornComplications: selection })\n    }\n    const handleAnswerHomeBirth = (e, selection) => {\n        e.preventDefault();\n        setAnswer({ ...answer, homeBirth: selection })\n    }\n    const handleAnswerHealthConditions = (e, selection) => {\n        e.preventDefault();\n        setAnswer({ ...answer, healthConditions: selection })\n    }\n    const handleAnswerVBAC = (e, selection) => {\n        e.preventDefault();\n        setAnswer({ ...answer, VBAC: selection })\n    }\n    const handleAnswerEnvision = (e) => {\n        e.preventDefault();\n        setAnswer({ ...answer, envision: e.target.value })\n    }\n    const handleAnswerWhy = (e) => {\n        e.preventDefault();\n        setAnswer({ ...answer, why: e.target.value })\n    }\n    const handleAnswerMidwifery = (e) => {\n        e.preventDefault();\n        setAnswer({ ...answer, midwifery: e.target.value })\n    }\n    const handleAnswerConcerns = (e) => {\n        e.preventDefault();\n        setAnswer({ ...answer, concerns: e.target.value })\n    }\n    const handleAnswerRefer = (e) => {\n        e.preventDefault();\n        setAnswer({ ...answer, refer: e.target.value })\n    }\n\n    const handleAnswer = () => {\n        switch(questionNum) {\n            case 1:\n                return (\n                <>\n                    <button onClick={(e, value) => handleAnswerFirstBirth(e, \"Yes\")}>Yes</button>\n                    <button onClick={(e, value) => handleAnswerFirstBirth(e, \"No\")}>No</button>\n                </>)\n            case 2: \n                return (\n                <>\n                    <Typography>Have you ever experienced complications during pregnancy, birth, or postpartum?</Typography>\n                    <button onClick={(e, value) => handleAnswerBirthComplications(e, \"Yes\")}>Yes</button>\n                    <button onClick={(e, value) => handleAnswerBirthComplications(e, \"No\")}>No</button>\n                    <Typography>Were there any newborn complications with previous births?</Typography>\n                    <button onClick={(e, value) => handleAnswerNewbornComplications(e, \"Yes\")}>Yes</button>\n                    <button onClick={(e, value) => handleAnswerNewbornComplications(e, \"No\")}>No</button>\n                    <Typography>Have you had a home birth before?</Typography>\n                    <button onClick={(e, value) => handleAnswerHomeBirth(e, \"Yes\")}>Yes</button>\n                    <button onClick={(e, value) => handleAnswerHomeBirth(e, \"No\")}>No</button>\n                </>)\n            case 3:\n                return (\n                <>\n                    <Typography>Do you have any major health conditions?</Typography>\n                    <button onClick={(e, value) => handleAnswerHealthConditions(e, \"Yes\")}>Yes</button>\n                    <button onClick={(e, value) => handleAnswerHealthConditions(e, \"No\")}>No</button>\n                    <Typography>Are you anticipating a VBAC?</Typography>\n                    <button onClick={(e, value) => handleAnswerVBAC(e, \"Yes\")}>Yes</button>\n                    <button onClick={(e, value) => handleAnswerVBAC(e, \"No\")}>No</button>\n                    <button onClick={(e, value) => handleAnswerVBAC(e, \"IDK\")}>I don't know</button>\n                    \n                </>)\n            case 4:\n                return (<>\n                    <textarea onChange={handleAnswerEnvision}></textarea>\n                </>)\n            case 5:\n                return (<>\n                    <textarea onChange={handleAnswerWhy}></textarea>\n                </>)\n            case 6:\n                return (<>\n                    <textarea onChange={handleAnswerMidwifery}></textarea>\n                </>)\n            case 7:\n                return (<>\n                    <textarea onChange={handleAnswerConcerns}></textarea>\n                </>)\n            case 8:\n                return (<>\n                    <textarea onChange={handleAnswerRefer}></textarea>\n                </>)\n            default:\n                return (\n                <>\n                    <p>Name</p> <input defaultValue=\"\" onChange={handleAnswerName}/>\n                    <p>Phone</p> <input defaultValue=\"\" onChange={handleAnswerPhone} />\n                    <p>Email</p> <input defaultValue=\"\" onChange={handleAnswerEmail} />\n                    <p>City/State</p> <input defaultValue=\"\" onChange={handleAnswerCity} />\n                    <p>Preferred Method of Contact</p> <button onClick={(e, value) => handleAnswerContactPref(e, \"Email\")}>Email</button><button onClick={(e, value) => handleAnswerContactPref(e, \"Phone\")}>Phone</button>\n                </>)\n            \n        }\n    }\n    \n    return (\n        <>\n            <Card style={style.card}>\n                <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                    <Grid item md=\"12\" xs=\"12\">\n                        <Typography style={style.title}>Please answer the following questions</Typography>\n                    </Grid>\n                    <Grid item md=\"1\" xs=\"1\">\n                        {(questionNum === 0) \n                        ? <p> - </p> \n                        : <button onClick={prevQuestion}> - </button>}\n                    </Grid>\n                    <Grid item md=\"10\" xs=\"10\">\n                        <Typography style={style.question}>{QuestionData.data[questionNum].question}</Typography>\n                            {handleAnswer()}\n                    </Grid>\n                    <Grid item md=\"1\" xs=\"1\">\n                        {(questionNum === QuestionData.data.length - 1) \n                        ? <p> + </p> \n                        : <button onClick={nextQuestion}> + </button>}\n                    </Grid>\n                    <Grid item md=\"12\" xs=\"12\">\n                        {(questionNum === QuestionData.data.length - 1) \n                        ? <Button style={style.button}>Submit</Button> \n                        : <Button onClick={nextQuestion} style={style.button}>Next</Button>}\n                    </Grid>        \n                </Grid>\n            </Card>\n        </>\n    )\n}\n\nexport default ContactForm;","/Users/markgire/Desktop/loveyourbirth/src/components/MessageForm.js",["101","102","103","104","105"],"import React, { useState } from \"react\";\nimport { Grid, Paper, Button, Drawer, List, ListItem, Typography, IconButton, Card } from \"@material-ui/core\";\n\nimport '@fontsource/roboto';\n\nconst MessageForm = () => {\n\n    const style = {\n        card: {\n            display: 'absolute',  \n            justifyContent:'center', \n            alignItems:'center',\n            height: 600,\n            width: \"auto\",\n            margin: 100,\n            textAlign: \"center\"\n        },\n        title: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        question: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        input: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        button: {\n            marginTop: 20,\n            marginBottom: 20\n        }\n    }\n\n    const [message, setMessage] = useState({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        text: \"\"\n    })\n\n    const handleMessageName = (e) => {\n        setMessage({ ...message, name: e.target.value })\n    }\n    const handleMessageEmail = (e) => {\n        setMessage({ ...message, email: e.target.value })\n    }\n    const handleMessagePhone = (e) => {\n        setMessage({ ...message, phone: e.target.value })\n    }\n    const handleMessageText = (e) => {\n        setMessage({ ...message, text: e.target.value })\n    }\n\n    \n    return (\n        <>\n            <Card style={style.card}>\n                <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                    <Grid item md=\"12\" xs=\"12\">\n                        <Typography style={style.title}>Email Us</Typography>\n                    </Grid>\n                    <Grid item md=\"10\" xs=\"10\">\n                        <Typography>Name</Typography>\n                        <input onChange={handleMessageName}/>\n                    </Grid>\n                    <Grid item md=\"10\" xs=\"10\">\n                        <Typography>Email</Typography>\n                        <input onChange={handleMessageEmail}/>\n                    </Grid>\n                    <Grid item md=\"10\" xs=\"10\">\n                        <Typography>Phone</Typography>\n                        <input onChange={handleMessagePhone}/>\n                    </Grid>\n                    <Grid item md=\"10\" xs=\"10\">\n                        <Typography>Message</Typography>\n                        <textarea onChange={handleMessageText}></textarea>\n                    </Grid>\n                    <Grid item md=\"12\" xs=\"12\">\n                        <Button style={style.button}>Send</Button>\n                    </Grid>        \n                </Grid>\n            </Card>\n        </>\n    )\n}\n\nexport default MessageForm;",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":3,"column":10,"nodeType":"112","messageId":"113","endLine":3,"endColumn":15},{"ruleId":"110","severity":1,"message":"114","line":3,"column":55,"nodeType":"112","messageId":"113","endLine":3,"endColumn":65},{"ruleId":"110","severity":1,"message":"115","line":10,"column":8,"nodeType":"112","messageId":"113","endLine":10,"endColumn":16},{"ruleId":"110","severity":1,"message":"116","line":11,"column":8,"nodeType":"112","messageId":"113","endLine":11,"endColumn":13},{"ruleId":"110","severity":1,"message":"117","line":12,"column":8,"nodeType":"112","messageId":"113","endLine":12,"endColumn":15},{"ruleId":"118","severity":1,"message":"119","line":104,"column":15,"nodeType":"120","endLine":104,"endColumn":56},{"ruleId":"110","severity":1,"message":"121","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"111","line":2,"column":16,"nodeType":"112","messageId":"113","endLine":2,"endColumn":21},{"ruleId":"110","severity":1,"message":"122","line":2,"column":23,"nodeType":"112","messageId":"113","endLine":2,"endColumn":29},{"ruleId":"110","severity":1,"message":"123","line":2,"column":31,"nodeType":"112","messageId":"113","endLine":2,"endColumn":37},{"ruleId":"110","severity":1,"message":"124","line":2,"column":39,"nodeType":"112","messageId":"113","endLine":2,"endColumn":43},{"ruleId":"110","severity":1,"message":"125","line":2,"column":45,"nodeType":"112","messageId":"113","endLine":2,"endColumn":53},{"ruleId":"110","severity":1,"message":"126","line":2,"column":67,"nodeType":"112","messageId":"113","endLine":2,"endColumn":77},{"ruleId":"118","severity":1,"message":"119","line":55,"column":25,"nodeType":"120","endLine":55,"endColumn":71},{"ruleId":"118","severity":1,"message":"119","line":68,"column":17,"nodeType":"120","endLine":68,"endColumn":62},{"ruleId":"110","severity":1,"message":"121","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"127","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":2,"column":16,"nodeType":"112","messageId":"113","endLine":2,"endColumn":21},{"ruleId":"110","severity":1,"message":"122","line":2,"column":23,"nodeType":"112","messageId":"113","endLine":2,"endColumn":29},{"ruleId":"110","severity":1,"message":"123","line":2,"column":31,"nodeType":"112","messageId":"113","endLine":2,"endColumn":37},{"ruleId":"110","severity":1,"message":"124","line":2,"column":39,"nodeType":"112","messageId":"113","endLine":2,"endColumn":43},{"ruleId":"110","severity":1,"message":"125","line":2,"column":45,"nodeType":"112","messageId":"113","endLine":2,"endColumn":53},{"ruleId":"110","severity":1,"message":"126","line":2,"column":67,"nodeType":"112","messageId":"113","endLine":2,"endColumn":77},{"ruleId":"110","severity":1,"message":"121","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"127","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":2,"column":16,"nodeType":"112","messageId":"113","endLine":2,"endColumn":21},{"ruleId":"110","severity":1,"message":"122","line":2,"column":23,"nodeType":"112","messageId":"113","endLine":2,"endColumn":29},{"ruleId":"110","severity":1,"message":"123","line":2,"column":31,"nodeType":"112","messageId":"113","endLine":2,"endColumn":37},{"ruleId":"110","severity":1,"message":"124","line":2,"column":39,"nodeType":"112","messageId":"113","endLine":2,"endColumn":43},{"ruleId":"110","severity":1,"message":"125","line":2,"column":45,"nodeType":"112","messageId":"113","endLine":2,"endColumn":53},{"ruleId":"110","severity":1,"message":"126","line":2,"column":67,"nodeType":"112","messageId":"113","endLine":2,"endColumn":77},{"ruleId":"110","severity":1,"message":"111","line":2,"column":16,"nodeType":"112","messageId":"113","endLine":2,"endColumn":21},{"ruleId":"110","severity":1,"message":"123","line":2,"column":31,"nodeType":"112","messageId":"113","endLine":2,"endColumn":37},{"ruleId":"110","severity":1,"message":"124","line":2,"column":39,"nodeType":"112","messageId":"113","endLine":2,"endColumn":43},{"ruleId":"110","severity":1,"message":"125","line":2,"column":45,"nodeType":"112","messageId":"113","endLine":2,"endColumn":53},{"ruleId":"110","severity":1,"message":"126","line":2,"column":67,"nodeType":"112","messageId":"113","endLine":2,"endColumn":77},{"ruleId":"110","severity":1,"message":"121","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"127","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":2,"column":16,"nodeType":"112","messageId":"113","endLine":2,"endColumn":21},{"ruleId":"110","severity":1,"message":"122","line":2,"column":23,"nodeType":"112","messageId":"113","endLine":2,"endColumn":29},{"ruleId":"110","severity":1,"message":"123","line":2,"column":31,"nodeType":"112","messageId":"113","endLine":2,"endColumn":37},{"ruleId":"110","severity":1,"message":"124","line":2,"column":39,"nodeType":"112","messageId":"113","endLine":2,"endColumn":43},{"ruleId":"110","severity":1,"message":"125","line":2,"column":45,"nodeType":"112","messageId":"113","endLine":2,"endColumn":53},{"ruleId":"110","severity":1,"message":"126","line":2,"column":67,"nodeType":"112","messageId":"113","endLine":2,"endColumn":77},{"ruleId":"110","severity":1,"message":"111","line":2,"column":16,"nodeType":"112","messageId":"113","endLine":2,"endColumn":21},{"ruleId":"110","severity":1,"message":"123","line":2,"column":31,"nodeType":"112","messageId":"113","endLine":2,"endColumn":37},{"ruleId":"110","severity":1,"message":"124","line":2,"column":39,"nodeType":"112","messageId":"113","endLine":2,"endColumn":43},{"ruleId":"110","severity":1,"message":"125","line":2,"column":45,"nodeType":"112","messageId":"113","endLine":2,"endColumn":53},{"ruleId":"110","severity":1,"message":"126","line":2,"column":67,"nodeType":"112","messageId":"113","endLine":2,"endColumn":77},{"ruleId":"110","severity":1,"message":"111","line":2,"column":16,"nodeType":"112","messageId":"113","endLine":2,"endColumn":21},{"ruleId":"110","severity":1,"message":"123","line":2,"column":31,"nodeType":"112","messageId":"113","endLine":2,"endColumn":37},{"ruleId":"110","severity":1,"message":"124","line":2,"column":39,"nodeType":"112","messageId":"113","endLine":2,"endColumn":43},{"ruleId":"110","severity":1,"message":"125","line":2,"column":45,"nodeType":"112","messageId":"113","endLine":2,"endColumn":53},{"ruleId":"110","severity":1,"message":"126","line":2,"column":67,"nodeType":"112","messageId":"113","endLine":2,"endColumn":77},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'Prenatal' is defined but never used.","'Labor' is defined but never used.","'Newborn' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Button' is defined but never used.","'Drawer' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'IconButton' is defined but never used.","'Grid' is defined but never used.","no-global-assign","no-unsafe-negation"]