{"ast":null,"code":"var _jsxFileName = \"/Users/markgire/Desktop/loveyourbirth/src/components/ConsultRequest/Answers/AnswerWhy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, Button } from \"@material-ui/core\";\nimport '@fontsource/roboto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AnswerWhy = props => {\n  _s();\n\n  //Nav Rendering for Smartphone vs Laptop\n  const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n\n  const updateMedia = () => {\n    setDesktop(window.innerWidth > 1000);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateMedia);\n    return () => window.removeEventListener(\"resize\", updateMedia);\n  }); //Style\n\n  const style = {\n    largeInput: {\n      width: !isDesktop ? \"90%\" : 500,\n      height: !isDesktop ? \"60%\" : 200,\n      margin: !isDesktop ? \"5%\" : \"5%\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n      style: style.largeInput,\n      value: props.answer.why,\n      onChange: (e, question, value) => props.handleAnswer(e, \"why\", e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AnswerWhy, \"ZCeJ4rF9hjXbOt+NMfwIm63xs5A=\");\n\n_c = AnswerWhy;\nexport default AnswerWhy;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerWhy\");","map":{"version":3,"sources":["/Users/markgire/Desktop/loveyourbirth/src/components/ConsultRequest/Answers/AnswerWhy.js"],"names":["React","useState","useEffect","Typography","Button","AnswerWhy","props","isDesktop","setDesktop","window","innerWidth","updateMedia","addEventListener","removeEventListener","style","largeInput","width","height","margin","answer","why","e","question","value","handleAnswer","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,mBAAnC;AACA,OAAO,oBAAP;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAEzB;AACA,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BP,QAAQ,CAACQ,MAAM,CAACC,UAAP,GAAoB,IAArB,CAAxC;;AACA,QAAMC,WAAW,GAAG,MAAM;AACtBH,IAAAA,UAAU,CAACC,MAAM,CAACC,UAAP,GAAoB,IAArB,CAAV;AACH,GAFD;;AAGAR,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCD,WAAlC;AACA,WAAO,MAAMF,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCF,WAArC,CAAb;AACH,GAHQ,CAAT,CAPyB,CAYzB;;AACA,QAAMG,KAAK,GAAG;AACVC,IAAAA,UAAU,EAAE;AACRC,MAAAA,KAAK,EAAG,CAACT,SAAF,GAAe,KAAf,GAAsB,GADrB;AAERU,MAAAA,MAAM,EAAG,CAACV,SAAF,GAAe,KAAf,GAAsB,GAFtB;AAGRW,MAAAA,MAAM,EAAG,CAACX,SAAF,GAAe,IAAf,GAAqB;AAHrB;AADF,GAAd;AAQA,sBACI;AAAA,2BACI;AAAU,MAAA,KAAK,EAAEO,KAAK,CAACC,UAAvB;AAAmC,MAAA,KAAK,EAAET,KAAK,CAACa,MAAN,CAAaC,GAAvD;AAA4D,MAAA,QAAQ,EAAE,CAACC,CAAD,EAAIC,QAAJ,EAAcC,KAAd,KAAwBjB,KAAK,CAACkB,YAAN,CAAmBH,CAAnB,EAAsB,KAAtB,EAA6BA,CAAC,CAACI,MAAF,CAASF,KAAtC;AAA9F;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CA1BD;;GAAMlB,S;;KAAAA,S;AA4BN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Typography, Button } from \"@material-ui/core\";\nimport '@fontsource/roboto';\n\nconst AnswerWhy = (props) => {\n\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n    \n    //Style\n    const style = {\n        largeInput: {\n            width: (!isDesktop) ? \"90%\": 500,\n            height: (!isDesktop) ? \"60%\": 200,\n            margin: (!isDesktop) ? \"5%\": \"5%\"\n        }\n    }\n    \n    return (\n        <>\n            <textarea style={style.largeInput} value={props.answer.why} onChange={(e, question, value) => props.handleAnswer(e, \"why\", e.target.value)}></textarea>\n        </>\n    )\n}\n\nexport default AnswerWhy;"]},"metadata":{},"sourceType":"module"}