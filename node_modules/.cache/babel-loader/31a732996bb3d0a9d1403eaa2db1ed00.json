{"ast":null,"code":"var _jsxFileName = \"/Users/markgire/Desktop/loveyourbirth/src/components/ConsultRequest/Answers/AnswerSelectTime.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, Button, Typography, IconButton, LinearProgress, Checkbox } from \"@material-ui/core\";\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport Favorite from '@material-ui/icons/Favorite';\nimport '@fontsource/roboto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AnswerSelectTime = props => {\n  _s();\n\n  //Nav Rendering for Smartphone vs Laptop\n  const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n\n  const updateMedia = () => {\n    setDesktop(window.innerWidth > 1000);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateMedia);\n    return () => window.removeEventListener(\"resize\", updateMedia);\n  });\n  const label = {\n    inputProps: {\n      'aria-label': 'Checkbox demo'\n    }\n  }; //Style\n\n  const style = {\n    answerText: {\n      marginTop: !isDesktop ? 10 : 20,\n      marginBottom: !isDesktop ? 10 : 10,\n      color: \"purple\",\n      fontSize: !isDesktop ? 10 : 20,\n      fontWeight: \"bold\"\n    },\n    answerTextErr: {\n      marginTop: !isDesktop ? 10 : 20,\n      marginBottom: !isDesktop ? 10 : 10,\n      color: \"red\",\n      fontSize: !isDesktop ? 10 : 20,\n      fontWeight: \"bold\"\n    },\n    smallInput: {\n      width: !isDesktop ? 200 : 350\n    },\n    smallInputErr: {\n      width: !isDesktop ? 200 : 350,\n      border: \"1px solid red\"\n    },\n    button: {\n      margin: \"5%\",\n      marginBottom: 20,\n      border: \"1px solid purple\"\n    },\n    activeButton: {\n      margin: \"5%\",\n      marginBottom: 20,\n      backgroundColor: \"purple\",\n      color: \"white\"\n    },\n    checkbox: {\n      fontSize: !isDesktop ? 15 : 20,\n      alignText: \"right\"\n    },\n    checkitem: {\n      fontSize: !isDesktop ? 15 : 20,\n      alignText: \"left\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      onClick: checkMorning,\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, { ...label,\n        checked: selectTime.morning,\n        icon: /*#__PURE__*/_jsxDEV(FavoriteBorder, {\n          style: style.checkbox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 61\n        }, this),\n        checkedIcon: /*#__PURE__*/_jsxDEV(Favorite, {\n          style: style.checkbox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 118\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: style.checkitem,\n        children: \"Morning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      onClick: checkAfternoon,\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, { ...label,\n        checked: selectTime.afternoon,\n        icon: /*#__PURE__*/_jsxDEV(FavoriteBorder, {\n          style: style.checkbox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 63\n        }, this),\n        checkedIcon: /*#__PURE__*/_jsxDEV(Favorite, {\n          style: style.checkbox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 120\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: style.checkitem,\n        children: \"Afternoon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      onClick: checkEvening,\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, { ...label,\n        checked: selectTime.evening,\n        icon: /*#__PURE__*/_jsxDEV(FavoriteBorder, {\n          style: style.checkbox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 60\n        }, this),\n        checkedIcon: /*#__PURE__*/_jsxDEV(Favorite, {\n          style: style.checkbox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 117\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: style.checkitem,\n        children: \"Evening\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AnswerSelectTime, \"ZCeJ4rF9hjXbOt+NMfwIm63xs5A=\");\n\n_c = AnswerSelectTime;\nexport default AnswerSelectTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerSelectTime\");","map":{"version":3,"sources":["/Users/markgire/Desktop/loveyourbirth/src/components/ConsultRequest/Answers/AnswerSelectTime.js"],"names":["React","useState","useEffect","Grid","Button","Typography","IconButton","LinearProgress","Checkbox","FavoriteBorder","Favorite","AnswerSelectTime","props","isDesktop","setDesktop","window","innerWidth","updateMedia","addEventListener","removeEventListener","label","inputProps","style","answerText","marginTop","marginBottom","color","fontSize","fontWeight","answerTextErr","smallInput","width","smallInputErr","border","button","margin","activeButton","backgroundColor","checkbox","alignText","checkitem","checkMorning","selectTime","morning","checkAfternoon","afternoon","checkEvening","evening"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, Typography, IconButton, LinearProgress, Checkbox } from \"@material-ui/core\";\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport Favorite from '@material-ui/icons/Favorite';\nimport '@fontsource/roboto';\n\nconst AnswerSelectTime = (props) => {\n\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n    \n    const label = { inputProps: { 'aria-label': 'Checkbox demo' } };\n\n    //Style\n    const style = {\n        answerText: {\n            marginTop: (!isDesktop) ? 10 : 20,\n            marginBottom: (!isDesktop) ? 10 : 10,\n            color: \"purple\",\n            fontSize: (!isDesktop) ? 10 : 20,\n            fontWeight: \"bold\"\n        },\n        answerTextErr: {\n            marginTop: (!isDesktop) ? 10 : 20,\n            marginBottom: (!isDesktop) ? 10 : 10,\n            color: \"red\",\n            fontSize: (!isDesktop) ? 10 : 20,\n            fontWeight: \"bold\"\n        },\n        smallInput: {\n            width: (!isDesktop) ? 200: 350, \n        },\n        smallInputErr: {\n            width: (!isDesktop) ? 200: 350,\n            border: \"1px solid red\"\n        },\n        button: {\n            margin: \"5%\",\n            marginBottom: 20,\n            border: \"1px solid purple\"\n        },\n        activeButton: {\n            margin: \"5%\",\n            marginBottom: 20,\n            backgroundColor: \"purple\",\n            color: \"white\"\n        },\n        checkbox: {\n            fontSize: (!isDesktop) ? 15 : 20,\n            alignText: \"right\"\n        },\n        checkitem: {\n            fontSize: (!isDesktop) ? 15 : 20,\n            alignText: \"left\"\n        }\n    }\n    \n    return (\n        <>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    onClick={checkMorning}\n                    >\n                        <Checkbox {...label} \n                         checked={selectTime.morning} icon={<FavoriteBorder  style={style.checkbox} />} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                        <Typography style={style.checkitem}>Morning</Typography>\n                </Grid>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    onClick={checkAfternoon}\n                    >\n                        <Checkbox {...label}\n                         checked={selectTime.afternoon} icon={<FavoriteBorder  style={style.checkbox} />} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                        <Typography style={style.checkitem}>Afternoon</Typography>\n                </Grid>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    onClick={checkEvening} \n                    >\n                        <Checkbox {...label} \n                        checked={selectTime.evening} icon={<FavoriteBorder  style={style.checkbox} />} checkedIcon={<Favorite  style={style.checkbox}/>}/>\n                        <Typography style={style.checkitem}>Evening</Typography>\n                </Grid>\n            </>\n    )\n}\n\nexport default AnswerSelectTime;"]},"metadata":{},"sourceType":"module"}