{"ast":null,"code":"var _jsxFileName = \"/Users/markgire/Desktop/loveyourbirth/src/components/ConsultRequest/ConsultFormMain.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton, LinearProgress } from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport QuestionData from \"../../utilities/questions.json\";\nimport emailjs from 'emailjs-com';\nimport '@fontsource/roboto';\nimport HandleQuestion from \"./HandleQuestion\";\nimport HandleAnswer from \"./HandleAnswer\";\nimport PrevQuestion from \"./PrevQuestion\";\nimport NextQuestion from \"./NextQuestion\";\nimport SubmitConsult from \"./SubmitConsult\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConsultFormMain = props => {\n  _s();\n\n  //Nav Rendering for Smartphone vs Laptop\n  const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n\n  const updateMedia = () => {\n    setDesktop(window.innerWidth > 1000);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateMedia);\n    return () => window.removeEventListener(\"resize\", updateMedia);\n  }); //Questions\n  //question number\n\n  const [questionNum, setQuestionNum] = useState(0); //error validation\n\n  const [errValidation, setErrValidation] = useState({\n    name: false,\n    city: false,\n    email: false,\n    phone: false\n  }); //progress bar\n\n  const point = 100 / QuestionData.data.length;\n  const [progress, setProgress] = useState(point); //next question button\n\n  const nextQuestion = e => {\n    e.preventDefault();\n\n    if (questionNum === 0 && answer.name == \"\") {\n      setErrValidation({ ...errValidation,\n        name: true\n      });\n    } else if (questionNum == 0 && answer.city == \"\") {\n      setErrValidation({ ...errValidation,\n        city: true\n      });\n    } else if (questionNum === 1 && answer.email == \"\") {\n      setErrValidation({ ...errValidation,\n        email: true\n      });\n    } else if (questionNum === 1 && answer.phone == \"\") {\n      setErrValidation({ ...errValidation,\n        phone: true\n      });\n    } else {\n      setQuestionNum(questionNum + 1);\n      setProgress(progress + point);\n    }\n  }; //prev question button\n\n\n  const prevQuestion = e => {\n    e.preventDefault();\n    setQuestionNum(questionNum - 1);\n    setProgress(progress - point);\n  }; //Answers\n  //Handle All Answers (Except check box questions)\n\n\n  const handleAllAnswers = (e, question, value) => {\n    switch (question) {\n      case \"city\":\n        return setAnswer({ ...answer,\n          city: value\n        });\n\n      case \"phone\":\n        return setAnswer({ ...answer,\n          phone: value\n        });\n\n      case \"email\":\n        return setAnswer({ ...answer,\n          email: value\n        });\n\n      case \"contact\":\n        return setAnswer({ ...answer,\n          contact: value\n        });\n\n      case \"firstBirth\":\n        return setAnswer({ ...answer,\n          firstBirth: value\n        });\n\n      case \"dueDate\":\n        return setAnswer({ ...answer,\n          dueDate: value\n        });\n\n      case \"envision\":\n        return setAnswer({ ...answer,\n          envision: value\n        });\n\n      case \"why\":\n        return setAnswer({ ...answer,\n          why: value\n        });\n\n      case \"midwifery\":\n        return setAnswer({ ...answer,\n          midwifery: value\n        });\n\n      case \"concerns\":\n        return setAnswer({ ...answer,\n          concerns: value\n        });\n\n      case \"refer\":\n        return setAnswer({ ...answer,\n          refer: value\n        });\n\n      case \"preference\":\n        return setAnswer({ ...answer,\n          preference: value\n        });\n\n      default:\n        return setAnswer({ ...answer,\n          name: value\n        });\n    }\n  }; //Checkbox - Select Days\n\n\n  const checkSunday = () => {\n    if (!answer.selectDays.sunday) {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          sunday: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          sunday: false\n        }\n      });\n    }\n  };\n\n  const checkMonday = () => {\n    if (!answer.selectDays.monday) {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          monday: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          monday: false\n        }\n      });\n    }\n  };\n\n  const checkTuesday = () => {\n    if (!answer.selectDays.tuesday) {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          tuesday: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          tuesday: false\n        }\n      });\n    }\n  };\n\n  const checkWednesday = () => {\n    if (!answer.selectDays.wednesday) {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          wednesday: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          wednesday: false\n        }\n      });\n    }\n  };\n\n  const checkThursday = () => {\n    if (!answer.selectDays.thursday) {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          thursday: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          thursday: false\n        }\n      });\n    }\n  };\n\n  const checkFriday = () => {\n    if (!answer.selectDays.friday) {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          friday: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          friday: false\n        }\n      });\n    }\n  };\n\n  const checkSaturday = () => {\n    if (!answer.selectDays.saturday) {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          saturday: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          saturday: false\n        }\n      });\n    }\n  }; //Checkbox - SelectTime\n\n\n  const checkMorning = () => {\n    if (!answer.selectTime.morning) {\n      setAnswer({ ...answer,\n        selectTime: { ...answer.selectTime,\n          morning: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectTime: { ...answer.selectTime,\n          morning: false\n        }\n      });\n    }\n  };\n\n  const checkAfternoon = () => {\n    if (!answer.selectTime.afternoon) {\n      setAnswer({ ...answer,\n        selectTime: { ...answer.selectTime,\n          afternoon: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectTime: { ...answer.selectTime,\n          afternoon: false\n        }\n      });\n    }\n  };\n\n  const checkEvening = () => {\n    if (!answer.selectTime.evening) {\n      setAnswer({ ...answer,\n        selectTime: { ...answer.selectTime,\n          evening: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectTime: { ...answer.selectTime,\n          evening: false\n        }\n      });\n    }\n  }; //Answer Object\n\n\n  const [answer, setAnswer] = useState({\n    name: \"\",\n    city: \"\",\n    phone: \"\",\n    email: \"\",\n    contact: \"\",\n    firstBirth: \"\",\n    dueDate: \"\",\n    envision: \"\",\n    why: \"\",\n    midwifery: \"\",\n    concerns: \"\",\n    selectDays: {\n      sunday: false,\n      monday: false,\n      tuesday: false,\n      wednesday: false,\n      thursday: false,\n      friday: false,\n      saturday: false\n    },\n    selectTime: {\n      morning: false,\n      afternoon: false,\n      evening: false\n    },\n    refer: \"\",\n    preference: \"\"\n  }); //Email JS\n\n  const sendEmail = e => {\n    e.preventDefault();\n    emailjs.send('service_sa2sv31', 'template_aldpnbc', {\n      name: answer.name,\n      city: answer.city,\n      phone: answer.phone,\n      email: answer.email,\n      contact: answer.contact,\n      firstBirth: answer.firstBirth,\n      dueDate: answer.dueDate,\n      envision: answer.envision,\n      why: answer.why,\n      midwifery: answer.midwifery,\n      concerns: answer.concerns,\n      refer: answer.refer,\n      days: Object.keys(answer.selectDays).filter(key => answer.selectDays[key]),\n      time: Object.keys(answer.selectTime).filter(key => answer.selectTime[key]),\n      preference: answer.consultPreference\n    }, 'user_VCNwVyQVStaLfnvdfDv4t').then(result => {\n      console.log(result.text);\n      props.successConsult();\n    }, error => {\n      console.log(error.text);\n    });\n    props.closeForm();\n  }; //Style\n\n\n  const style = {\n    questionSectionMain: {\n      height: !isDesktop ? 400 : 400,\n      marginBottom: \"3%\",\n      paddingLeft: !isDesktop ? 10 : 0\n    },\n    progress: {\n      marginLeft: \"3%\",\n      marginRight: \"3%\",\n      width: \"100%\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      style: {\n        paddingLeft: 0,\n        paddingRight: !isDesktop ? \"4%\" : 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"left\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            onClick: props.closeForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          value: progress,\n          style: style.progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: \"1\",\n          xs: \"1\",\n          children: /*#__PURE__*/_jsxDEV(PrevQuestion, {\n            questionNum: questionNum,\n            prevQuestion: prevQuestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: \"10\",\n          xs: \"10\",\n          style: style.questionSectionMain,\n          children: [/*#__PURE__*/_jsxDEV(HandleQuestion, {\n            questionNum: questionNum\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(HandleAnswer, {\n            questionNum: questionNum,\n            handleAnswer: handleAllAnswers,\n            error: errValidation,\n            answer: answer,\n            checkSunday: checkSunday,\n            checkMonday: checkMonday,\n            checkTuesday: checkTuesday,\n            checkWednesday: checkWednesday,\n            checkThursday: checkThursday,\n            checkFriday: checkFriday,\n            checkSaturday: checkSaturday,\n            selectDays: answer.selectDays,\n            checkMorning: checkMorning,\n            checkAfternoon: checkAfternoon,\n            checkEvening: checkEvening,\n            selectTime: answer.selectTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: \"12\",\n            xs: \"12\",\n            children: /*#__PURE__*/_jsxDEV(SubmitConsult, {\n              questionNum: questionNum,\n              sendEmail: sendEmail,\n              nextQuestion: nextQuestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: \"1\",\n          xs: \"1\",\n          children: /*#__PURE__*/_jsxDEV(NextQuestion, {\n            questionNum: questionNum,\n            nextQuestion: nextQuestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ConsultFormMain, \"qmVrhb/8jYTtLViWXRaBjHuRrlE=\");\n\n_c = ConsultFormMain;\nexport default ConsultFormMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConsultFormMain\");","map":{"version":3,"sources":["/Users/markgire/Desktop/loveyourbirth/src/components/ConsultRequest/ConsultFormMain.js"],"names":["React","useState","useEffect","Grid","IconButton","LinearProgress","CloseIcon","QuestionData","emailjs","HandleQuestion","HandleAnswer","PrevQuestion","NextQuestion","SubmitConsult","ConsultFormMain","props","isDesktop","setDesktop","window","innerWidth","updateMedia","addEventListener","removeEventListener","questionNum","setQuestionNum","errValidation","setErrValidation","name","city","email","phone","point","data","length","progress","setProgress","nextQuestion","e","preventDefault","answer","prevQuestion","handleAllAnswers","question","value","setAnswer","contact","firstBirth","dueDate","envision","why","midwifery","concerns","refer","preference","checkSunday","selectDays","sunday","checkMonday","monday","checkTuesday","tuesday","checkWednesday","wednesday","checkThursday","thursday","checkFriday","friday","checkSaturday","saturday","checkMorning","selectTime","morning","checkAfternoon","afternoon","checkEvening","evening","sendEmail","send","days","Object","keys","filter","key","time","consultPreference","then","result","console","log","text","successConsult","error","closeForm","style","questionSectionMain","height","marginBottom","paddingLeft","marginLeft","marginRight","width","paddingRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton, LinearProgress } from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport QuestionData from \"../../utilities/questions.json\";\nimport emailjs from 'emailjs-com';\nimport '@fontsource/roboto';\n\nimport HandleQuestion from \"./HandleQuestion\";\nimport HandleAnswer from \"./HandleAnswer\";\nimport PrevQuestion from \"./PrevQuestion\";\nimport NextQuestion from \"./NextQuestion\";\nimport SubmitConsult from \"./SubmitConsult\";\n\nconst ConsultFormMain = (props) => {\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n//Questions\n    //question number\n    const [questionNum, setQuestionNum] = useState(0)\n    //error validation\n    const [errValidation, setErrValidation] = useState({\n        name: false,\n        city: false,\n        email: false,\n        phone: false\n    })\n    //progress bar\n    const point = 100/QuestionData.data.length\n    const [progress, setProgress] = useState(point)\n\n    //next question button\n    const nextQuestion = (e) => {\n        e.preventDefault();\n        if (questionNum === 0 && answer.name == \"\")\n        {\n            setErrValidation({ ...errValidation, name: true})\n        } else if (questionNum == 0 && answer.city == \"\") {\n            setErrValidation({ ...errValidation, city: true})\n        } else if (questionNum === 1 && answer.email == \"\") {\n            setErrValidation({ ...errValidation, email: true})\n        } else if (questionNum === 1 && answer.phone == \"\") {\n            setErrValidation({ ...errValidation, phone: true})\n        } else {\n            setQuestionNum(questionNum + 1)\n            setProgress(progress + point)\n        }\n    }\n    //prev question button\n    const prevQuestion = (e) => {\n        e.preventDefault();\n        setQuestionNum(questionNum - 1)\n        setProgress(progress - point)\n    }\n//Answers\n    //Handle All Answers (Except check box questions)\n    const handleAllAnswers = (e, question, value) => {\n        switch(question) {\n            case \"city\":\n                return setAnswer({ ...answer, city: value })\n            case \"phone\":\n                return setAnswer({ ...answer, phone: value})\n            case \"email\":\n                return setAnswer({ ...answer, email: value})\n            case \"contact\":\n                return setAnswer({ ...answer, contact: value})\n            case \"firstBirth\":\n                return setAnswer({ ...answer, firstBirth: value})\n            case \"dueDate\":\n                return setAnswer({ ...answer, dueDate: value})\n            case \"envision\":\n                return setAnswer({ ...answer, envision: value})\n            case \"why\":\n                return setAnswer({ ...answer, why: value})\n            case \"midwifery\":\n                return setAnswer({ ...answer, midwifery: value})\n            case \"concerns\":\n                return setAnswer({ ...answer, concerns: value})\n            case \"refer\":\n                return setAnswer({ ...answer, refer: value})\n            case \"preference\":\n                return setAnswer({ ...answer, preference: value})\n            default:\n                return setAnswer({ ...answer, name: value })\n        }\n    }\n\n    //Checkbox - Select Days\n    const checkSunday = () => {\n        if(!answer.selectDays.sunday) {\n            setAnswer({ ...answer, selectDays:{ ...answer.selectDays, sunday: true } })\n        } else {\n            setAnswer({ ...answer, selectDays: { ...answer.selectDays, sunday: false } })\n        }\n    } \n    const checkMonday = () => {\n        if(!answer.selectDays.monday) {\n            setAnswer({ ...answer, selectDays:{ ...answer.selectDays, monday: true } })\n        } else {\n            setAnswer({ ...answer, selectDays: { ...answer.selectDays, monday: false } })\n        }\n    } \n    const checkTuesday = () => {\n        if(!answer.selectDays.tuesday) {\n            setAnswer({ ...answer, selectDays:{ ...answer.selectDays, tuesday: true } })\n        } else {\n            setAnswer({ ...answer, selectDays: { ...answer.selectDays, tuesday: false } })\n        }\n    } \n    const checkWednesday = () => {\n        if(!answer.selectDays.wednesday) {\n            setAnswer({ ...answer, selectDays:{ ...answer.selectDays, wednesday: true } })\n        } else {\n            setAnswer({ ...answer, selectDays: { ...answer.selectDays, wednesday: false } })\n        }\n    }\n    const checkThursday = () => {\n        if(!answer.selectDays.thursday) {\n            setAnswer({ ...answer, selectDays:{ ...answer.selectDays, thursday: true } })\n        } else {\n            setAnswer({ ...answer, selectDays: { ...answer.selectDays, thursday: false } })\n        }\n    } \n    const checkFriday = () => {\n        if(!answer.selectDays.friday) {\n            setAnswer({ ...answer, selectDays:{ ...answer.selectDays, friday: true } })\n        } else {\n            setAnswer({ ...answer, selectDays: { ...answer.selectDays, friday: false } })\n        }\n    } \n    const checkSaturday = () => {\n        if(!answer.selectDays.saturday) {\n            setAnswer({ ...answer, selectDays:{ ...answer.selectDays, saturday: true } })\n        } else {\n            setAnswer({ ...answer, selectDays: { ...answer.selectDays, saturday: false } })\n        }\n    } \n\n    //Checkbox - SelectTime\n    const checkMorning = () => {\n        if(!answer.selectTime.morning) {\n            setAnswer({ ...answer, selectTime: { ...answer.selectTime, morning: true } })\n        } else {\n            setAnswer({ ...answer, selectTime: { ...answer.selectTime, morning: false } })\n        }\n    }\n    const checkAfternoon = () => {\n        if(!answer.selectTime.afternoon) {\n            setAnswer({ ...answer, selectTime: { ...answer.selectTime, afternoon: true } })\n        } else {\n            setAnswer({ ...answer, selectTime: { ...answer.selectTime, afternoon: false } })\n        }\n    }\n    const checkEvening = () => {\n        if(!answer.selectTime.evening) {\n            setAnswer({ ...answer, selectTime: { ...answer.selectTime, evening: true } })\n        } else {\n            setAnswer({ ...answer, selectTime: { ...answer.selectTime, evening: false } })\n        }\n    }\n\n    //Answer Object\n    const [answer, setAnswer] = useState({\n        name: \"\",\n        city: \"\",\n        phone: \"\",\n        email: \"\",\n        contact: \"\",\n        firstBirth: \"\",\n        dueDate: \"\",\n        envision: \"\",\n        why: \"\",\n        midwifery: \"\",\n        concerns: \"\",\n        selectDays: {\n            sunday: false,\n            monday: false,\n            tuesday: false,\n            wednesday: false,\n            thursday: false,\n            friday: false,\n            saturday: false\n        },\n        selectTime: {\n            morning: false,\n            afternoon: false,\n            evening: false\n        },\n        refer: \"\",\n        preference: \"\"\n    })\n\n    //Email JS\n    const sendEmail = (e) => {\n        e.preventDefault();\n        emailjs.send('service_sa2sv31', 'template_aldpnbc', \n        { \n            name: answer.name, \n            city: answer.city, \n            phone: answer.phone,\n            email: answer.email, \n            contact: answer.contact,\n            firstBirth: answer.firstBirth,\n            dueDate: answer.dueDate,\n            envision: answer.envision,\n            why: answer.why,\n            midwifery: answer.midwifery,\n            concerns: answer.concerns,\n            refer: answer.refer,\n            days: Object.keys(answer.selectDays).filter(key => answer.selectDays[key]),\n            time: Object.keys(answer.selectTime).filter(key => answer.selectTime[key]),\n            preference: answer.consultPreference\n        }, 'user_VCNwVyQVStaLfnvdfDv4t')\n        .then((result) => {\n            console.log(result.text);\n            props.successConsult();\n        }, (error) => {\n            console.log(error.text);\n        });\n        props.closeForm();\n    };\n    \n//Style\n    const style = {\n        questionSectionMain: {\n            height: (!isDesktop) ? 400 : 400,\n            marginBottom: \"3%\",\n            paddingLeft: (!isDesktop) ? 10: 0\n        },\n        progress: {\n            marginLeft: \"3%\",\n            marginRight: \"3%\",\n            width: \"100%\"\n        }\n    }\n\n    return (\n        <div>\n            <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\"  style={{ paddingLeft: 0, paddingRight: (!isDesktop) ? \"4%\" : 0 }}>\n                <Grid container direction=\"row\" justifyContent=\"left\">\n    {/* Close Button */}\n                    <IconButton>\n                        <CloseIcon onClick={props.closeForm} />\n                    </IconButton>\n    {/* Progress Bar */}\n                    <LinearProgress variant=\"determinate\" value={progress} style={style.progress} />\n                </Grid>\n    {/* PrevQuestion */}\n                <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                    <Grid item md=\"1\" xs=\"1\">\n                        <PrevQuestion \n                        questionNum={questionNum}\n                        prevQuestion={prevQuestion}/>\n                    </Grid>\n    {/* Question and Answer */}\n                    <Grid item md=\"10\" xs=\"10\" style={style.questionSectionMain}>\n                        <HandleQuestion \n                        questionNum={questionNum}\n                        />\n                        <HandleAnswer \n                        questionNum={questionNum}\n                        handleAnswer={handleAllAnswers}\n                        error={errValidation}\n                        answer={answer}\n                        checkSunday={checkSunday}\n                        checkMonday={checkMonday}\n                        checkTuesday={checkTuesday}\n                        checkWednesday={checkWednesday}\n                        checkThursday={checkThursday}\n                        checkFriday={checkFriday}\n                        checkSaturday={checkSaturday}\n                        selectDays={answer.selectDays}\n                        checkMorning={checkMorning}\n                        checkAfternoon={checkAfternoon}\n                        checkEvening={checkEvening}\n                        selectTime={answer.selectTime}\n                        />\n    {/* Next and Submit Button */}\n                        <Grid item md=\"12\" xs=\"12\">\n                            <SubmitConsult \n                            questionNum={questionNum}\n                            sendEmail={sendEmail}\n                            nextQuestion={nextQuestion}/>\n                        </Grid> \n                    </Grid>\n    {/* PrevQuestion */}\n                    <Grid item md=\"1\" xs=\"1\">\n                        <NextQuestion \n                        questionNum={questionNum}\n                        nextQuestion={nextQuestion}/>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default ConsultFormMain;"]},"metadata":{},"sourceType":"module"}