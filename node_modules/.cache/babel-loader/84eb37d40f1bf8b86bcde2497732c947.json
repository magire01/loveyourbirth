{"ast":null,"code":"var _jsxFileName = \"/Users/markgire/Desktop/loveyourbirth/src/components/ConsultRequest/Answers/AnswerContact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, Button } from \"@material-ui/core\";\nimport '@fontsource/roboto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AnswerContact = props => {\n  _s();\n\n  //Nav Rendering for Smartphone vs Laptop\n  const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n\n  const updateMedia = () => {\n    setDesktop(window.innerWidth > 1000);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateMedia);\n    return () => window.removeEventListener(\"resize\", updateMedia);\n  }); //Style\n\n  const style = {\n    answerText: {\n      marginTop: !isDesktop ? 10 : 20,\n      marginBottom: !isDesktop ? 10 : 10,\n      color: \"purple\",\n      fontSize: !isDesktop ? 10 : 20,\n      fontWeight: \"bold\"\n    },\n    answerTextErr: {\n      marginTop: !isDesktop ? 10 : 20,\n      marginBottom: !isDesktop ? 10 : 10,\n      color: \"red\",\n      fontSize: !isDesktop ? 10 : 20,\n      fontWeight: \"bold\"\n    },\n    smallInput: {\n      width: !isDesktop ? 200 : 350\n    },\n    smallInputErr: {\n      width: !isDesktop ? 200 : 350,\n      border: \"1px solid red\"\n    },\n    button: {\n      margin: \"5%\",\n      marginBottom: 20,\n      border: \"1px solid purple\"\n    },\n    activeButton: {\n      margin: \"5%\",\n      marginBottom: 20,\n      backgroundColor: \"purple\",\n      color: \"white\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      style: !props.error.email ? style.answerText : style.answerTextErr,\n      children: !props.error.email ? \"Email\" : \"*Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: !props.error.email ? style.smallInput : style.smallInputErr,\n      value: props.answer.email,\n      onChange: (e, question, value) => props.handleAnswer(e, \"email\", e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      style: !props.error.phone ? style.answerText : style.answerTextErr,\n      children: !props.error.phone ? \"Phone\" : \"*Phone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: !props.error.phone ? style.smallInput : style.smallInputErr,\n      value: props.answer.email,\n      value: props.answer.phone,\n      onChange: (e, question, value) => props.handleAnswer(e, \"phone\", e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      style: style.answerText,\n      children: \"Preferred Method of Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: (e, question, value) => props.handleAnswer(e, \"name\", e.target.value),\n      style: props.answer.contact === \"Email\" ? style.activeButton : style.button,\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: (e, value) => props.contactPref(e, \"Phone\"),\n      style: props.answer.contact === \"Phone\" ? style.activeButton : style.button,\n      children: \"Phone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AnswerContact, \"ZCeJ4rF9hjXbOt+NMfwIm63xs5A=\");\n\n_c = AnswerContact;\nexport default AnswerContact;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerContact\");","map":{"version":3,"sources":["/Users/markgire/Desktop/loveyourbirth/src/components/ConsultRequest/Answers/AnswerContact.js"],"names":["React","useState","useEffect","Typography","Button","AnswerContact","props","isDesktop","setDesktop","window","innerWidth","updateMedia","addEventListener","removeEventListener","style","answerText","marginTop","marginBottom","color","fontSize","fontWeight","answerTextErr","smallInput","width","smallInputErr","border","button","margin","activeButton","backgroundColor","error","email","answer","e","question","value","handleAnswer","target","phone","contact","contactPref"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,mBAAnC;AACA,OAAO,oBAAP;;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAE7B;AACA,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BP,QAAQ,CAACQ,MAAM,CAACC,UAAP,GAAoB,IAArB,CAAxC;;AACA,QAAMC,WAAW,GAAG,MAAM;AACtBH,IAAAA,UAAU,CAACC,MAAM,CAACC,UAAP,GAAoB,IAArB,CAAV;AACH,GAFD;;AAGAR,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCD,WAAlC;AACA,WAAO,MAAMF,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCF,WAArC,CAAb;AACH,GAHQ,CAAT,CAP6B,CAY7B;;AACA,QAAMG,KAAK,GAAG;AACVC,IAAAA,UAAU,EAAE;AACRC,MAAAA,SAAS,EAAG,CAACT,SAAF,GAAe,EAAf,GAAoB,EADvB;AAERU,MAAAA,YAAY,EAAG,CAACV,SAAF,GAAe,EAAf,GAAoB,EAF1B;AAGRW,MAAAA,KAAK,EAAE,QAHC;AAIRC,MAAAA,QAAQ,EAAG,CAACZ,SAAF,GAAe,EAAf,GAAoB,EAJtB;AAKRa,MAAAA,UAAU,EAAE;AALJ,KADF;AAQVC,IAAAA,aAAa,EAAE;AACXL,MAAAA,SAAS,EAAG,CAACT,SAAF,GAAe,EAAf,GAAoB,EADpB;AAEXU,MAAAA,YAAY,EAAG,CAACV,SAAF,GAAe,EAAf,GAAoB,EAFvB;AAGXW,MAAAA,KAAK,EAAE,KAHI;AAIXC,MAAAA,QAAQ,EAAG,CAACZ,SAAF,GAAe,EAAf,GAAoB,EAJnB;AAKXa,MAAAA,UAAU,EAAE;AALD,KARL;AAeVE,IAAAA,UAAU,EAAE;AACRC,MAAAA,KAAK,EAAG,CAAChB,SAAF,GAAe,GAAf,GAAoB;AADnB,KAfF;AAkBViB,IAAAA,aAAa,EAAE;AACXD,MAAAA,KAAK,EAAG,CAAChB,SAAF,GAAe,GAAf,GAAoB,GADhB;AAEXkB,MAAAA,MAAM,EAAE;AAFG,KAlBL;AAsBVC,IAAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE,IADJ;AAEJV,MAAAA,YAAY,EAAE,EAFV;AAGJQ,MAAAA,MAAM,EAAE;AAHJ,KAtBE;AA2BVG,IAAAA,YAAY,EAAE;AACVD,MAAAA,MAAM,EAAE,IADE;AAEVV,MAAAA,YAAY,EAAE,EAFJ;AAGVY,MAAAA,eAAe,EAAE,QAHP;AAIVX,MAAAA,KAAK,EAAE;AAJG;AA3BJ,GAAd;AAoCA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAG,CAACZ,KAAK,CAACwB,KAAN,CAAYC,KAAd,GAAuBjB,KAAK,CAACC,UAA7B,GAA0CD,KAAK,CAACO,aAAnE;AAAA,gBAAoF,CAACf,KAAK,CAACwB,KAAN,CAAYC,KAAd,GAAuB,OAAvB,GAAiC;AAApH;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,KAAK,EAAG,CAACzB,KAAK,CAACwB,KAAN,CAAYC,KAAd,GAAuBjB,KAAK,CAACQ,UAA7B,GAA0CR,KAAK,CAACU,aAA9D;AAA6E,MAAA,KAAK,EAAElB,KAAK,CAAC0B,MAAN,CAAaD,KAAjG;AAAwG,MAAA,QAAQ,EAAE,CAACE,CAAD,EAAIC,QAAJ,EAAcC,KAAd,KAAwB7B,KAAK,CAAC8B,YAAN,CAAmBH,CAAnB,EAAsB,OAAtB,EAA+BA,CAAC,CAACI,MAAF,CAASF,KAAxC;AAA1I;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAG,CAAC7B,KAAK,CAACwB,KAAN,CAAYQ,KAAd,GAAuBxB,KAAK,CAACC,UAA7B,GAA0CD,KAAK,CAACO,aAAnE;AAAA,gBAAoF,CAACf,KAAK,CAACwB,KAAN,CAAYQ,KAAd,GAAuB,OAAvB,GAAiC;AAApH;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAO,MAAA,KAAK,EAAG,CAAChC,KAAK,CAACwB,KAAN,CAAYQ,KAAd,GAAuBxB,KAAK,CAACQ,UAA7B,GAA0CR,KAAK,CAACU,aAA9D;AAA6E,MAAA,KAAK,EAAElB,KAAK,CAAC0B,MAAN,CAAaD,KAAjG;AAAwG,MAAA,KAAK,EAAEzB,KAAK,CAAC0B,MAAN,CAAaM,KAA5H;AAAmI,MAAA,QAAQ,EAAE,CAACL,CAAD,EAAIC,QAAJ,EAAcC,KAAd,KAAwB7B,KAAK,CAAC8B,YAAN,CAAmBH,CAAnB,EAAsB,OAAtB,EAA+BA,CAAC,CAACI,MAAF,CAASF,KAAxC;AAArK;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAErB,KAAK,CAACC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,CAACkB,CAAD,EAAIC,QAAJ,EAAcC,KAAd,KAAwB7B,KAAK,CAAC8B,YAAN,CAAmBH,CAAnB,EAAsB,MAAtB,EAA8BA,CAAC,CAACI,MAAF,CAASF,KAAvC,CAAzC;AAAyF,MAAA,KAAK,EAAG7B,KAAK,CAAC0B,MAAN,CAAaO,OAAb,KAAyB,OAA1B,GAAqCzB,KAAK,CAACc,YAA3C,GAA0Dd,KAAK,CAACY,MAAhK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,CAACO,CAAD,EAAIE,KAAJ,KAAc7B,KAAK,CAACkC,WAAN,CAAkBP,CAAlB,EAAqB,OAArB,CAA/B;AAA8D,MAAA,KAAK,EAAG3B,KAAK,CAAC0B,MAAN,CAAaO,OAAb,KAAyB,OAA1B,GAAqCzB,KAAK,CAACc,YAA3C,GAA0Dd,KAAK,CAACY,MAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAWH,CA5DD;;GAAMrB,a;;KAAAA,a;AA8DN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Typography, Button } from \"@material-ui/core\";\nimport '@fontsource/roboto';\n\nconst AnswerContact = (props) => {\n\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n    \n    //Style\n    const style = {\n        answerText: {\n            marginTop: (!isDesktop) ? 10 : 20,\n            marginBottom: (!isDesktop) ? 10 : 10,\n            color: \"purple\",\n            fontSize: (!isDesktop) ? 10 : 20,\n            fontWeight: \"bold\"\n        },\n        answerTextErr: {\n            marginTop: (!isDesktop) ? 10 : 20,\n            marginBottom: (!isDesktop) ? 10 : 10,\n            color: \"red\",\n            fontSize: (!isDesktop) ? 10 : 20,\n            fontWeight: \"bold\"\n        },\n        smallInput: {\n            width: (!isDesktop) ? 200: 350, \n        },\n        smallInputErr: {\n            width: (!isDesktop) ? 200: 350,\n            border: \"1px solid red\"\n        },\n        button: {\n            margin: \"5%\",\n            marginBottom: 20,\n            border: \"1px solid purple\"\n        },\n        activeButton: {\n            margin: \"5%\",\n            marginBottom: 20,\n            backgroundColor: \"purple\",\n            color: \"white\"\n\n        }\n    }\n    \n    return (\n        <>\n            <Typography style={(!props.error.email) ? style.answerText : style.answerTextErr}>{(!props.error.email) ? \"Email\" : \"*Email\"}</Typography> \n            <input style={(!props.error.email) ? style.smallInput : style.smallInputErr} value={props.answer.email} onChange={(e, question, value) => props.handleAnswer(e, \"email\", e.target.value )} />\n            <Typography style={(!props.error.phone) ? style.answerText : style.answerTextErr}>{(!props.error.phone) ? \"Phone\" : \"*Phone\"}</Typography> \n            <input style={(!props.error.phone) ? style.smallInput : style.smallInputErr} value={props.answer.email} value={props.answer.phone} onChange={(e, question, value) => props.handleAnswer(e, \"phone\", e.target.value )} />  \n            <Typography style={style.answerText}>Preferred Method of Contact</Typography> \n            <Button onClick={(e, question, value) => props.handleAnswer(e, \"name\", e.target.value )} style={(props.answer.contact === \"Email\") ? style.activeButton : style.button}>Email</Button>\n            <Button onClick={(e, value) => props.contactPref(e, \"Phone\")} style={(props.answer.contact === \"Phone\") ? style.activeButton : style.button}>Phone</Button>\n        </>\n    )\n}\n\nexport default AnswerContact;"]},"metadata":{},"sourceType":"module"}