{"ast":null,"code":"var _jsxFileName = \"/Users/markgire/Desktop/loveyourbirth/src/components/ConsultRequest/HandleQuestion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport '@fontsource/roboto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HandleQuestion = props => {\n  _s();\n\n  //Nav Rendering for Smartphone vs Laptop\n  const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n\n  const updateMedia = () => {\n    setDesktop(window.innerWidth > 1000);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateMedia);\n    return () => window.removeEventListener(\"resize\", updateMedia);\n  }); //Style\n\n  const style = {\n    answerText: {\n      marginTop: !isDesktop ? 10 : 20,\n      marginBottom: !isDesktop ? 10 : 10,\n      color: \"purple\",\n      fontSize: !isDesktop ? 10 : 20,\n      fontWeight: \"bold\"\n    },\n    answerTextBold: {\n      marginTop: !isDesktop ? 10 : 20,\n      marginBottom: !isDesktop ? 10 : 10,\n      color: \"purple\",\n      fontSize: !isDesktop ? 10 : 20\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    style: style.question,\n    children: QuestionData.data[questionNum].question\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HandleQuestion, \"ZCeJ4rF9hjXbOt+NMfwIm63xs5A=\");\n\n_c = HandleQuestion;\nexport default HandleQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"HandleQuestion\");","map":{"version":3,"sources":["/Users/markgire/Desktop/loveyourbirth/src/components/ConsultRequest/HandleQuestion.js"],"names":["React","useState","useEffect","Grid","Typography","HandleQuestion","props","isDesktop","setDesktop","window","innerWidth","updateMedia","addEventListener","removeEventListener","style","answerText","marginTop","marginBottom","color","fontSize","fontWeight","answerTextBold","question","QuestionData","data","questionNum"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;AACA,OAAO,oBAAP;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAE9B;AACA,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BP,QAAQ,CAACQ,MAAM,CAACC,UAAP,GAAoB,IAArB,CAAxC;;AACA,QAAMC,WAAW,GAAG,MAAM;AACtBH,IAAAA,UAAU,CAACC,MAAM,CAACC,UAAP,GAAoB,IAArB,CAAV;AACH,GAFD;;AAGAR,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCD,WAAlC;AACA,WAAO,MAAMF,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCF,WAArC,CAAb;AACH,GAHQ,CAAT,CAP8B,CAY9B;;AACA,QAAMG,KAAK,GAAG;AACVC,IAAAA,UAAU,EAAE;AACRC,MAAAA,SAAS,EAAG,CAACT,SAAF,GAAe,EAAf,GAAoB,EADvB;AAERU,MAAAA,YAAY,EAAG,CAACV,SAAF,GAAe,EAAf,GAAoB,EAF1B;AAGRW,MAAAA,KAAK,EAAE,QAHC;AAIRC,MAAAA,QAAQ,EAAG,CAACZ,SAAF,GAAe,EAAf,GAAoB,EAJtB;AAKRa,MAAAA,UAAU,EAAE;AALJ,KADF;AAQVC,IAAAA,cAAc,EAAE;AACZL,MAAAA,SAAS,EAAG,CAACT,SAAF,GAAe,EAAf,GAAoB,EADnB;AAEZU,MAAAA,YAAY,EAAG,CAACV,SAAF,GAAe,EAAf,GAAoB,EAFtB;AAGZW,MAAAA,KAAK,EAAE,QAHK;AAIZC,MAAAA,QAAQ,EAAG,CAACZ,SAAF,GAAe,EAAf,GAAoB;AAJlB;AARN,GAAd;AAgBA,sBACI,QAAC,UAAD;AAAY,IAAA,KAAK,EAAEO,KAAK,CAACQ,QAAzB;AAAA,cAAoCC,YAAY,CAACC,IAAb,CAAkBC,WAAlB,EAA+BH;AAAnE;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAhCD;;GAAMjB,c;;KAAAA,c;AAkCN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport '@fontsource/roboto';\n\nconst HandleQuestion = (props) => {\n\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n    \n    //Style\n    const style = {\n        answerText: {\n            marginTop: (!isDesktop) ? 10 : 20,\n            marginBottom: (!isDesktop) ? 10 : 10,\n            color: \"purple\",\n            fontSize: (!isDesktop) ? 10 : 20,\n            fontWeight: \"bold\"\n        },\n        answerTextBold: {\n            marginTop: (!isDesktop) ? 10 : 20,\n            marginBottom: (!isDesktop) ? 10 : 10,\n            color: \"purple\",\n            fontSize: (!isDesktop) ? 10 : 20,\n        }\n    }\n    \n    return (\n        <Typography style={style.question}>{QuestionData.data[questionNum].question}</Typography>\n    )\n}\n\nexport default HandleQuestion;"]},"metadata":{},"sourceType":"module"}