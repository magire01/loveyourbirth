{"ast":null,"code":"var _jsxFileName = \"/Users/markgire/Desktop/loveyourbirth/src/components/ConsultRequest/ConsultFormMain.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton, LinearProgress, Modal, Card } from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport QuestionData from \"../../utilities/questions.json\";\nimport emailjs from 'emailjs-com';\nimport '@fontsource/roboto';\nimport HandleQuestion from \"./HandleQuestion\";\nimport HandleAnswer from \"./HandleAnswer\";\nimport PrevQuestion from \"./PrevQuestion\";\nimport NextQuestion from \"./NextQuestion\";\nimport SubmitConsult from \"./SubmitConsult\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConsultFormMain = props => {\n  _s();\n\n  //Nav Rendering for Smartphone vs Laptop\n  const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n\n  const updateMedia = () => {\n    setDesktop(window.innerWidth > 1000);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateMedia);\n    return () => window.removeEventListener(\"resize\", updateMedia);\n  });\n  useEffect(() => {\n    setAnswer({\n      name: \"\",\n      city: \"\",\n      phone: \"\",\n      email: \"\",\n      contact: \"\",\n      firstBirth: \"\",\n      dueDate: \"\",\n      envision: \"\",\n      why: \"\",\n      midwifery: \"\",\n      concerns: \"\",\n      selectDays: {\n        sunday: false,\n        monday: false,\n        tuesday: false,\n        wednesday: false,\n        thursday: false,\n        friday: false,\n        saturday: false\n      },\n      selectTime: {\n        morning: false,\n        afternoon: false,\n        evening: false\n      },\n      refer: \"\",\n      preference: \"\"\n    });\n  }, [props.openForm]); //Questions\n  //question number\n\n  const [questionNum, setQuestionNum] = useState(0); //error validation\n\n  const [errValidation, setErrValidation] = useState({\n    name: false,\n    city: false,\n    email: false,\n    phone: false\n  }); //progress bar\n\n  const point = 100 / QuestionData.data.length;\n  const [progress, setProgress] = useState(point); //next question button\n\n  const nextQuestion = e => {\n    e.preventDefault();\n\n    if (questionNum === 0 && answer.name == \"\") {\n      setErrValidation({ ...errValidation,\n        name: true\n      });\n    } else if (questionNum == 0 && answer.city == \"\") {\n      setErrValidation({ ...errValidation,\n        city: true\n      });\n    } else if (questionNum === 1 && answer.email == \"\") {\n      setErrValidation({ ...errValidation,\n        email: true\n      });\n    } else if (questionNum === 1 && answer.phone == \"\") {\n      setErrValidation({ ...errValidation,\n        phone: true\n      });\n    } else {\n      setQuestionNum(questionNum + 1);\n      setProgress(progress + point);\n    }\n  }; //prev question button\n\n\n  const prevQuestion = e => {\n    e.preventDefault();\n    setQuestionNum(questionNum - 1);\n    setProgress(progress - point);\n  }; //Answers\n  //Handle All Answers (Except check box questions)\n\n\n  const handleAllAnswers = (e, question, value) => {\n    switch (question) {\n      case \"city\":\n        return setAnswer({ ...answer,\n          city: value\n        });\n\n      case \"phone\":\n        return setAnswer({ ...answer,\n          phone: value\n        });\n\n      case \"email\":\n        return setAnswer({ ...answer,\n          email: value\n        });\n\n      case \"contact\":\n        return setAnswer({ ...answer,\n          contact: value\n        });\n\n      case \"firstBirth\":\n        return setAnswer({ ...answer,\n          firstBirth: value\n        });\n\n      case \"dueDate\":\n        return setAnswer({ ...answer,\n          dueDate: value\n        });\n\n      case \"envision\":\n        return setAnswer({ ...answer,\n          envision: value\n        });\n\n      case \"why\":\n        return setAnswer({ ...answer,\n          why: value\n        });\n\n      case \"midwifery\":\n        return setAnswer({ ...answer,\n          midwifery: value\n        });\n\n      case \"concerns\":\n        return setAnswer({ ...answer,\n          concerns: value\n        });\n\n      case \"refer\":\n        return setAnswer({ ...answer,\n          refer: value\n        });\n\n      case \"preference\":\n        return setAnswer({ ...answer,\n          preference: value\n        });\n\n      default:\n        return setAnswer({ ...answer,\n          name: value\n        });\n    }\n  }; //Checkbox - Select Days\n\n\n  const checkSunday = () => {\n    if (!answer.selectDays.sunday) {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          sunday: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          sunday: false\n        }\n      });\n    }\n  };\n\n  const checkMonday = () => {\n    if (!answer.selectDays.monday) {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          monday: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          monday: false\n        }\n      });\n    }\n  };\n\n  const checkTuesday = () => {\n    if (!answer.selectDays.tuesday) {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          tuesday: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          tuesday: false\n        }\n      });\n    }\n  };\n\n  const checkWednesday = () => {\n    if (!answer.selectDays.wednesday) {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          wednesday: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          wednesday: false\n        }\n      });\n    }\n  };\n\n  const checkThursday = () => {\n    if (!answer.selectDays.thursday) {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          thursday: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          thursday: false\n        }\n      });\n    }\n  };\n\n  const checkFriday = () => {\n    if (!answer.selectDays.friday) {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          friday: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          friday: false\n        }\n      });\n    }\n  };\n\n  const checkSaturday = () => {\n    if (!answer.selectDays.saturday) {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          saturday: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          saturday: false\n        }\n      });\n    }\n  }; //Checkbox - SelectTime\n\n\n  const checkMorning = () => {\n    if (!answer.selectTime.morning) {\n      setAnswer({ ...answer,\n        selectTime: { ...answer.selectTime,\n          morning: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectTime: { ...answer.selectTime,\n          morning: false\n        }\n      });\n    }\n  };\n\n  const checkAfternoon = () => {\n    if (!answer.selectTime.afternoon) {\n      setAnswer({ ...answer,\n        selectTime: { ...answer.selectTime,\n          afternoon: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectTime: { ...answer.selectTime,\n          afternoon: false\n        }\n      });\n    }\n  };\n\n  const checkEvening = () => {\n    if (!answer.selectTime.evening) {\n      setAnswer({ ...answer,\n        selectTime: { ...answer.selectTime,\n          evening: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectTime: { ...answer.selectTime,\n          evening: false\n        }\n      });\n    }\n  }; //Answer Object\n\n\n  const [answer, setAnswer] = useState({\n    name: \"\",\n    city: \"\",\n    phone: \"\",\n    email: \"\",\n    contact: \"\",\n    firstBirth: \"\",\n    dueDate: \"\",\n    envision: \"\",\n    why: \"\",\n    midwifery: \"\",\n    concerns: \"\",\n    selectDays: {\n      sunday: false,\n      monday: false,\n      tuesday: false,\n      wednesday: false,\n      thursday: false,\n      friday: false,\n      saturday: false\n    },\n    selectTime: {\n      morning: false,\n      afternoon: false,\n      evening: false\n    },\n    refer: \"\",\n    preference: \"\"\n  }); //Email JS\n\n  const sendEmail = e => {\n    e.preventDefault();\n    emailjs.send('service_sa2sv31', 'template_aldpnbc', {\n      name: answer.name,\n      city: answer.city,\n      phone: answer.phone,\n      email: answer.email,\n      contact: answer.contact,\n      firstBirth: answer.firstBirth,\n      dueDate: answer.dueDate,\n      envision: answer.envision,\n      why: answer.why,\n      midwifery: answer.midwifery,\n      concerns: answer.concerns,\n      refer: answer.refer,\n      days: Object.keys(answer.selectDays).filter(key => answer.selectDays[key]),\n      time: Object.keys(answer.selectTime).filter(key => answer.selectTime[key]),\n      preference: answer.consultPreference\n    }, 'user_VCNwVyQVStaLfnvdfDv4t').then(result => {\n      console.log(result.text);\n      props.successConsult();\n    }, error => {\n      console.log(error.text);\n    });\n    props.closeForm();\n  }; //Style\n\n\n  const style = {\n    questionSectionMain: {\n      height: !isDesktop ? 400 : 400,\n      marginBottom: \"3%\",\n      paddingLeft: !isDesktop ? 10 : 0\n    },\n    progress: {\n      marginLeft: \"3%\",\n      marginRight: \"3%\",\n      width: \"100%\"\n    },\n    contactCard: {\n      display: 'fixed',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: !isDesktop ? \"80%\" : \"80%\",\n      width: !isDesktop ? \"96%\" : \"auto\",\n      margin: !isDesktop ? \"0.5%\" : 100,\n      marginTop: !isDesktop ? 0 : 100,\n      textAlign: \"center\",\n      border: \"5px solid purple\",\n      overflowY: \"auto\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: props.openForm,\n    onClose: props.handleClose,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: style.contactCard,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        style: {\n          paddingLeft: 0,\n          paddingRight: !isDesktop ? \"4%\" : 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"left\",\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n              onClick: props.closeForm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n            variant: \"determinate\",\n            value: progress,\n            style: style.progress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: \"1\",\n            xs: \"1\",\n            children: /*#__PURE__*/_jsxDEV(PrevQuestion, {\n              questionNum: questionNum,\n              prevQuestion: prevQuestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: \"10\",\n            xs: \"10\",\n            style: style.questionSectionMain,\n            children: [/*#__PURE__*/_jsxDEV(HandleQuestion, {\n              questionNum: questionNum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(HandleAnswer, {\n              questionNum: questionNum,\n              handleAnswer: handleAllAnswers,\n              error: errValidation,\n              answer: answer,\n              checkSunday: checkSunday,\n              checkMonday: checkMonday,\n              checkTuesday: checkTuesday,\n              checkWednesday: checkWednesday,\n              checkThursday: checkThursday,\n              checkFriday: checkFriday,\n              checkSaturday: checkSaturday,\n              selectDays: answer.selectDays,\n              checkMorning: checkMorning,\n              checkAfternoon: checkAfternoon,\n              checkEvening: checkEvening,\n              selectTime: answer.selectTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: \"12\",\n              xs: \"12\",\n              children: /*#__PURE__*/_jsxDEV(SubmitConsult, {\n                questionNum: questionNum,\n                sendEmail: sendEmail,\n                nextQuestion: nextQuestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: \"1\",\n            xs: \"1\",\n            children: /*#__PURE__*/_jsxDEV(NextQuestion, {\n              questionNum: questionNum,\n              nextQuestion: nextQuestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ConsultFormMain, \"FzclTMpUqAEXoiwwifYwm+Wdrag=\");\n\n_c = ConsultFormMain;\nexport default ConsultFormMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConsultFormMain\");","map":{"version":3,"sources":["/Users/markgire/Desktop/loveyourbirth/src/components/ConsultRequest/ConsultFormMain.js"],"names":["React","useState","useEffect","Grid","IconButton","LinearProgress","Modal","Card","CloseIcon","QuestionData","emailjs","HandleQuestion","HandleAnswer","PrevQuestion","NextQuestion","SubmitConsult","ConsultFormMain","props","isDesktop","setDesktop","window","innerWidth","updateMedia","addEventListener","removeEventListener","setAnswer","name","city","phone","email","contact","firstBirth","dueDate","envision","why","midwifery","concerns","selectDays","sunday","monday","tuesday","wednesday","thursday","friday","saturday","selectTime","morning","afternoon","evening","refer","preference","openForm","questionNum","setQuestionNum","errValidation","setErrValidation","point","data","length","progress","setProgress","nextQuestion","e","preventDefault","answer","prevQuestion","handleAllAnswers","question","value","checkSunday","checkMonday","checkTuesday","checkWednesday","checkThursday","checkFriday","checkSaturday","checkMorning","checkAfternoon","checkEvening","sendEmail","send","days","Object","keys","filter","key","time","consultPreference","then","result","console","log","text","successConsult","error","closeForm","style","questionSectionMain","height","marginBottom","paddingLeft","marginLeft","marginRight","width","contactCard","display","justifyContent","alignItems","margin","marginTop","textAlign","border","overflowY","handleClose","paddingRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton, LinearProgress, Modal, Card } from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport QuestionData from \"../../utilities/questions.json\";\nimport emailjs from 'emailjs-com';\nimport '@fontsource/roboto';\n\nimport HandleQuestion from \"./HandleQuestion\";\nimport HandleAnswer from \"./HandleAnswer\";\nimport PrevQuestion from \"./PrevQuestion\";\nimport NextQuestion from \"./NextQuestion\";\nimport SubmitConsult from \"./SubmitConsult\";\n\nconst ConsultFormMain = (props) => {\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n    useEffect(() => {\n        setAnswer({\n            name: \"\",\n        city: \"\",\n        phone: \"\",\n        email: \"\",\n        contact: \"\",\n        firstBirth: \"\",\n        dueDate: \"\",\n        envision: \"\",\n        why: \"\",\n        midwifery: \"\",\n        concerns: \"\",\n        selectDays: {\n            sunday: false,\n            monday: false,\n            tuesday: false,\n            wednesday: false,\n            thursday: false,\n            friday: false,\n            saturday: false\n        },\n        selectTime: {\n            morning: false,\n            afternoon: false,\n            evening: false\n        },\n        refer: \"\",\n        preference: \"\"\n        })\n    }, [props.openForm]);\n//Questions\n    //question number\n    const [questionNum, setQuestionNum] = useState(0)\n    //error validation\n    const [errValidation, setErrValidation] = useState({\n        name: false,\n        city: false,\n        email: false,\n        phone: false\n    })\n    //progress bar\n    const point = 100/QuestionData.data.length\n    const [progress, setProgress] = useState(point)\n\n    //next question button\n    const nextQuestion = (e) => {\n        e.preventDefault();\n        if (questionNum === 0 && answer.name == \"\")\n        {\n            setErrValidation({ ...errValidation, name: true})\n        } else if (questionNum == 0 && answer.city == \"\") {\n            setErrValidation({ ...errValidation, city: true})\n        } else if (questionNum === 1 && answer.email == \"\") {\n            setErrValidation({ ...errValidation, email: true})\n        } else if (questionNum === 1 && answer.phone == \"\") {\n            setErrValidation({ ...errValidation, phone: true})\n        } else {\n            setQuestionNum(questionNum + 1)\n            setProgress(progress + point)\n        }\n    }\n    //prev question button\n    const prevQuestion = (e) => {\n        e.preventDefault();\n        setQuestionNum(questionNum - 1)\n        setProgress(progress - point)\n    }\n//Answers\n    //Handle All Answers (Except check box questions)\n    const handleAllAnswers = (e, question, value) => {\n        switch(question) {\n            case \"city\":\n                return setAnswer({ ...answer, city: value })\n            case \"phone\":\n                return setAnswer({ ...answer, phone: value})\n            case \"email\":\n                return setAnswer({ ...answer, email: value})\n            case \"contact\":\n                return setAnswer({ ...answer, contact: value})\n            case \"firstBirth\":\n                return setAnswer({ ...answer, firstBirth: value})\n            case \"dueDate\":\n                return setAnswer({ ...answer, dueDate: value})\n            case \"envision\":\n                return setAnswer({ ...answer, envision: value})\n            case \"why\":\n                return setAnswer({ ...answer, why: value})\n            case \"midwifery\":\n                return setAnswer({ ...answer, midwifery: value})\n            case \"concerns\":\n                return setAnswer({ ...answer, concerns: value})\n            case \"refer\":\n                return setAnswer({ ...answer, refer: value})\n            case \"preference\":\n                return setAnswer({ ...answer, preference: value})\n            default:\n                return setAnswer({ ...answer, name: value })\n        }\n    }\n\n    //Checkbox - Select Days\n    const checkSunday = () => {\n        if(!answer.selectDays.sunday) {\n            setAnswer({ ...answer, selectDays:{ ...answer.selectDays, sunday: true } })\n        } else {\n            setAnswer({ ...answer, selectDays: { ...answer.selectDays, sunday: false } })\n        }\n    } \n    const checkMonday = () => {\n        if(!answer.selectDays.monday) {\n            setAnswer({ ...answer, selectDays:{ ...answer.selectDays, monday: true } })\n        } else {\n            setAnswer({ ...answer, selectDays: { ...answer.selectDays, monday: false } })\n        }\n    } \n    const checkTuesday = () => {\n        if(!answer.selectDays.tuesday) {\n            setAnswer({ ...answer, selectDays:{ ...answer.selectDays, tuesday: true } })\n        } else {\n            setAnswer({ ...answer, selectDays: { ...answer.selectDays, tuesday: false } })\n        }\n    } \n    const checkWednesday = () => {\n        if(!answer.selectDays.wednesday) {\n            setAnswer({ ...answer, selectDays:{ ...answer.selectDays, wednesday: true } })\n        } else {\n            setAnswer({ ...answer, selectDays: { ...answer.selectDays, wednesday: false } })\n        }\n    }\n    const checkThursday = () => {\n        if(!answer.selectDays.thursday) {\n            setAnswer({ ...answer, selectDays:{ ...answer.selectDays, thursday: true } })\n        } else {\n            setAnswer({ ...answer, selectDays: { ...answer.selectDays, thursday: false } })\n        }\n    } \n    const checkFriday = () => {\n        if(!answer.selectDays.friday) {\n            setAnswer({ ...answer, selectDays:{ ...answer.selectDays, friday: true } })\n        } else {\n            setAnswer({ ...answer, selectDays: { ...answer.selectDays, friday: false } })\n        }\n    } \n    const checkSaturday = () => {\n        if(!answer.selectDays.saturday) {\n            setAnswer({ ...answer, selectDays:{ ...answer.selectDays, saturday: true } })\n        } else {\n            setAnswer({ ...answer, selectDays: { ...answer.selectDays, saturday: false } })\n        }\n    } \n\n    //Checkbox - SelectTime\n    const checkMorning = () => {\n        if(!answer.selectTime.morning) {\n            setAnswer({ ...answer, selectTime: { ...answer.selectTime, morning: true } })\n        } else {\n            setAnswer({ ...answer, selectTime: { ...answer.selectTime, morning: false } })\n        }\n    }\n    const checkAfternoon = () => {\n        if(!answer.selectTime.afternoon) {\n            setAnswer({ ...answer, selectTime: { ...answer.selectTime, afternoon: true } })\n        } else {\n            setAnswer({ ...answer, selectTime: { ...answer.selectTime, afternoon: false } })\n        }\n    }\n    const checkEvening = () => {\n        if(!answer.selectTime.evening) {\n            setAnswer({ ...answer, selectTime: { ...answer.selectTime, evening: true } })\n        } else {\n            setAnswer({ ...answer, selectTime: { ...answer.selectTime, evening: false } })\n        }\n    }\n\n    //Answer Object\n    const [answer, setAnswer] = useState({\n        name: \"\",\n        city: \"\",\n        phone: \"\",\n        email: \"\",\n        contact: \"\",\n        firstBirth: \"\",\n        dueDate: \"\",\n        envision: \"\",\n        why: \"\",\n        midwifery: \"\",\n        concerns: \"\",\n        selectDays: {\n            sunday: false,\n            monday: false,\n            tuesday: false,\n            wednesday: false,\n            thursday: false,\n            friday: false,\n            saturday: false\n        },\n        selectTime: {\n            morning: false,\n            afternoon: false,\n            evening: false\n        },\n        refer: \"\",\n        preference: \"\"\n    })\n\n    //Email JS\n    const sendEmail = (e) => {\n        e.preventDefault();\n        emailjs.send('service_sa2sv31', 'template_aldpnbc', \n        { \n            name: answer.name, \n            city: answer.city, \n            phone: answer.phone,\n            email: answer.email, \n            contact: answer.contact,\n            firstBirth: answer.firstBirth,\n            dueDate: answer.dueDate,\n            envision: answer.envision,\n            why: answer.why,\n            midwifery: answer.midwifery,\n            concerns: answer.concerns,\n            refer: answer.refer,\n            days: Object.keys(answer.selectDays).filter(key => answer.selectDays[key]),\n            time: Object.keys(answer.selectTime).filter(key => answer.selectTime[key]),\n            preference: answer.consultPreference\n        }, 'user_VCNwVyQVStaLfnvdfDv4t')\n        .then((result) => {\n            console.log(result.text);\n            props.successConsult();\n        }, (error) => {\n            console.log(error.text);\n        });\n        props.closeForm();\n    };\n    \n//Style\n    const style = {\n        questionSectionMain: {\n            height: (!isDesktop) ? 400 : 400,\n            marginBottom: \"3%\",\n            paddingLeft: (!isDesktop) ? 10: 0\n        },\n        progress: {\n            marginLeft: \"3%\",\n            marginRight: \"3%\",\n            width: \"100%\"\n        },\n        contactCard: {\n            display: 'fixed',  \n            justifyContent:'center', \n            alignItems:'center',\n            height: (!isDesktop) ? \"80%\" : \"80%\",\n            width: (!isDesktop) ? \"96%\" : \"auto\",\n            margin: (!isDesktop) ? \"0.5%\" : 100,\n            marginTop: (!isDesktop) ? 0 : 100,\n            textAlign: \"center\",\n            border: \"5px solid purple\",\n            overflowY: \"auto\"\n          }\n    }\n\n    return (\n        <Modal\n        open={props.openForm}\n        onClose={props.handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\">\n            <Card style={style.contactCard}>\n                <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\"  style={{ paddingLeft: 0, paddingRight: (!isDesktop) ? \"4%\" : 0 }}>\n                    <Grid container direction=\"row\" justifyContent=\"left\">\n{/* Close Button */}\n                        <IconButton>\n                            <CloseIcon onClick={props.closeForm} />\n                        </IconButton>\n{/* Progress Bar */}\n                        <LinearProgress variant=\"determinate\" value={progress} style={style.progress} />\n                    </Grid>\n{/* PrevQuestion */}\n                    <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                        <Grid item md=\"1\" xs=\"1\">\n                            <PrevQuestion \n                            questionNum={questionNum}\n                            prevQuestion={prevQuestion}/>\n                        </Grid>\n{/* Question and Answer */}\n                        <Grid item md=\"10\" xs=\"10\" style={style.questionSectionMain}>\n                            <HandleQuestion \n                            questionNum={questionNum}\n                            />\n                            <HandleAnswer \n                            questionNum={questionNum}\n                            handleAnswer={handleAllAnswers}\n                            error={errValidation}\n                            answer={answer}\n                            checkSunday={checkSunday}\n                            checkMonday={checkMonday}\n                            checkTuesday={checkTuesday}\n                            checkWednesday={checkWednesday}\n                            checkThursday={checkThursday}\n                            checkFriday={checkFriday}\n                            checkSaturday={checkSaturday}\n                            selectDays={answer.selectDays}\n                            checkMorning={checkMorning}\n                            checkAfternoon={checkAfternoon}\n                            checkEvening={checkEvening}\n                            selectTime={answer.selectTime}\n                            />\n{/* Next and Submit Button */}\n                            <Grid item md=\"12\" xs=\"12\">\n                                <SubmitConsult \n                                questionNum={questionNum}\n                                sendEmail={sendEmail}\n                                nextQuestion={nextQuestion}/>\n                            </Grid> \n                        </Grid>\n{/* PrevQuestion */}\n                        <Grid item md=\"1\" xs=\"1\">\n                            <NextQuestion \n                            questionNum={questionNum}\n                            nextQuestion={nextQuestion}/>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Card>\n        </Modal>\n    )\n}\n\nexport default ConsultFormMain;"]},"metadata":{},"sourceType":"module"}