{"ast":null,"code":"var _jsxFileName = \"/Users/markgire/Desktop/loveyourbirth/src/components/ConsultRequest/ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, Button, Typography, IconButton, LinearProgress, Checkbox } from \"@material-ui/core\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport CloseIcon from '@material-ui/icons/Close';\nimport QuestionData from \"../../utilities/questions.json\";\nimport emailjs from 'emailjs-com';\nimport '@fontsource/roboto';\nimport HandleQuestion from \"./HandleQuestion\";\nimport HandleAnswer from \"./HandleAnswer\";\nimport PrevQuestion from \"./PrevQuestion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = props => {\n  _s();\n\n  //Nav Rendering for Smartphone vs Laptop\n  const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n\n  const updateMedia = () => {\n    setDesktop(window.innerWidth > 1000);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateMedia);\n    return () => window.removeEventListener(\"resize\", updateMedia);\n  }); //question # state\n\n  const [questionNum, setQuestionNum] = useState(0); //error validation\n\n  const [errValidation, setErrValidation] = useState({\n    name: false,\n    city: false,\n    email: false,\n    phone: false\n  }); //progress bar\n\n  const point = 100 / QuestionData.data.length;\n  const [progress, setProgress] = useState(point); //next question button\n\n  const nextQuestion = e => {\n    e.preventDefault();\n\n    if (questionNum === 0 && answer.name == \"\") {\n      setErrValidation({ ...errValidation,\n        name: true\n      });\n    } else if (questionNum == 0 && answer.city == \"\") {\n      setErrValidation({ ...errValidation,\n        city: true\n      });\n    } else if (questionNum === 1 && answer.email == \"\") {\n      setErrValidation({ ...errValidation,\n        email: true\n      });\n    } else if (questionNum === 1 && answer.phone == \"\") {\n      setErrValidation({ ...errValidation,\n        phone: true\n      });\n    } else {\n      setQuestionNum(questionNum + 1);\n      setProgress(progress + point);\n    }\n  }; //prev question button\n\n\n  const prevQuestion = e => {\n    e.preventDefault();\n    setQuestionNum(questionNum - 1);\n    setProgress(progress - point);\n  }; //Answer Object\n\n\n  const [answer, setAnswer] = useState({\n    name: \"\",\n    city: \"\",\n    phone: \"\",\n    email: \"\",\n    contact: \"\",\n    firstBirth: \"\",\n    dueDate: \"\",\n    envision: \"\",\n    why: \"\",\n    midwifery: \"\",\n    concerns: \"\",\n    selectDays: {\n      sunday: false,\n      monday: false,\n      tuesday: false,\n      wednesday: false,\n      thursday: false,\n      friday: false,\n      saturday: false\n    },\n    selectTime: {\n      morning: false,\n      afternoon: false,\n      evening: false\n    },\n    refer: \"\",\n    preference: \"\"\n  }); //Handle All Answers (Except check box questions)\n\n  const handleAllAnswers = (e, question, value) => {\n    switch (question) {\n      case \"city\":\n        return setAnswer({ ...answer,\n          city: value\n        });\n\n      case \"phone\":\n        return setAnswer({ ...answer,\n          phone: value\n        });\n\n      case \"email\":\n        return setAnswer({ ...answer,\n          email: value\n        });\n\n      case \"contact\":\n        return setAnswer({ ...answer,\n          contact: value\n        });\n\n      case \"firstBirth\":\n        return setAnswer({ ...answer,\n          firstBirth: value\n        });\n\n      case \"dueDate\":\n        return setAnswer({ ...answer,\n          dueDate: value\n        });\n\n      case \"envision\":\n        return setAnswer({ ...answer,\n          envision: value\n        });\n\n      case \"why\":\n        return setAnswer({ ...answer,\n          why: value\n        });\n\n      case \"midwifery\":\n        return setAnswer({ ...answer,\n          midwifery: value\n        });\n\n      case \"concerns\":\n        return setAnswer({ ...answer,\n          concerns: value\n        });\n\n      case \"refer\":\n        return setAnswer({ ...answer,\n          refer: value\n        });\n\n      case \"preference\":\n        return setAnswer({ ...answer,\n          preference: value\n        });\n\n      default:\n        return setAnswer({ ...answer,\n          name: value\n        });\n    }\n  }; //Checkbox - Select Days\n\n\n  const checkSunday = () => {\n    if (!answer.selectDays.sunday) {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          sunday: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          sunday: false\n        }\n      });\n    }\n  };\n\n  const checkMonday = () => {\n    if (!answer.selectDays.monday) {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          monday: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          monday: false\n        }\n      });\n    }\n  };\n\n  const checkTuesday = () => {\n    if (!answer.selectDays.tuesday) {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          tuesday: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          tuesday: false\n        }\n      });\n    }\n  };\n\n  const checkWednesday = () => {\n    if (!answer.selectDays.wednesday) {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          wednesday: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          wednesday: false\n        }\n      });\n    }\n  };\n\n  const checkThursday = () => {\n    if (!answer.selectDays.thursday) {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          thursday: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          thursday: false\n        }\n      });\n    }\n  };\n\n  const checkFriday = () => {\n    if (!answer.selectDays.friday) {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          friday: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          friday: false\n        }\n      });\n    }\n  };\n\n  const checkSaturday = () => {\n    if (!answer.selectDays.saturday) {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          saturday: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectDays: { ...answer.selectDays,\n          saturday: false\n        }\n      });\n    }\n  }; //Checkbox - SelectTime\n\n\n  const checkMorning = () => {\n    if (!answer.selectTime.morning) {\n      setAnswer({ ...answer,\n        selectTime: { ...answer.selectTime,\n          morning: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectTime: { ...answer.selectTime,\n          morning: false\n        }\n      });\n    }\n  };\n\n  const checkAfternoon = () => {\n    if (!answer.selectTime.afternoon) {\n      setAnswer({ ...answer,\n        selectTime: { ...answer.selectTime,\n          afternoon: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectTime: { ...answer.selectTime,\n          afternoon: false\n        }\n      });\n    }\n  };\n\n  const checkEvening = () => {\n    if (!answer.selectTime.evening) {\n      setAnswer({ ...answer,\n        selectTime: { ...answer.selectTime,\n          evening: true\n        }\n      });\n    } else {\n      setAnswer({ ...answer,\n        selectTime: { ...answer.selectTime,\n          evening: false\n        }\n      });\n    }\n  }; //Email JS\n\n\n  const sendEmail = e => {\n    e.preventDefault();\n    emailjs.send('service_sa2sv31', 'template_aldpnbc', {\n      name: answer.name,\n      city: answer.city,\n      phone: answer.phone,\n      email: answer.email,\n      contact: answer.contact,\n      firstBirth: answer.firstBirth,\n      dueDate: answer.dueDate,\n      envision: answer.envision,\n      why: answer.why,\n      midwifery: answer.midwifery,\n      concerns: answer.concerns,\n      refer: answer.refer,\n      days: Object.keys(answer.selectDays).filter(key => answer.selectDays[key]),\n      time: Object.keys(answer.selectTime).filter(key => answer.selectTime[key]),\n      preference: answer.consultPreference\n    }, 'user_VCNwVyQVStaLfnvdfDv4t').then(result => {\n      console.log(result.text);\n      props.successConsult();\n    }, error => {\n      console.log(error.text);\n    });\n    props.closeForm();\n  }; //Style\n\n\n  const style = {\n    card: {\n      display: 'fixed',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: !isDesktop ? \"60%\" : \"80%\",\n      width: !isDesktop ? \"97%\" : \"auto\",\n      margin: !isDesktop ? 0 : 100,\n      marginTop: !isDesktop ? 0 : 100,\n      textAlign: \"center\",\n      border: \"5px solid purple\",\n      backgroundColor: \"white\"\n    },\n    title: {\n      marginTop: 20,\n      marginBottom: 20\n    },\n    submit: {\n      // position: \"absolute\", \n      // bottom: (!isDesktop) ? \"40%\" : \"10%\",\n      color: \"white\",\n      backgroundColor: \"purple\",\n      marginTop: 20\n    },\n    next: {\n      // position: \"absolute\", \n      // bottom: (!isDesktop) ? \"40%\" : \"10%\",\n      color: \"white\",\n      backgroundColor: \"#d9b3ff\",\n      marginTop: 20\n    },\n    questionSection: {\n      height: !isDesktop ? 200 : 400,\n      marginBottom: 100\n    },\n    questionSection2: {\n      height: !isDesktop ? 400 : 400,\n      marginBottom: \"3%\",\n      paddingLeft: !isDesktop ? 10 : 0\n    },\n    questionSection3: {\n      height: !isDesktop ? 200 : 300\n    },\n    progress: {\n      marginLeft: \"3%\",\n      marginRight: \"3%\",\n      width: \"100%\"\n    },\n    nextButtonActive: {\n      color: \"blue\"\n    },\n    nextButtonDisabled: {\n      color: \"white\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      style: {\n        paddingLeft: 0,\n        paddingRight: !isDesktop ? \"4%\" : 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"left\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            onClick: props.closeForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          value: progress,\n          style: style.progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: \"1\",\n          xs: \"1\",\n          children: /*#__PURE__*/_jsxDEV(PrevQuestion, {\n            questionNum: questionNum,\n            prevQuestion: prevQuestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: \"10\",\n          xs: \"10\",\n          style: style.questionSection2,\n          children: [/*#__PURE__*/_jsxDEV(HandleQuestion, {\n            questionNum: questionNum\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(HandleAnswer, {\n            questionNum: questionNum,\n            handleAnswer: handleAllAnswers,\n            error: errValidation,\n            answer: answer,\n            checkSunday: checkSunday,\n            checkMonday: checkMonday,\n            checkTuesday: checkTuesday,\n            checkWednesday: checkWednesday,\n            checkThursday: checkThursday,\n            checkFriday: checkFriday,\n            checkSaturday: checkSaturday,\n            selectDays: answer.selectDays,\n            checkMorning: checkMorning,\n            checkAfternoon: checkAfternoon,\n            checkEvening: checkEvening,\n            selectTime: answer.selectTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: \"12\",\n            xs: \"12\",\n            children: questionNum === QuestionData.data.length - 1 ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: sendEmail,\n              style: style.submit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 31\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: nextQuestion,\n              style: style.next,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: \"1\",\n          xs: \"1\",\n          children: questionNum === QuestionData.data.length - 1 ? /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n              style: style.nextButtonDisabled\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: nextQuestion,\n            children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n              style: style.nextButtonActive\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactForm, \"qmVrhb/8jYTtLViWXRaBjHuRrlE=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/markgire/Desktop/loveyourbirth/src/components/ConsultRequest/ContactForm.js"],"names":["React","useState","useEffect","Grid","Button","Typography","IconButton","LinearProgress","Checkbox","ArrowBackIcon","ArrowForwardIcon","CloseIcon","QuestionData","emailjs","HandleQuestion","HandleAnswer","PrevQuestion","ContactForm","props","isDesktop","setDesktop","window","innerWidth","updateMedia","addEventListener","removeEventListener","questionNum","setQuestionNum","errValidation","setErrValidation","name","city","email","phone","point","data","length","progress","setProgress","nextQuestion","e","preventDefault","answer","prevQuestion","setAnswer","contact","firstBirth","dueDate","envision","why","midwifery","concerns","selectDays","sunday","monday","tuesday","wednesday","thursday","friday","saturday","selectTime","morning","afternoon","evening","refer","preference","handleAllAnswers","question","value","checkSunday","checkMonday","checkTuesday","checkWednesday","checkThursday","checkFriday","checkSaturday","checkMorning","checkAfternoon","checkEvening","sendEmail","send","days","Object","keys","filter","key","time","consultPreference","then","result","console","log","text","successConsult","error","closeForm","style","card","display","justifyContent","alignItems","height","width","margin","marginTop","textAlign","border","backgroundColor","title","marginBottom","submit","color","next","questionSection","questionSection2","paddingLeft","questionSection3","marginLeft","marginRight","nextButtonActive","nextButtonDisabled","paddingRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, Typography, IconButton, LinearProgress, Checkbox } from \"@material-ui/core\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport CloseIcon from '@material-ui/icons/Close';\nimport QuestionData from \"../../utilities/questions.json\";\nimport emailjs from 'emailjs-com';\nimport '@fontsource/roboto';\n\nimport HandleQuestion from \"./HandleQuestion\";\nimport HandleAnswer from \"./HandleAnswer\";\nimport PrevQuestion from \"./PrevQuestion\";\n\nconst ContactForm = (props) => {\n    //Nav Rendering for Smartphone vs Laptop\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n    \n    //question # state\n    const [questionNum, setQuestionNum] = useState(0)\n\n    //error validation\n    const [errValidation, setErrValidation] = useState({\n        name: false,\n        city: false,\n        email: false,\n        phone: false\n    })\n\n    //progress bar\n    const point = 100/QuestionData.data.length\n    const [progress, setProgress] = useState(point)\n\n    //next question button\n    const nextQuestion = (e) => {\n        e.preventDefault();\n        if (questionNum === 0 && answer.name == \"\")\n        {\n            setErrValidation({ ...errValidation, name: true})\n        } else if (questionNum == 0 && answer.city == \"\") {\n            setErrValidation({ ...errValidation, city: true})\n        } else if (questionNum === 1 && answer.email == \"\") {\n            setErrValidation({ ...errValidation, email: true})\n        } else if (questionNum === 1 && answer.phone == \"\") {\n            setErrValidation({ ...errValidation, phone: true})\n        } else {\n            setQuestionNum(questionNum + 1)\n            setProgress(progress + point)\n        }\n    }\n    //prev question button\n    const prevQuestion = (e) => {\n        e.preventDefault();\n        setQuestionNum(questionNum - 1)\n        setProgress(progress - point)\n    }\n    //Answer Object\n    const [answer, setAnswer] = useState({\n        name: \"\",\n        city: \"\",\n        phone: \"\",\n        email: \"\",\n        contact: \"\",\n        firstBirth: \"\",\n        dueDate: \"\",\n        envision: \"\",\n        why: \"\",\n        midwifery: \"\",\n        concerns: \"\",\n        selectDays: {\n            sunday: false,\n            monday: false,\n            tuesday: false,\n            wednesday: false,\n            thursday: false,\n            friday: false,\n            saturday: false\n        },\n        selectTime: {\n            morning: false,\n            afternoon: false,\n            evening: false\n        },\n        refer: \"\",\n        preference: \"\"\n    })\n    //Handle All Answers (Except check box questions)\n    const handleAllAnswers = (e, question, value) => {\n        switch(question) {\n            case \"city\":\n                return setAnswer({ ...answer, city: value })\n            case \"phone\":\n                return setAnswer({ ...answer, phone: value})\n            case \"email\":\n                return setAnswer({ ...answer, email: value})\n            case \"contact\":\n                return setAnswer({ ...answer, contact: value})\n            case \"firstBirth\":\n                return setAnswer({ ...answer, firstBirth: value})\n            case \"dueDate\":\n                return setAnswer({ ...answer, dueDate: value})\n            case \"envision\":\n                return setAnswer({ ...answer, envision: value})\n            case \"why\":\n                return setAnswer({ ...answer, why: value})\n            case \"midwifery\":\n                return setAnswer({ ...answer, midwifery: value})\n            case \"concerns\":\n                return setAnswer({ ...answer, concerns: value})\n            case \"refer\":\n                return setAnswer({ ...answer, refer: value})\n            case \"preference\":\n                return setAnswer({ ...answer, preference: value})\n            default:\n                return setAnswer({ ...answer, name: value })\n        }\n    }\n\n    //Checkbox - Select Days\n    const checkSunday = () => {\n        if(!answer.selectDays.sunday) {\n            setAnswer({ ...answer, selectDays:{ ...answer.selectDays, sunday: true } })\n        } else {\n            setAnswer({ ...answer, selectDays: { ...answer.selectDays, sunday: false } })\n        }\n    } \n    const checkMonday = () => {\n        if(!answer.selectDays.monday) {\n            setAnswer({ ...answer, selectDays:{ ...answer.selectDays, monday: true } })\n        } else {\n            setAnswer({ ...answer, selectDays: { ...answer.selectDays, monday: false } })\n        }\n    } \n    const checkTuesday = () => {\n        if(!answer.selectDays.tuesday) {\n            setAnswer({ ...answer, selectDays:{ ...answer.selectDays, tuesday: true } })\n        } else {\n            setAnswer({ ...answer, selectDays: { ...answer.selectDays, tuesday: false } })\n        }\n    } \n    const checkWednesday = () => {\n        if(!answer.selectDays.wednesday) {\n            setAnswer({ ...answer, selectDays:{ ...answer.selectDays, wednesday: true } })\n        } else {\n            setAnswer({ ...answer, selectDays: { ...answer.selectDays, wednesday: false } })\n        }\n    }\n    const checkThursday = () => {\n        if(!answer.selectDays.thursday) {\n            setAnswer({ ...answer, selectDays:{ ...answer.selectDays, thursday: true } })\n        } else {\n            setAnswer({ ...answer, selectDays: { ...answer.selectDays, thursday: false } })\n        }\n    } \n    const checkFriday = () => {\n        if(!answer.selectDays.friday) {\n            setAnswer({ ...answer, selectDays:{ ...answer.selectDays, friday: true } })\n        } else {\n            setAnswer({ ...answer, selectDays: { ...answer.selectDays, friday: false } })\n        }\n    } \n    const checkSaturday = () => {\n        if(!answer.selectDays.saturday) {\n            setAnswer({ ...answer, selectDays:{ ...answer.selectDays, saturday: true } })\n        } else {\n            setAnswer({ ...answer, selectDays: { ...answer.selectDays, saturday: false } })\n        }\n    } \n    //Checkbox - SelectTime\n    const checkMorning = () => {\n        if(!answer.selectTime.morning) {\n            setAnswer({ ...answer, selectTime: { ...answer.selectTime, morning: true } })\n        } else {\n            setAnswer({ ...answer, selectTime: { ...answer.selectTime, morning: false } })\n        }\n    }\n    const checkAfternoon = () => {\n        if(!answer.selectTime.afternoon) {\n            setAnswer({ ...answer, selectTime: { ...answer.selectTime, afternoon: true } })\n        } else {\n            setAnswer({ ...answer, selectTime: { ...answer.selectTime, afternoon: false } })\n        }\n    }\n    const checkEvening = () => {\n        if(!answer.selectTime.evening) {\n            setAnswer({ ...answer, selectTime: { ...answer.selectTime, evening: true } })\n        } else {\n            setAnswer({ ...answer, selectTime: { ...answer.selectTime, evening: false } })\n        }\n    }\n    //Email JS\n    const sendEmail = (e) => {\n        e.preventDefault();\n        emailjs.send('service_sa2sv31', 'template_aldpnbc', \n        { \n            name: answer.name, \n            city: answer.city, \n            phone: answer.phone,\n            email: answer.email, \n            contact: answer.contact,\n            firstBirth: answer.firstBirth,\n            dueDate: answer.dueDate,\n            envision: answer.envision,\n            why: answer.why,\n            midwifery: answer.midwifery,\n            concerns: answer.concerns,\n            refer: answer.refer,\n            days: Object.keys(answer.selectDays).filter(key => answer.selectDays[key]),\n            time: Object.keys(answer.selectTime).filter(key => answer.selectTime[key]),\n            preference: answer.consultPreference\n        }, 'user_VCNwVyQVStaLfnvdfDv4t')\n        .then((result) => {\n            console.log(result.text);\n            props.successConsult();\n        }, (error) => {\n            console.log(error.text);\n        });\n        props.closeForm();\n    };\n    \n    //Style\n    const style = {\n        card: {\n            display: 'fixed',  \n            justifyContent:'center', \n            alignItems:'center',\n            height: (!isDesktop) ? \"60%\" : \"80%\",\n            width: (!isDesktop) ? \"97%\" : \"auto\",\n            margin: (!isDesktop) ? 0 : 100,\n            marginTop: (!isDesktop) ? 0 : 100,\n            textAlign: \"center\",\n            border: \"5px solid purple\",\n            backgroundColor: \"white\"\n        },\n        title: {\n            marginTop: 20,\n            marginBottom: 20\n        },\n        submit: { \n            // position: \"absolute\", \n            // bottom: (!isDesktop) ? \"40%\" : \"10%\",\n            color: \"white\",\n            backgroundColor: \"purple\",\n            marginTop: 20\n        },\n        next: { \n            // position: \"absolute\", \n            // bottom: (!isDesktop) ? \"40%\" : \"10%\",\n            color: \"white\",\n            backgroundColor: \"#d9b3ff\",\n            marginTop: 20\n        },\n        questionSection: {\n            height: (!isDesktop) ? 200 : 400,\n            marginBottom: 100\n        },\n        questionSection2: {\n            height: (!isDesktop) ? 400 : 400,\n            marginBottom: \"3%\",\n            paddingLeft: (!isDesktop) ? 10: 0\n        },\n        questionSection3: {\n            height: (!isDesktop) ? 200: 300\n        },\n        progress: {\n            marginLeft: \"3%\",\n            marginRight: \"3%\",\n            width: \"100%\"\n        },\n        nextButtonActive: {\n            color: \"blue\"\n        },\n        nextButtonDisabled: {\n            color: \"white\"\n        }\n    }\n\n    return (\n        <div>\n            <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\"  style={{ paddingLeft: 0, paddingRight: (!isDesktop) ? \"4%\" : 0 }}>\n                <Grid container direction=\"row\" justifyContent=\"left\">\n                    <IconButton>\n                        <CloseIcon onClick={props.closeForm} />\n                    </IconButton>\n                        <LinearProgress variant=\"determinate\" value={progress} style={style.progress} />\n                </Grid>\n                <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                    <Grid item md=\"1\" xs=\"1\">\n                        <PrevQuestion \n                        questionNum={questionNum}\n                        prevQuestion={prevQuestion}/>\n                    </Grid>\n    {/* Question and Answer */}\n                    <Grid item md=\"10\" xs=\"10\" style={style.questionSection2}>\n                        <HandleQuestion \n                        questionNum={questionNum}\n                        />\n                        <HandleAnswer \n                        questionNum={questionNum}\n                        handleAnswer={handleAllAnswers}\n                        error={errValidation}\n                        answer={answer}\n                        checkSunday={checkSunday}\n                        checkMonday={checkMonday}\n                        checkTuesday={checkTuesday}\n                        checkWednesday={checkWednesday}\n                        checkThursday={checkThursday}\n                        checkFriday={checkFriday}\n                        checkSaturday={checkSaturday}\n                        selectDays={answer.selectDays}\n                        checkMorning={checkMorning}\n                        checkAfternoon={checkAfternoon}\n                        checkEvening={checkEvening}\n                        selectTime={answer.selectTime}\n                        />\n                        <Grid item md=\"12\" xs=\"12\">\n                            {(questionNum === QuestionData.data.length - 1) \n                            ? <Button onClick={sendEmail} style={style.submit}>Submit</Button> \n                            : <Button onClick={nextQuestion} style={style.next}>Next</Button>}\n                        </Grid> \n                    </Grid>\n                    <Grid item md=\"1\" xs=\"1\">\n                        {(questionNum === QuestionData.data.length - 1) \n                        ? <IconButton>\n                            <ArrowForwardIcon style={style.nextButtonDisabled}/>\n                        </IconButton>\n                        : <IconButton onClick={nextQuestion}>\n                            <ArrowForwardIcon style={style.nextButtonActive}/>\n                          </IconButton>}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}